{
	"id": "54ed8eddb208ebf64b38c916b2a27b50",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ub.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.13;\n\nimport {ERC20, IERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Capped} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/security/Pausable.sol\";\n\n/// @title Unibase Token Contract\n/// @notice Implements an ERC20 token with a cap, pausability, ownership, and a whitelist feature.\ncontract Unibase is Pausable, ERC20Capped, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    mapping(address => bool) private _isWhitelisted;\n\n    event WhitelistUpdated(address indexed account, bool isWhitelisted);\n\n    /// @notice Initializes the contract.\n    /// @param name The name of the token.\n    /// @param symbol The symbol of the token.\n    /// @param cap The maximum total supply of the token (e.g., for 1 million tokens with 18 decimals, pass 1000000 * 10**18).\n    /// @param admin The address to be set as the default admin of the token.\n    /// @param pauser The address to be set as the pauser\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 cap,\n        address admin,\n        address pauser\n    ) ERC20(name, symbol) ERC20Capped(cap) {\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(PAUSER_ROLE, pauser);\n        _setRoleAdmin(PAUSER_ROLE, PAUSER_ROLE);\n        _pause();\n    }\n\n    /// @notice Allows the pause controller address to pause all token transfers for non-whitelisted addresses.\n    function pause() external onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    /// @notice Allows the pause controller address to unpause the token transfers.\n    function unpause() external onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    /// @notice Set the minter address by granting MINTER_ROLE to the specified address.\n    /// @param minter The address to be granted the MINTER_ROLE.\n    function setMinter(address minter) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(minter != address(0), \"Minter cannot be zero address\");\n        _grantRole(MINTER_ROLE, minter);\n    }\n\n    /// @notice Allows the minter to mint new tokens, up to the cap.\n    /// @param to The address that will receive the minted tokens.\n    /// @param amount The amount of tokens to mint.\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    /// @notice Returns true if the account is whitelisted.\n    /// @param account The address to check.\n    function isWhitelisted(address account) external view returns (bool) {\n        return _isWhitelisted[account];\n    }\n\n    /// @notice Adds an address to the whitelist.\n    /// @param account The address to add to the whitelist.\n    function addToWhitelist(address account) external onlyRole(PAUSER_ROLE) {\n        require(account != address(0), \"cannot whitelist the zero address\");\n        _isWhitelisted[account] = true;\n        emit WhitelistUpdated(account, true);\n    }\n\n    /// @notice Removes an address from the whitelist.\n    /// @param account The address to remove from the whitelist.\n    function removeFromWhitelist(\n        address account\n    ) external onlyRole(PAUSER_ROLE) {\n        require(account != address(0), \"cannot un-whitelist the zero address\");\n        _isWhitelisted[account] = false;\n        emit WhitelistUpdated(account, false);\n    }\n\n    /// @notice Checks if the contract is paused before every transfer, mint, or burn, and verifies whitelist status.\n        function _update(\n        address from,\n        address to,\n        uint256 value\n    ) internal virtual override {\n        if (paused()) {\n            bool isMinting = from == address(0);\n            bool isBurning = to == address(0);\n            bool isWhitelistedTransfer = _isWhitelisted[from] && _isWhitelisted[to];\n            require(\n                isMinting || isBurning || isWhitelistedTransfer,\n                \"Token: transfer while paused (not whitelisted)\"\n            );\n        }\n        super._update(from, to, value);\n    }\n\n    /// @notice Recover ERC20 tokens mistakenly sent to this contract.\n    /// @param token The address of the ERC20 token contract.\n    /// @param to The address to receive the recovered tokens.\n    /// @param amount The amount of tokens to recover.\n    event ERC20Recovered(\n        address indexed token,\n        address indexed to,\n        uint256 amount\n    );\n\n    function recoverERC20(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(to != address(0), \"cannot send to zero address\");\n        require(token != address(0), \"token address cannot be zero\");\n        require(amount > 0, \"amount must be greater than zero\");\n        bool success = IERC20(token).transfer(to, amount);\n        require(success, \"ERC20 transfer failed\");\n        emit ERC20Recovered(token, to, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Total supply cap has been exceeded.\n     */\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev The supplied cap is not a valid cap.\n     */\n    error ERC20InvalidCap(uint256 cap);\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        if (cap_ == 0) {\n            revert ERC20InvalidCap(0);\n        }\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /// @inheritdoc ERC20\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n\n        if (from == address(0)) {\n            uint256 maxSupply = cap();\n            uint256 supply = totalSupply();\n            if (supply > maxSupply) {\n                revert ERC20ExceededCap(supply, maxSupply);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 534,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 647,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 653,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 655,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 657,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 659,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ERC20Capped": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"details": "Sets the value of the `cap`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0xf1c07010528cdb891c75866dd44cf5cd856573457127ec38a522ca748407a340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://266a5704d812997c9e057e50787694ca29c1a3ddd76962af1061c11ed424c7e2\",\"dweb:/ipfs/QmaVTZBgUEWFo4ePF6v7NwoRSLbYBdLQ5XbRkgGFBfPpxa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 647,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 653,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 655,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 657,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 659,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ub.sol": {
				"Unibase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pauser",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Recovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isWhitelisted",
									"type": "bool"
								}
							],
							"name": "WhitelistUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "setMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"ERC20Recovered(address,address,uint256)": {
								"params": {
									"amount": "The amount of tokens to recover.",
									"to": "The address to receive the recovered tokens.",
									"token": "The address of the ERC20 token contract."
								}
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"addToWhitelist(address)": {
								"params": {
									"account": "The address to add to the whitelist."
								}
							},
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"params": {
									"admin": "The address to be set as the default admin of the token.",
									"cap": "The maximum total supply of the token (e.g., for 1 million tokens with 18 decimals, pass 1000000 * 10**18).",
									"name": "The name of the token.",
									"pauser": "The address to be set as the pauser",
									"symbol": "The symbol of the token."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isWhitelisted(address)": {
								"params": {
									"account": "The address to check."
								}
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to mint.",
									"to": "The address that will receive the minted tokens."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"removeFromWhitelist(address)": {
								"params": {
									"account": "The address to remove from the whitelist."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setMinter(address)": {
								"params": {
									"minter": "The address to be granted the MINTER_ROLE."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "Unibase Token Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ub.sol\":526:5126  contract Unibase is Pausable, ERC20Capped, AccessControl {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ub.sol\":1250:1593  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ub.sol\":1426:1429  cap */\n  dup3\n    /* \"contracts/ub.sol\":1400:1404  name */\n  dup6\n    /* \"contracts/ub.sol\":1406:1412  symbol */\n  dup6\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  dup1\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":764:765  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:760  cap_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:765  cap_ == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":804:805  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":788:806  ERC20InvalidCap(0) */\n  mload(0x40)\n  0x392e1e2700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":833:837  cap_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":826:837  _cap = cap_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":716:844  constructor(uint256 cap_) {... */\n  pop\n    /* \"contracts/ub.sol\":1441:1478  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"contracts/ub.sol\":1452:1470  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/ub.sol\":1472:1477  admin */\n  dup4\n    /* \"contracts/ub.sol\":1441:1451  _grantRole */\n  shl(0x20, tag_19)\n    /* \"contracts/ub.sol\":1441:1478  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/ub.sol\":1488:1519  _grantRole(PAUSER_ROLE, pauser) */\n  tag_20\n    /* \"contracts/ub.sol\":696:720  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"contracts/ub.sol\":1512:1518  pauser */\n  dup3\n    /* \"contracts/ub.sol\":1488:1498  _grantRole */\n  shl(0x20, tag_19)\n    /* \"contracts/ub.sol\":1488:1519  _grantRole(PAUSER_ROLE, pauser) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n  pop\n    /* \"contracts/ub.sol\":1529:1568  _setRoleAdmin(PAUSER_ROLE, PAUSER_ROLE) */\n  tag_21\n    /* \"contracts/ub.sol\":696:720  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n  dup1\n    /* \"contracts/ub.sol\":1529:1542  _setRoleAdmin */\n  shl(0x20, tag_22)\n    /* \"contracts/ub.sol\":1529:1568  _setRoleAdmin(PAUSER_ROLE, PAUSER_ROLE) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/ub.sol\":1578:1586  _pause() */\n  tag_23\n    /* \"contracts/ub.sol\":1578:1584  _pause */\n  shl(0x20, tag_24)\n    /* \"contracts/ub.sol\":1578:1586  _pause() */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/ub.sol\":1250:1593  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/ub.sol\":526:5126  contract Unibase is Pausable, ERC20Capped, AccessControl {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_27\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_30\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_26:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5674:5921  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5757:5782  bytes32 previousAdminRole */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5785:5803  getRoleAdmin(role) */\n  tag_34\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5798:5802  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5785:5797  getRoleAdmin */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5785:5803  getRoleAdmin(role) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5757:5803  bytes32 previousAdminRole = getRoleAdmin(role) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5838:5847  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5813:5819  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5813:5825  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5820:5824  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5813:5825  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5813:5835  _roles[role].adminRole */\n  0x01\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5813:5847  _roles[role].adminRole = adminRole */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5904:5913  adminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5885:5902  previousAdminRole */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5879:5883  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5862:5914  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5747:5921  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5674:5921  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\ntag_24:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  tag_37\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n  0x01\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n  0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n  tag_40\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_40:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n  mload(0x40)\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n  0x01\n  add\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n  tag_47\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n  iszero\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_49\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_49:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_53:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_54:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_55:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_56:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_57:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_58:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_59:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_60:\n    /* \"#utility.yul\":957:984   */\n  tag_107\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_58\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_109\n  tag_59\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1030:1118   */\ntag_108:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_61:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_111\n  tag_53\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_112\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_60\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_62:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_115\n  tag_59\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1434:1490   */\ntag_114:\n    /* \"#utility.yul\":1508:1537   */\n  tag_116\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_58\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_63:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_118:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_118)\ntag_120:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_64:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_122\n    /* \"#utility.yul\":1992:2041   */\n  tag_123\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_62\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1976:2042   */\n  tag_61\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_125\n  tag_57\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2117:2229   */\ntag_124:\n    /* \"#utility.yul\":2238:2290   */\n  tag_126\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_63\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_65:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_129\n  tag_56\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2399:2521   */\ntag_128:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_130\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_64\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_66:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_67:\n    /* \"#utility.yul\":2833:2857   */\n  tag_133\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_66\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_134:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_68:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_136\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_67\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:3163   */\ntag_69:\n    /* \"#utility.yul\":3074:3081   */\n  0x00\n    /* \"#utility.yul\":3114:3156   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3107:3112   */\n  dup3\n    /* \"#utility.yul\":3103:3157   */\n  and\n    /* \"#utility.yul\":3092:3157   */\n  swap1\n  pop\n    /* \"#utility.yul\":3037:3163   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3169:3265   */\ntag_70:\n    /* \"#utility.yul\":3206:3213   */\n  0x00\n    /* \"#utility.yul\":3235:3259   */\n  tag_139\n    /* \"#utility.yul\":3253:3258   */\n  dup3\n    /* \"#utility.yul\":3235:3259   */\n  tag_69\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3224:3259   */\n  swap1\n  pop\n    /* \"#utility.yul\":3169:3265   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3271:3393   */\ntag_71:\n    /* \"#utility.yul\":3344:3368   */\n  tag_141\n    /* \"#utility.yul\":3362:3367   */\n  dup2\n    /* \"#utility.yul\":3344:3368   */\n  tag_70\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3337:3342   */\n  dup2\n    /* \"#utility.yul\":3334:3369   */\n  eq\n    /* \"#utility.yul\":3324:3387   */\n  tag_142\n  jumpi\n    /* \"#utility.yul\":3383:3384   */\n  0x00\n    /* \"#utility.yul\":3380:3381   */\n  dup1\n    /* \"#utility.yul\":3373:3385   */\n  revert\n    /* \"#utility.yul\":3324:3387   */\ntag_142:\n    /* \"#utility.yul\":3271:3393   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3399:3542   */\ntag_72:\n    /* \"#utility.yul\":3456:3461   */\n  0x00\n    /* \"#utility.yul\":3487:3493   */\n  dup2\n    /* \"#utility.yul\":3481:3494   */\n  mload\n    /* \"#utility.yul\":3472:3494   */\n  swap1\n  pop\n    /* \"#utility.yul\":3503:3536   */\n  tag_144\n    /* \"#utility.yul\":3530:3535   */\n  dup2\n    /* \"#utility.yul\":3503:3536   */\n  tag_71\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3399:3542   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3548:4871   */\ntag_3:\n    /* \"#utility.yul\":3674:3680   */\n  0x00\n    /* \"#utility.yul\":3682:3688   */\n  dup1\n    /* \"#utility.yul\":3690:3696   */\n  0x00\n    /* \"#utility.yul\":3698:3704   */\n  dup1\n    /* \"#utility.yul\":3706:3712   */\n  0x00\n    /* \"#utility.yul\":3755:3758   */\n  0xa0\n    /* \"#utility.yul\":3743:3752   */\n  dup7\n    /* \"#utility.yul\":3734:3741   */\n  dup9\n    /* \"#utility.yul\":3730:3753   */\n  sub\n    /* \"#utility.yul\":3726:3759   */\n  slt\n    /* \"#utility.yul\":3723:3843   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":3762:3841   */\n  tag_147\n  tag_54\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3723:3843   */\ntag_146:\n    /* \"#utility.yul\":3903:3904   */\n  0x00\n    /* \"#utility.yul\":3892:3901   */\n  dup7\n    /* \"#utility.yul\":3888:3905   */\n  add\n    /* \"#utility.yul\":3882:3906   */\n  mload\n    /* \"#utility.yul\":3933:3951   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3925:3931   */\n  dup2\n    /* \"#utility.yul\":3922:3952   */\n  gt\n    /* \"#utility.yul\":3919:4036   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":3955:4034   */\n  tag_149\n  tag_55\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":3919:4036   */\ntag_148:\n    /* \"#utility.yul\":4060:4134   */\n  tag_150\n    /* \"#utility.yul\":4126:4133   */\n  dup9\n    /* \"#utility.yul\":4117:4123   */\n  dup3\n    /* \"#utility.yul\":4106:4115   */\n  dup10\n    /* \"#utility.yul\":4102:4124   */\n  add\n    /* \"#utility.yul\":4060:4134   */\n  tag_65\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4050:4134   */\n  swap6\n  pop\n    /* \"#utility.yul\":3853:4144   */\n  pop\n    /* \"#utility.yul\":4204:4206   */\n  0x20\n    /* \"#utility.yul\":4193:4202   */\n  dup7\n    /* \"#utility.yul\":4189:4207   */\n  add\n    /* \"#utility.yul\":4183:4208   */\n  mload\n    /* \"#utility.yul\":4235:4253   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4227:4233   */\n  dup2\n    /* \"#utility.yul\":4224:4254   */\n  gt\n    /* \"#utility.yul\":4221:4338   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":4257:4336   */\n  tag_152\n  tag_55\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4221:4338   */\ntag_151:\n    /* \"#utility.yul\":4362:4436   */\n  tag_153\n    /* \"#utility.yul\":4428:4435   */\n  dup9\n    /* \"#utility.yul\":4419:4425   */\n  dup3\n    /* \"#utility.yul\":4408:4417   */\n  dup10\n    /* \"#utility.yul\":4404:4426   */\n  add\n    /* \"#utility.yul\":4362:4436   */\n  tag_65\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4352:4436   */\n  swap5\n  pop\n    /* \"#utility.yul\":4154:4446   */\n  pop\n    /* \"#utility.yul\":4485:4487   */\n  0x40\n    /* \"#utility.yul\":4511:4575   */\n  tag_154\n    /* \"#utility.yul\":4567:4574   */\n  dup9\n    /* \"#utility.yul\":4558:4564   */\n  dup3\n    /* \"#utility.yul\":4547:4556   */\n  dup10\n    /* \"#utility.yul\":4543:4565   */\n  add\n    /* \"#utility.yul\":4511:4575   */\n  tag_68\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4501:4575   */\n  swap4\n  pop\n    /* \"#utility.yul\":4456:4585   */\n  pop\n    /* \"#utility.yul\":4624:4626   */\n  0x60\n    /* \"#utility.yul\":4650:4714   */\n  tag_155\n    /* \"#utility.yul\":4706:4713   */\n  dup9\n    /* \"#utility.yul\":4697:4703   */\n  dup3\n    /* \"#utility.yul\":4686:4695   */\n  dup10\n    /* \"#utility.yul\":4682:4704   */\n  add\n    /* \"#utility.yul\":4650:4714   */\n  tag_72\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":4640:4714   */\n  swap3\n  pop\n    /* \"#utility.yul\":4595:4724   */\n  pop\n    /* \"#utility.yul\":4763:4766   */\n  0x80\n    /* \"#utility.yul\":4790:4854   */\n  tag_156\n    /* \"#utility.yul\":4846:4853   */\n  dup9\n    /* \"#utility.yul\":4837:4843   */\n  dup3\n    /* \"#utility.yul\":4826:4835   */\n  dup10\n    /* \"#utility.yul\":4822:4844   */\n  add\n    /* \"#utility.yul\":4790:4854   */\n  tag_72\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":4780:4854   */\n  swap2\n  pop\n    /* \"#utility.yul\":4734:4864   */\n  pop\n    /* \"#utility.yul\":3548:4871   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4877:4976   */\ntag_73:\n    /* \"#utility.yul\":4929:4935   */\n  0x00\n    /* \"#utility.yul\":4963:4968   */\n  dup2\n    /* \"#utility.yul\":4957:4969   */\n  mload\n    /* \"#utility.yul\":4947:4969   */\n  swap1\n  pop\n    /* \"#utility.yul\":4877:4976   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4982:5162   */\ntag_74:\n    /* \"#utility.yul\":5030:5107   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5020:5108   */\n  mstore\n    /* \"#utility.yul\":5127:5131   */\n  0x22\n    /* \"#utility.yul\":5124:5125   */\n  0x04\n    /* \"#utility.yul\":5117:5132   */\n  mstore\n    /* \"#utility.yul\":5151:5155   */\n  0x24\n    /* \"#utility.yul\":5148:5149   */\n  0x00\n    /* \"#utility.yul\":5141:5156   */\n  revert\n    /* \"#utility.yul\":5168:5488   */\ntag_75:\n    /* \"#utility.yul\":5212:5218   */\n  0x00\n    /* \"#utility.yul\":5249:5250   */\n  0x02\n    /* \"#utility.yul\":5243:5247   */\n  dup3\n    /* \"#utility.yul\":5239:5251   */\n  div\n    /* \"#utility.yul\":5229:5251   */\n  swap1\n  pop\n    /* \"#utility.yul\":5296:5297   */\n  0x01\n    /* \"#utility.yul\":5290:5294   */\n  dup3\n    /* \"#utility.yul\":5286:5298   */\n  and\n    /* \"#utility.yul\":5317:5335   */\n  dup1\n    /* \"#utility.yul\":5307:5388   */\n  tag_160\n  jumpi\n    /* \"#utility.yul\":5373:5377   */\n  0x7f\n    /* \"#utility.yul\":5365:5371   */\n  dup3\n    /* \"#utility.yul\":5361:5378   */\n  and\n    /* \"#utility.yul\":5351:5378   */\n  swap2\n  pop\n    /* \"#utility.yul\":5307:5388   */\ntag_160:\n    /* \"#utility.yul\":5435:5437   */\n  0x20\n    /* \"#utility.yul\":5427:5433   */\n  dup3\n    /* \"#utility.yul\":5424:5438   */\n  lt\n    /* \"#utility.yul\":5404:5422   */\n  dup2\n    /* \"#utility.yul\":5401:5439   */\n  sub\n    /* \"#utility.yul\":5398:5482   */\n  tag_161\n  jumpi\n    /* \"#utility.yul\":5454:5472   */\n  tag_162\n  tag_74\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5398:5482   */\ntag_161:\n    /* \"#utility.yul\":5219:5488   */\n  pop\n    /* \"#utility.yul\":5168:5488   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5494:5635   */\ntag_76:\n    /* \"#utility.yul\":5543:5547   */\n  0x00\n    /* \"#utility.yul\":5566:5569   */\n  dup2\n    /* \"#utility.yul\":5558:5569   */\n  swap1\n  pop\n    /* \"#utility.yul\":5589:5592   */\n  dup2\n    /* \"#utility.yul\":5586:5587   */\n  0x00\n    /* \"#utility.yul\":5579:5593   */\n  mstore\n    /* \"#utility.yul\":5623:5627   */\n  0x20\n    /* \"#utility.yul\":5620:5621   */\n  0x00\n    /* \"#utility.yul\":5610:5628   */\n  keccak256\n    /* \"#utility.yul\":5602:5628   */\n  swap1\n  pop\n    /* \"#utility.yul\":5494:5635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5641:5734   */\ntag_77:\n    /* \"#utility.yul\":5678:5684   */\n  0x00\n    /* \"#utility.yul\":5725:5727   */\n  0x20\n    /* \"#utility.yul\":5720:5722   */\n  0x1f\n    /* \"#utility.yul\":5713:5718   */\n  dup4\n    /* \"#utility.yul\":5709:5723   */\n  add\n    /* \"#utility.yul\":5705:5728   */\n  div\n    /* \"#utility.yul\":5695:5728   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5734   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5740:5847   */\ntag_78:\n    /* \"#utility.yul\":5784:5792   */\n  0x00\n    /* \"#utility.yul\":5834:5839   */\n  dup3\n    /* \"#utility.yul\":5828:5832   */\n  dup3\n    /* \"#utility.yul\":5824:5840   */\n  shl\n    /* \"#utility.yul\":5803:5840   */\n  swap1\n  pop\n    /* \"#utility.yul\":5740:5847   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5853:6246   */\ntag_79:\n    /* \"#utility.yul\":5922:5928   */\n  0x00\n    /* \"#utility.yul\":5972:5973   */\n  0x08\n    /* \"#utility.yul\":5960:5970   */\n  dup4\n    /* \"#utility.yul\":5956:5974   */\n  mul\n    /* \"#utility.yul\":5995:6092   */\n  tag_167\n    /* \"#utility.yul\":6025:6091   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6014:6023   */\n  dup3\n    /* \"#utility.yul\":5995:6092   */\n  tag_78\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6113:6152   */\n  tag_168\n    /* \"#utility.yul\":6143:6151   */\n  dup7\n    /* \"#utility.yul\":6132:6141   */\n  dup4\n    /* \"#utility.yul\":6113:6152   */\n  tag_78\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6101:6152   */\n  swap6\n  pop\n    /* \"#utility.yul\":6185:6189   */\n  dup1\n    /* \"#utility.yul\":6181:6190   */\n  not\n    /* \"#utility.yul\":6174:6179   */\n  dup5\n    /* \"#utility.yul\":6170:6191   */\n  and\n    /* \"#utility.yul\":6161:6191   */\n  swap4\n  pop\n    /* \"#utility.yul\":6234:6238   */\n  dup1\n    /* \"#utility.yul\":6224:6232   */\n  dup7\n    /* \"#utility.yul\":6220:6239   */\n  and\n    /* \"#utility.yul\":6213:6218   */\n  dup5\n    /* \"#utility.yul\":6210:6240   */\n  or\n    /* \"#utility.yul\":6200:6240   */\n  swap3\n  pop\n    /* \"#utility.yul\":5929:6246   */\n  pop\n  pop\n    /* \"#utility.yul\":5853:6246   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6252:6312   */\ntag_80:\n    /* \"#utility.yul\":6280:6283   */\n  0x00\n    /* \"#utility.yul\":6301:6306   */\n  dup2\n    /* \"#utility.yul\":6294:6306   */\n  swap1\n  pop\n    /* \"#utility.yul\":6252:6312   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6318:6460   */\ntag_81:\n    /* \"#utility.yul\":6368:6377   */\n  0x00\n    /* \"#utility.yul\":6401:6454   */\n  tag_171\n    /* \"#utility.yul\":6419:6453   */\n  tag_172\n    /* \"#utility.yul\":6428:6452   */\n  tag_173\n    /* \"#utility.yul\":6446:6451   */\n  dup5\n    /* \"#utility.yul\":6428:6452   */\n  tag_66\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6419:6453   */\n  tag_80\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6401:6454   */\n  tag_66\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6388:6454   */\n  swap1\n  pop\n    /* \"#utility.yul\":6318:6460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6466:6541   */\ntag_82:\n    /* \"#utility.yul\":6509:6512   */\n  0x00\n    /* \"#utility.yul\":6530:6535   */\n  dup2\n    /* \"#utility.yul\":6523:6535   */\n  swap1\n  pop\n    /* \"#utility.yul\":6466:6541   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6547:6816   */\ntag_83:\n    /* \"#utility.yul\":6657:6696   */\n  tag_176\n    /* \"#utility.yul\":6688:6695   */\n  dup4\n    /* \"#utility.yul\":6657:6696   */\n  tag_81\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6718:6809   */\n  tag_177\n    /* \"#utility.yul\":6767:6808   */\n  tag_178\n    /* \"#utility.yul\":6791:6807   */\n  dup3\n    /* \"#utility.yul\":6767:6808   */\n  tag_82\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6759:6765   */\n  dup5\n    /* \"#utility.yul\":6752:6756   */\n  dup5\n    /* \"#utility.yul\":6746:6757   */\n  sload\n    /* \"#utility.yul\":6718:6809   */\n  tag_79\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6712:6716   */\n  dup3\n    /* \"#utility.yul\":6705:6810   */\n  sstore\n    /* \"#utility.yul\":6623:6816   */\n  pop\n    /* \"#utility.yul\":6547:6816   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6822:6895   */\ntag_84:\n    /* \"#utility.yul\":6867:6870   */\n  0x00\n    /* \"#utility.yul\":6822:6895   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6901:7090   */\ntag_85:\n    /* \"#utility.yul\":6978:7010   */\n  tag_181\n  tag_84\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7019:7084   */\n  tag_182\n    /* \"#utility.yul\":7077:7083   */\n  dup2\n    /* \"#utility.yul\":7069:7075   */\n  dup5\n    /* \"#utility.yul\":7063:7067   */\n  dup5\n    /* \"#utility.yul\":7019:7084   */\n  tag_83\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6954:7090   */\n  pop\n    /* \"#utility.yul\":6901:7090   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7096:7282   */\ntag_86:\n    /* \"#utility.yul\":7156:7276   */\ntag_184:\n    /* \"#utility.yul\":7173:7176   */\n  dup2\n    /* \"#utility.yul\":7166:7171   */\n  dup2\n    /* \"#utility.yul\":7163:7177   */\n  lt\n    /* \"#utility.yul\":7156:7276   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":7227:7266   */\n  tag_187\n    /* \"#utility.yul\":7264:7265   */\n  0x00\n    /* \"#utility.yul\":7257:7262   */\n  dup3\n    /* \"#utility.yul\":7227:7266   */\n  tag_85\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7200:7201   */\n  0x01\n    /* \"#utility.yul\":7193:7198   */\n  dup2\n    /* \"#utility.yul\":7189:7202   */\n  add\n    /* \"#utility.yul\":7180:7202   */\n  swap1\n  pop\n    /* \"#utility.yul\":7156:7276   */\n  jump(tag_184)\ntag_186:\n    /* \"#utility.yul\":7096:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7831   */\ntag_87:\n    /* \"#utility.yul\":7389:7391   */\n  0x1f\n    /* \"#utility.yul\":7384:7387   */\n  dup3\n    /* \"#utility.yul\":7381:7392   */\n  gt\n    /* \"#utility.yul\":7378:7824   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":7423:7461   */\n  tag_190\n    /* \"#utility.yul\":7455:7460   */\n  dup2\n    /* \"#utility.yul\":7423:7461   */\n  tag_76\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7507:7536   */\n  tag_191\n    /* \"#utility.yul\":7525:7535   */\n  dup5\n    /* \"#utility.yul\":7507:7536   */\n  tag_77\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":7497:7505   */\n  dup2\n    /* \"#utility.yul\":7493:7537   */\n  add\n    /* \"#utility.yul\":7690:7692   */\n  0x20\n    /* \"#utility.yul\":7678:7688   */\n  dup6\n    /* \"#utility.yul\":7675:7693   */\n  lt\n    /* \"#utility.yul\":7672:7721   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":7711:7719   */\n  dup2\n    /* \"#utility.yul\":7696:7719   */\n  swap1\n  pop\n    /* \"#utility.yul\":7672:7721   */\ntag_192:\n    /* \"#utility.yul\":7734:7814   */\n  tag_193\n    /* \"#utility.yul\":7790:7812   */\n  tag_194\n    /* \"#utility.yul\":7808:7811   */\n  dup6\n    /* \"#utility.yul\":7790:7812   */\n  tag_77\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7780:7788   */\n  dup4\n    /* \"#utility.yul\":7776:7813   */\n  add\n    /* \"#utility.yul\":7763:7774   */\n  dup3\n    /* \"#utility.yul\":7734:7814   */\n  tag_86\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":7393:7824   */\n  pop\n  pop\n    /* \"#utility.yul\":7378:7824   */\ntag_189:\n    /* \"#utility.yul\":7288:7831   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7837:7954   */\ntag_88:\n    /* \"#utility.yul\":7891:7899   */\n  0x00\n    /* \"#utility.yul\":7941:7946   */\n  dup3\n    /* \"#utility.yul\":7935:7939   */\n  dup3\n    /* \"#utility.yul\":7931:7947   */\n  shr\n    /* \"#utility.yul\":7910:7947   */\n  swap1\n  pop\n    /* \"#utility.yul\":7837:7954   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7960:8129   */\ntag_89:\n    /* \"#utility.yul\":8004:8010   */\n  0x00\n    /* \"#utility.yul\":8037:8088   */\n  tag_197\n    /* \"#utility.yul\":8085:8086   */\n  0x00\n    /* \"#utility.yul\":8081:8087   */\n  not\n    /* \"#utility.yul\":8073:8078   */\n  dup5\n    /* \"#utility.yul\":8070:8071   */\n  0x08\n    /* \"#utility.yul\":8066:8079   */\n  mul\n    /* \"#utility.yul\":8037:8088   */\n  tag_88\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8033:8089   */\n  not\n    /* \"#utility.yul\":8118:8122   */\n  dup1\n    /* \"#utility.yul\":8112:8116   */\n  dup4\n    /* \"#utility.yul\":8108:8123   */\n  and\n    /* \"#utility.yul\":8098:8123   */\n  swap2\n  pop\n    /* \"#utility.yul\":8011:8129   */\n  pop\n    /* \"#utility.yul\":7960:8129   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8134:8429   */\ntag_90:\n    /* \"#utility.yul\":8210:8214   */\n  0x00\n    /* \"#utility.yul\":8356:8385   */\n  tag_199\n    /* \"#utility.yul\":8381:8384   */\n  dup4\n    /* \"#utility.yul\":8375:8379   */\n  dup4\n    /* \"#utility.yul\":8356:8385   */\n  tag_89\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":8348:8385   */\n  swap2\n  pop\n    /* \"#utility.yul\":8418:8421   */\n  dup3\n    /* \"#utility.yul\":8415:8416   */\n  0x02\n    /* \"#utility.yul\":8411:8422   */\n  mul\n    /* \"#utility.yul\":8405:8409   */\n  dup3\n    /* \"#utility.yul\":8402:8423   */\n  or\n    /* \"#utility.yul\":8394:8423   */\n  swap1\n  pop\n    /* \"#utility.yul\":8134:8429   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8434:9829   */\ntag_11:\n    /* \"#utility.yul\":8551:8588   */\n  tag_201\n    /* \"#utility.yul\":8584:8587   */\n  dup3\n    /* \"#utility.yul\":8551:8588   */\n  tag_73\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":8653:8671   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8645:8651   */\n  dup2\n    /* \"#utility.yul\":8642:8672   */\n  gt\n    /* \"#utility.yul\":8639:8695   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":8675:8693   */\n  tag_203\n  tag_59\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8639:8695   */\ntag_202:\n    /* \"#utility.yul\":8719:8757   */\n  tag_204\n    /* \"#utility.yul\":8751:8755   */\n  dup3\n    /* \"#utility.yul\":8745:8756   */\n  sload\n    /* \"#utility.yul\":8719:8757   */\n  tag_75\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":8804:8871   */\n  tag_205\n    /* \"#utility.yul\":8864:8870   */\n  dup3\n    /* \"#utility.yul\":8856:8862   */\n  dup3\n    /* \"#utility.yul\":8850:8854   */\n  dup6\n    /* \"#utility.yul\":8804:8871   */\n  tag_87\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8898:8899   */\n  0x00\n    /* \"#utility.yul\":8922:8926   */\n  0x20\n    /* \"#utility.yul\":8909:8926   */\n  swap1\n  pop\n    /* \"#utility.yul\":8954:8956   */\n  0x1f\n    /* \"#utility.yul\":8946:8952   */\n  dup4\n    /* \"#utility.yul\":8943:8957   */\n  gt\n    /* \"#utility.yul\":8971:8972   */\n  0x01\n    /* \"#utility.yul\":8966:9584   */\n  dup2\n  eq\n  tag_207\n  jumpi\n    /* \"#utility.yul\":9628:9629   */\n  0x00\n    /* \"#utility.yul\":9645:9651   */\n  dup5\n    /* \"#utility.yul\":9642:9719   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":9694:9703   */\n  dup3\n    /* \"#utility.yul\":9689:9692   */\n  dup8\n    /* \"#utility.yul\":9685:9704   */\n  add\n    /* \"#utility.yul\":9679:9705   */\n  mload\n    /* \"#utility.yul\":9670:9705   */\n  swap1\n  pop\n    /* \"#utility.yul\":9642:9719   */\ntag_208:\n    /* \"#utility.yul\":9745:9812   */\n  tag_209\n    /* \"#utility.yul\":9805:9811   */\n  dup6\n    /* \"#utility.yul\":9798:9803   */\n  dup3\n    /* \"#utility.yul\":9745:9812   */\n  tag_90\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":9739:9743   */\n  dup7\n    /* \"#utility.yul\":9732:9813   */\n  sstore\n    /* \"#utility.yul\":9601:9823   */\n  pop\n    /* \"#utility.yul\":8936:9823   */\n  jump(tag_206)\n    /* \"#utility.yul\":8966:9584   */\ntag_207:\n    /* \"#utility.yul\":9018:9022   */\n  0x1f\n    /* \"#utility.yul\":9014:9023   */\n  not\n    /* \"#utility.yul\":9006:9012   */\n  dup5\n    /* \"#utility.yul\":9002:9024   */\n  and\n    /* \"#utility.yul\":9052:9089   */\n  tag_210\n    /* \"#utility.yul\":9084:9088   */\n  dup7\n    /* \"#utility.yul\":9052:9089   */\n  tag_76\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9111:9112   */\n  0x00\n    /* \"#utility.yul\":9125:9333   */\ntag_211:\n    /* \"#utility.yul\":9139:9146   */\n  dup3\n    /* \"#utility.yul\":9136:9137   */\n  dup2\n    /* \"#utility.yul\":9133:9147   */\n  lt\n    /* \"#utility.yul\":9125:9333   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":9218:9227   */\n  dup5\n    /* \"#utility.yul\":9213:9216   */\n  dup10\n    /* \"#utility.yul\":9209:9228   */\n  add\n    /* \"#utility.yul\":9203:9229   */\n  mload\n    /* \"#utility.yul\":9195:9201   */\n  dup3\n    /* \"#utility.yul\":9188:9230   */\n  sstore\n    /* \"#utility.yul\":9269:9270   */\n  0x01\n    /* \"#utility.yul\":9261:9267   */\n  dup3\n    /* \"#utility.yul\":9257:9271   */\n  add\n    /* \"#utility.yul\":9247:9271   */\n  swap2\n  pop\n    /* \"#utility.yul\":9316:9318   */\n  0x20\n    /* \"#utility.yul\":9305:9314   */\n  dup6\n    /* \"#utility.yul\":9301:9319   */\n  add\n    /* \"#utility.yul\":9288:9319   */\n  swap5\n  pop\n    /* \"#utility.yul\":9162:9166   */\n  0x20\n    /* \"#utility.yul\":9159:9160   */\n  dup2\n    /* \"#utility.yul\":9155:9167   */\n  add\n    /* \"#utility.yul\":9150:9167   */\n  swap1\n  pop\n    /* \"#utility.yul\":9125:9333   */\n  jump(tag_211)\ntag_213:\n    /* \"#utility.yul\":9361:9367   */\n  dup7\n    /* \"#utility.yul\":9352:9359   */\n  dup4\n    /* \"#utility.yul\":9349:9368   */\n  lt\n    /* \"#utility.yul\":9346:9525   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":9419:9428   */\n  dup5\n    /* \"#utility.yul\":9414:9417   */\n  dup10\n    /* \"#utility.yul\":9410:9429   */\n  add\n    /* \"#utility.yul\":9404:9430   */\n  mload\n    /* \"#utility.yul\":9462:9510   */\n  tag_215\n    /* \"#utility.yul\":9504:9508   */\n  0x1f\n    /* \"#utility.yul\":9496:9502   */\n  dup10\n    /* \"#utility.yul\":9492:9509   */\n  and\n    /* \"#utility.yul\":9481:9490   */\n  dup3\n    /* \"#utility.yul\":9462:9510   */\n  tag_89\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9454:9460   */\n  dup4\n    /* \"#utility.yul\":9447:9511   */\n  sstore\n    /* \"#utility.yul\":9369:9525   */\n  pop\n    /* \"#utility.yul\":9346:9525   */\ntag_214:\n    /* \"#utility.yul\":9571:9572   */\n  0x01\n    /* \"#utility.yul\":9567:9568   */\n  0x02\n    /* \"#utility.yul\":9559:9565   */\n  dup9\n    /* \"#utility.yul\":9555:9569   */\n  mul\n    /* \"#utility.yul\":9551:9573   */\n  add\n    /* \"#utility.yul\":9545:9549   */\n  dup9\n    /* \"#utility.yul\":9538:9574   */\n  sstore\n    /* \"#utility.yul\":8973:9584   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8936:9823   */\ntag_206:\n  pop\n    /* \"#utility.yul\":8526:9829   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8434:9829   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9835:9920   */\ntag_91:\n    /* \"#utility.yul\":9880:9887   */\n  0x00\n    /* \"#utility.yul\":9909:9914   */\n  dup2\n    /* \"#utility.yul\":9898:9914   */\n  swap1\n  pop\n    /* \"#utility.yul\":9835:9920   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9926:10084   */\ntag_92:\n    /* \"#utility.yul\":9984:9993   */\n  0x00\n    /* \"#utility.yul\":10017:10078   */\n  tag_218\n    /* \"#utility.yul\":10035:10077   */\n  tag_219\n    /* \"#utility.yul\":10044:10076   */\n  tag_220\n    /* \"#utility.yul\":10070:10075   */\n  dup5\n    /* \"#utility.yul\":10044:10076   */\n  tag_91\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":10035:10077   */\n  tag_80\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10017:10078   */\n  tag_66\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":10004:10078   */\n  swap1\n  pop\n    /* \"#utility.yul\":9926:10084   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10090:10237   */\ntag_93:\n    /* \"#utility.yul\":10185:10230   */\n  tag_222\n    /* \"#utility.yul\":10224:10229   */\n  dup2\n    /* \"#utility.yul\":10185:10230   */\n  tag_92\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10180:10183   */\n  dup3\n    /* \"#utility.yul\":10173:10231   */\n  mstore\n    /* \"#utility.yul\":10090:10237   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10243:10481   */\ntag_16:\n    /* \"#utility.yul\":10344:10348   */\n  0x00\n    /* \"#utility.yul\":10382:10384   */\n  0x20\n    /* \"#utility.yul\":10371:10380   */\n  dup3\n    /* \"#utility.yul\":10367:10385   */\n  add\n    /* \"#utility.yul\":10359:10385   */\n  swap1\n  pop\n    /* \"#utility.yul\":10395:10474   */\n  tag_224\n    /* \"#utility.yul\":10471:10472   */\n  0x00\n    /* \"#utility.yul\":10460:10469   */\n  dup4\n    /* \"#utility.yul\":10456:10473   */\n  add\n    /* \"#utility.yul\":10447:10453   */\n  dup5\n    /* \"#utility.yul\":10395:10474   */\n  tag_93\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10243:10481   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10487:10605   */\ntag_94:\n    /* \"#utility.yul\":10574:10598   */\n  tag_226\n    /* \"#utility.yul\":10592:10597   */\n  dup2\n    /* \"#utility.yul\":10574:10598   */\n  tag_70\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10569:10572   */\n  dup3\n    /* \"#utility.yul\":10562:10599   */\n  mstore\n    /* \"#utility.yul\":10487:10605   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10611:10833   */\ntag_42:\n    /* \"#utility.yul\":10704:10708   */\n  0x00\n    /* \"#utility.yul\":10742:10744   */\n  0x20\n    /* \"#utility.yul\":10731:10740   */\n  dup3\n    /* \"#utility.yul\":10727:10745   */\n  add\n    /* \"#utility.yul\":10719:10745   */\n  swap1\n  pop\n    /* \"#utility.yul\":10755:10826   */\n  tag_228\n    /* \"#utility.yul\":10823:10824   */\n  0x00\n    /* \"#utility.yul\":10812:10821   */\n  dup4\n    /* \"#utility.yul\":10808:10825   */\n  add\n    /* \"#utility.yul\":10799:10805   */\n  dup5\n    /* \"#utility.yul\":10755:10826   */\n  tag_94\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":10611:10833   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10839:11008   */\ntag_95:\n    /* \"#utility.yul\":10923:10934   */\n  0x00\n    /* \"#utility.yul\":10957:10963   */\n  dup3\n    /* \"#utility.yul\":10952:10955   */\n  dup3\n    /* \"#utility.yul\":10945:10964   */\n  mstore\n    /* \"#utility.yul\":10997:11001   */\n  0x20\n    /* \"#utility.yul\":10992:10995   */\n  dup3\n    /* \"#utility.yul\":10988:11002   */\n  add\n    /* \"#utility.yul\":10973:11002   */\n  swap1\n  pop\n    /* \"#utility.yul\":10839:11008   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11014:11180   */\ntag_96:\n    /* \"#utility.yul\":11154:11172   */\n  0x5061757361626c653a2070617573656400000000000000000000000000000000\n    /* \"#utility.yul\":11150:11151   */\n  0x00\n    /* \"#utility.yul\":11142:11148   */\n  dup3\n    /* \"#utility.yul\":11138:11152   */\n  add\n    /* \"#utility.yul\":11131:11173   */\n  mstore\n    /* \"#utility.yul\":11014:11180   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11186:11552   */\ntag_97:\n    /* \"#utility.yul\":11328:11331   */\n  0x00\n    /* \"#utility.yul\":11349:11416   */\n  tag_232\n    /* \"#utility.yul\":11413:11415   */\n  0x10\n    /* \"#utility.yul\":11408:11411   */\n  dup4\n    /* \"#utility.yul\":11349:11416   */\n  tag_95\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":11342:11416   */\n  swap2\n  pop\n    /* \"#utility.yul\":11425:11518   */\n  tag_233\n    /* \"#utility.yul\":11514:11517   */\n  dup3\n    /* \"#utility.yul\":11425:11518   */\n  tag_96\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":11543:11545   */\n  0x20\n    /* \"#utility.yul\":11538:11541   */\n  dup3\n    /* \"#utility.yul\":11534:11546   */\n  add\n    /* \"#utility.yul\":11527:11546   */\n  swap1\n  pop\n    /* \"#utility.yul\":11186:11552   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11558:11977   */\ntag_51:\n    /* \"#utility.yul\":11724:11728   */\n  0x00\n    /* \"#utility.yul\":11762:11764   */\n  0x20\n    /* \"#utility.yul\":11751:11760   */\n  dup3\n    /* \"#utility.yul\":11747:11765   */\n  add\n    /* \"#utility.yul\":11739:11765   */\n  swap1\n  pop\n    /* \"#utility.yul\":11811:11820   */\n  dup2\n    /* \"#utility.yul\":11805:11809   */\n  dup2\n    /* \"#utility.yul\":11801:11821   */\n  sub\n    /* \"#utility.yul\":11797:11798   */\n  0x00\n    /* \"#utility.yul\":11786:11795   */\n  dup4\n    /* \"#utility.yul\":11782:11799   */\n  add\n    /* \"#utility.yul\":11775:11822   */\n  mstore\n    /* \"#utility.yul\":11839:11970   */\n  tag_235\n    /* \"#utility.yul\":11965:11969   */\n  dup2\n    /* \"#utility.yul\":11839:11970   */\n  tag_97\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":11831:11970   */\n  swap1\n  pop\n    /* \"#utility.yul\":11558:11977   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ub.sol\":526:5126  contract Unibase is Pausable, ERC20Capped, AccessControl {... */\ntag_25:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4a12ea77a1a063f26028f31dc447cd01a6aae44cbd0d238cbc76d74f2d67dabb\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ub.sol\":526:5126  contract Unibase is Pausable, ERC20Capped, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfca3b5aa\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x8ab1d681\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3af32abf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x1171bda9\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x1171bda9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ub.sol\":4625:5124  function recoverERC20(... */\n    tag_6:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_12:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_13:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/ub.sol\":2716:2832  function isWhitelisted(address account) external view returns (bool) {... */\n    tag_14:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ub.sol\":1874:1951  function unpause() external onlyRole(PAUSER_ROLE) {... */\n    tag_15:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/ub.sol\":2498:2605  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_16:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_17:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ub.sol\":1711:1784  function pause() external onlyRole(PAUSER_ROLE) {... */\n    tag_19:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/ub.sol\":3316:3582  function removeFromWhitelist(... */\n    tag_20:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_21:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_23:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ub.sol\":589:651  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_25:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_26:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ub.sol\":2948:3190  function addToWhitelist(address account) external onlyRole(PAUSER_ROLE) {... */\n    tag_28:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      stop\n        /* \"contracts/ub.sol\":658:720  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_29:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ub.sol\":2111:2304  function setMinter(address minter) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_30:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_142\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_147\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":4625:5124  function recoverERC20(... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"contracts/ub.sol\":4738:4756  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/ub.sol\":4790:4791  0 */\n      0x00\n        /* \"contracts/ub.sol\":4776:4792  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ub.sol\":4776:4778  to */\n      dup4\n        /* \"contracts/ub.sol\":4776:4792  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ub.sol\":4768:4824  require(to != address(0), \"cannot send to zero address\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/ub.sol\":4859:4860  0 */\n      0x00\n        /* \"contracts/ub.sol\":4842:4861  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ub.sol\":4842:4847  token */\n      dup5\n        /* \"contracts/ub.sol\":4842:4861  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ub.sol\":4834:4894  require(token != address(0), \"token address cannot be zero\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/ub.sol\":4921:4922  0 */\n      0x00\n        /* \"contracts/ub.sol\":4912:4918  amount */\n      dup3\n        /* \"contracts/ub.sol\":4912:4922  amount > 0 */\n      gt\n        /* \"contracts/ub.sol\":4904:4959  require(amount > 0, \"amount must be greater than zero\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/ub.sol\":4969:4981  bool success */\n      0x00\n        /* \"contracts/ub.sol\":4991:4996  token */\n      dup5\n        /* \"contracts/ub.sol\":4984:5006  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ub.sol\":5007:5009  to */\n      dup6\n        /* \"contracts/ub.sol\":5011:5017  amount */\n      dup6\n        /* \"contracts/ub.sol\":4984:5018  IERC20(token).transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"contracts/ub.sol\":4969:5018  bool success = IERC20(token).transfer(to, amount) */\n      swap1\n      pop\n        /* \"contracts/ub.sol\":5036:5043  success */\n      dup1\n        /* \"contracts/ub.sol\":5028:5069  require(success, \"ERC20 transfer failed\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/ub.sol\":5106:5108  to */\n      dup4\n        /* \"contracts/ub.sol\":5084:5117  ERC20Recovered(token, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ub.sol\":5099:5104  token */\n      dup6\n        /* \"contracts/ub.sol\":5084:5117  ERC20Recovered(token, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaca8fb252cde442184e5f10e0f2e6e4029e8cd7717cae63559079610702436aa\n        /* \"contracts/ub.sol\":5110:5116  amount */\n      dup6\n        /* \"contracts/ub.sol\":5084:5117  ERC20Recovered(token, to, amount) */\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ub.sol\":4758:5124  {... */\n      pop\n        /* \"contracts/ub.sol\":4625:5124  function recoverERC20(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x03)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_68\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_190\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_192\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_193\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_192:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n      immutable(\"0x4a12ea77a1a063f26028f31dc447cd01a6aae44cbd0d238cbc76d74f2d67dabb\")\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_199\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_200\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_199:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":2716:2832  function isWhitelisted(address account) external view returns (bool) {... */\n    tag_88:\n        /* \"contracts/ub.sol\":2779:2783  bool */\n      0x00\n        /* \"contracts/ub.sol\":2802:2816  _isWhitelisted */\n      0x07\n        /* \"contracts/ub.sol\":2802:2825  _isWhitelisted[account] */\n      0x00\n        /* \"contracts/ub.sol\":2817:2824  account */\n      dup4\n        /* \"contracts/ub.sol\":2802:2825  _isWhitelisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ub.sol\":2795:2825  return _isWhitelisted[account] */\n      swap1\n      pop\n        /* \"contracts/ub.sol\":2716:2832  function isWhitelisted(address account) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":1874:1951  function unpause() external onlyRole(PAUSER_ROLE) {... */\n    tag_91:\n        /* \"contracts/ub.sol\":696:720  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/ub.sol\":1934:1944  _unpause() */\n      tag_205\n        /* \"contracts/ub.sol\":1934:1942  _unpause */\n      tag_206\n        /* \"contracts/ub.sol\":1934:1944  _unpause() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/ub.sol\":1874:1951  function unpause() external onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":2498:2605  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_94:\n        /* \"contracts/ub.sol\":627:651  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_208\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/ub.sol\":2581:2598  _mint(to, amount) */\n      tag_210\n        /* \"contracts/ub.sol\":2587:2589  to */\n      dup4\n        /* \"contracts/ub.sol\":2591:2597  amount */\n      dup4\n        /* \"contracts/ub.sol\":2581:2586  _mint */\n      tag_211\n        /* \"contracts/ub.sol\":2581:2598  _mint(to, amount) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/ub.sol\":2498:2605  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":1711:1784  function pause() external onlyRole(PAUSER_ROLE) {... */\n    tag_103:\n        /* \"contracts/ub.sol\":696:720  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/ub.sol\":1769:1777  _pause() */\n      tag_217\n        /* \"contracts/ub.sol\":1769:1775  _pause */\n      tag_218\n        /* \"contracts/ub.sol\":1769:1777  _pause() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/ub.sol\":1711:1784  function pause() external onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":3316:3582  function removeFromWhitelist(... */\n    tag_106:\n        /* \"contracts/ub.sol\":696:720  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/ub.sol\":3444:3445  0 */\n      0x00\n        /* \"contracts/ub.sol\":3425:3446  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ub.sol\":3425:3432  account */\n      dup3\n        /* \"contracts/ub.sol\":3425:3446  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ub.sol\":3417:3487  require(account != address(0), \"cannot un-whitelist the zero address\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"contracts/ub.sol\":3523:3528  false */\n      0x00\n        /* \"contracts/ub.sol\":3497:3511  _isWhitelisted */\n      0x07\n        /* \"contracts/ub.sol\":3497:3520  _isWhitelisted[account] */\n      0x00\n        /* \"contracts/ub.sol\":3512:3519  account */\n      dup5\n        /* \"contracts/ub.sol\":3497:3520  _isWhitelisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ub.sol\":3497:3528  _isWhitelisted[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ub.sol\":3560:3567  account */\n      dup2\n        /* \"contracts/ub.sol\":3543:3575  WhitelistUpdated(account, false) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d\n        /* \"contracts/ub.sol\":3569:3574  false */\n      0x00\n        /* \"contracts/ub.sol\":3543:3575  WhitelistUpdated(account, false) */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ub.sol\":3316:3582  function removeFromWhitelist(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_228\n      swap1\n      tag_147\n      jump\t// in\n    tag_228:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_229\n      swap1\n      tag_147\n      jump\t// in\n    tag_229:\n      dup1\n      iszero\n      tag_230\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_231\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_230)\n    tag_231:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_232:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_232\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":589:651  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_122:\n        /* \"contracts/ub.sol\":627:651  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/ub.sol\":589:651  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_68\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_238\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_240\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_200\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_240:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":2948:3190  function addToWhitelist(address account) external onlyRole(PAUSER_ROLE) {... */\n    tag_134:\n        /* \"contracts/ub.sol\":696:720  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_243\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/ub.sol\":3057:3058  0 */\n      0x00\n        /* \"contracts/ub.sol\":3038:3059  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ub.sol\":3038:3045  account */\n      dup3\n        /* \"contracts/ub.sol\":3038:3059  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ub.sol\":3030:3097  require(account != address(0), \"cannot whitelist the zero address\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contracts/ub.sol\":3133:3137  true */\n      0x01\n        /* \"contracts/ub.sol\":3107:3121  _isWhitelisted */\n      0x07\n        /* \"contracts/ub.sol\":3107:3130  _isWhitelisted[account] */\n      0x00\n        /* \"contracts/ub.sol\":3122:3129  account */\n      dup5\n        /* \"contracts/ub.sol\":3107:3130  _isWhitelisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ub.sol\":3107:3137  _isWhitelisted[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ub.sol\":3169:3176  account */\n      dup2\n        /* \"contracts/ub.sol\":3152:3183  WhitelistUpdated(account, true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d\n        /* \"contracts/ub.sol\":3178:3182  true */\n      0x01\n        /* \"contracts/ub.sol\":3152:3183  WhitelistUpdated(account, true) */\n      mload(0x40)\n      tag_248\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ub.sol\":2948:3190  function addToWhitelist(address account) external onlyRole(PAUSER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":658:720  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_136:\n        /* \"contracts/ub.sol\":696:720  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/ub.sol\":658:720  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/ub.sol\":2111:2304  function setMinter(address minter) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"contracts/ub.sol\":2164:2182  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/ub.sol\":2220:2221  0 */\n      0x00\n        /* \"contracts/ub.sol\":2202:2222  minter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ub.sol\":2202:2208  minter */\n      dup3\n        /* \"contracts/ub.sol\":2202:2222  minter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ub.sol\":2194:2256  require(minter != address(0), \"Minter cannot be zero address\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_252:\n        /* \"contracts/ub.sol\":2266:2297  _grantRole(MINTER_ROLE, minter) */\n      tag_255\n        /* \"contracts/ub.sol\":627:651  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/ub.sol\":2290:2296  minter */\n      dup4\n        /* \"contracts/ub.sol\":2266:2276  _grantRole */\n      tag_193\n        /* \"contracts/ub.sol\":2266:2297  _grantRole(MINTER_ROLE, minter) */\n      jump\t// in\n    tag_255:\n      pop\n        /* \"contracts/ub.sol\":2111:2304  function setMinter(address minter) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_262\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_264\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_281\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_280)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_280:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_286\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_288\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_285)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_285:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_291\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_292\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_294\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_295\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_301\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_302\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_304\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_305\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_312\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_314\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap3\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ub.sol\":3710:4252  function _update(... */\n    tag_279:\n        /* \"contracts/ub.sol\":3838:3846  paused() */\n      tag_319\n        /* \"contracts/ub.sol\":3838:3844  paused */\n      tag_96\n        /* \"contracts/ub.sol\":3838:3846  paused() */\n      jump\t// in\n    tag_319:\n        /* \"contracts/ub.sol\":3834:4206  if (paused()) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"contracts/ub.sol\":3862:3876  bool isMinting */\n      0x00\n        /* \"contracts/ub.sol\":3895:3896  0 */\n      dup1\n        /* \"contracts/ub.sol\":3879:3897  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ub.sol\":3879:3883  from */\n      dup5\n        /* \"contracts/ub.sol\":3879:3897  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ub.sol\":3862:3897  bool isMinting = from == address(0) */\n      swap1\n      pop\n        /* \"contracts/ub.sol\":3911:3925  bool isBurning */\n      0x00\n        /* \"contracts/ub.sol\":3942:3943  0 */\n      dup1\n        /* \"contracts/ub.sol\":3928:3944  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ub.sol\":3928:3930  to */\n      dup5\n        /* \"contracts/ub.sol\":3928:3944  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ub.sol\":3911:3944  bool isBurning = to == address(0) */\n      swap1\n      pop\n        /* \"contracts/ub.sol\":3958:3984  bool isWhitelistedTransfer */\n      0x00\n        /* \"contracts/ub.sol\":3987:4001  _isWhitelisted */\n      0x07\n        /* \"contracts/ub.sol\":3987:4007  _isWhitelisted[from] */\n      0x00\n        /* \"contracts/ub.sol\":4002:4006  from */\n      dup8\n        /* \"contracts/ub.sol\":3987:4007  _isWhitelisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ub.sol\":3987:4029  _isWhitelisted[from] && _isWhitelisted[to] */\n      dup1\n      iszero\n      tag_321\n      jumpi\n      pop\n        /* \"contracts/ub.sol\":4011:4025  _isWhitelisted */\n      0x07\n        /* \"contracts/ub.sol\":4011:4029  _isWhitelisted[to] */\n      0x00\n        /* \"contracts/ub.sol\":4026:4028  to */\n      dup7\n        /* \"contracts/ub.sol\":4011:4029  _isWhitelisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ub.sol\":3987:4029  _isWhitelisted[from] && _isWhitelisted[to] */\n    tag_321:\n        /* \"contracts/ub.sol\":3958:4029  bool isWhitelistedTransfer = _isWhitelisted[from] && _isWhitelisted[to] */\n      swap1\n      pop\n        /* \"contracts/ub.sol\":4068:4077  isMinting */\n      dup3\n        /* \"contracts/ub.sol\":4068:4090  isMinting || isBurning */\n      dup1\n      tag_322\n      jumpi\n      pop\n        /* \"contracts/ub.sol\":4081:4090  isBurning */\n      dup2\n        /* \"contracts/ub.sol\":4068:4090  isMinting || isBurning */\n    tag_322:\n        /* \"contracts/ub.sol\":4068:4115  isMinting || isBurning || isWhitelistedTransfer */\n      dup1\n      tag_323\n      jumpi\n      pop\n        /* \"contracts/ub.sol\":4094:4115  isWhitelistedTransfer */\n      dup1\n        /* \"contracts/ub.sol\":4068:4115  isMinting || isBurning || isWhitelistedTransfer */\n    tag_323:\n        /* \"contracts/ub.sol\":4043:4195  require(... */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/ub.sol\":3848:4206  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ub.sol\":3834:4206  if (paused()) {... */\n    tag_320:\n        /* \"contracts/ub.sol\":4215:4245  super._update(from, to, value) */\n      tag_327\n        /* \"contracts/ub.sol\":4229:4233  from */\n      dup4\n        /* \"contracts/ub.sol\":4235:4237  to */\n      dup4\n        /* \"contracts/ub.sol\":4239:4244  value */\n      dup4\n        /* \"contracts/ub.sol\":4215:4228  super._update */\n      tag_328\n        /* \"contracts/ub.sol\":4215:4245  super._update(from, to, value) */\n      jump\t// in\n    tag_327:\n        /* \"contracts/ub.sol\":3710:4252  function _update(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_330\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_96\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_331:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_335\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_96\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_336:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1036:1407  function _update(address from, address to, uint256 value) internal virtual override {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1130:1160  super._update(from, to, value) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1144:1148  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1150:1152  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1154:1159  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1130:1143  super._update */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1130:1160  super._update(from, to, value) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1191:1192  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1175:1193  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1175:1179  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1175:1193  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1171:1401  if (from == address(0)) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1209:1226  uint256 maxSupply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1229:1234  cap() */\n      tag_343\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1229:1232  cap */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1229:1234  cap() */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1209:1234  uint256 maxSupply = cap() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1248:1262  uint256 supply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1265:1278  totalSupply() */\n      tag_344\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1265:1276  totalSupply */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1265:1278  totalSupply() */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1248:1278  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1305:1314  maxSupply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1296:1302  supply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1296:1314  supply > maxSupply */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1292:1391  if (supply > maxSupply) {... */\n      iszero\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1358:1364  supply */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1366:1375  maxSupply */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1341:1376  ERC20ExceededCap(supply, maxSupply) */\n      mload(0x40)\n      0x9e79f85400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap3\n      swap2\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1292:1391  if (supply > maxSupply) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1195:1401  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1171:1401  if (from == address(0)) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1036:1407  function _update(address from, address to, uint256 value) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_350\n      swap2\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_352)\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_356)\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_357\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_359:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_361:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_362:\n        /* \"#utility.yul\":561:584   */\n      tag_416\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_361\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_417:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_363:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_419\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_362\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_40:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_422\n      tag_359\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":833:952   */\n    tag_421:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_423\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_363\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_364:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_365:\n        /* \"#utility.yul\":1268:1289   */\n      tag_426\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_364\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_43:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_428\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_365\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_366:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_367:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_368:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_432:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_432)\n    tag_434:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_369:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_370:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_437\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_366\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2329:2400   */\n      tag_438\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_367\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_439\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_368\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2499:2528   */\n      tag_440\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_369\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_47:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_442\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_370\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_371:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_372:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_445\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_371\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_373:\n        /* \"#utility.yul\":3167:3191   */\n      tag_447\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_372\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_448:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_374:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_450\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_373\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_375:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_376:\n        /* \"#utility.yul\":3523:3547   */\n      tag_453\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_375\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_454:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_377:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_456\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_376\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_50:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_459\n      tag_359\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3816:3935   */\n    tag_458:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_460\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_374\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_461\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_377\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4822   */\n    tag_55:\n        /* \"#utility.yul\":4280:4286   */\n      0x00\n        /* \"#utility.yul\":4288:4294   */\n      dup1\n        /* \"#utility.yul\":4296:4302   */\n      0x00\n        /* \"#utility.yul\":4345:4347   */\n      0x60\n        /* \"#utility.yul\":4333:4342   */\n      dup5\n        /* \"#utility.yul\":4324:4331   */\n      dup7\n        /* \"#utility.yul\":4320:4343   */\n      sub\n        /* \"#utility.yul\":4316:4348   */\n      slt\n        /* \"#utility.yul\":4313:4432   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":4351:4430   */\n      tag_464\n      tag_359\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4313:4432   */\n    tag_463:\n        /* \"#utility.yul\":4471:4472   */\n      0x00\n        /* \"#utility.yul\":4496:4549   */\n      tag_465\n        /* \"#utility.yul\":4541:4548   */\n      dup7\n        /* \"#utility.yul\":4532:4538   */\n      dup3\n        /* \"#utility.yul\":4521:4530   */\n      dup8\n        /* \"#utility.yul\":4517:4539   */\n      add\n        /* \"#utility.yul\":4496:4549   */\n      tag_374\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4486:4549   */\n      swap4\n      pop\n        /* \"#utility.yul\":4442:4559   */\n      pop\n        /* \"#utility.yul\":4598:4600   */\n      0x20\n        /* \"#utility.yul\":4624:4677   */\n      tag_466\n        /* \"#utility.yul\":4669:4676   */\n      dup7\n        /* \"#utility.yul\":4660:4666   */\n      dup3\n        /* \"#utility.yul\":4649:4658   */\n      dup8\n        /* \"#utility.yul\":4645:4667   */\n      add\n        /* \"#utility.yul\":4624:4677   */\n      tag_374\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":4614:4677   */\n      swap3\n      pop\n        /* \"#utility.yul\":4569:4687   */\n      pop\n        /* \"#utility.yul\":4726:4728   */\n      0x40\n        /* \"#utility.yul\":4752:4805   */\n      tag_467\n        /* \"#utility.yul\":4797:4804   */\n      dup7\n        /* \"#utility.yul\":4788:4794   */\n      dup3\n        /* \"#utility.yul\":4777:4786   */\n      dup8\n        /* \"#utility.yul\":4773:4795   */\n      add\n        /* \"#utility.yul\":4752:4805   */\n      tag_377\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4742:4805   */\n      swap2\n      pop\n        /* \"#utility.yul\":4697:4815   */\n      pop\n        /* \"#utility.yul\":4203:4822   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4828:4946   */\n    tag_378:\n        /* \"#utility.yul\":4915:4939   */\n      tag_469\n        /* \"#utility.yul\":4933:4938   */\n      dup2\n        /* \"#utility.yul\":4915:4939   */\n      tag_375\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4910:4913   */\n      dup3\n        /* \"#utility.yul\":4903:4940   */\n      mstore\n        /* \"#utility.yul\":4828:4946   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4952:5174   */\n    tag_60:\n        /* \"#utility.yul\":5045:5049   */\n      0x00\n        /* \"#utility.yul\":5083:5085   */\n      0x20\n        /* \"#utility.yul\":5072:5081   */\n      dup3\n        /* \"#utility.yul\":5068:5086   */\n      add\n        /* \"#utility.yul\":5060:5086   */\n      swap1\n      pop\n        /* \"#utility.yul\":5096:5167   */\n      tag_471\n        /* \"#utility.yul\":5164:5165   */\n      0x00\n        /* \"#utility.yul\":5153:5162   */\n      dup4\n        /* \"#utility.yul\":5149:5166   */\n      add\n        /* \"#utility.yul\":5140:5146   */\n      dup5\n        /* \"#utility.yul\":5096:5167   */\n      tag_378\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4952:5174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5180:5257   */\n    tag_379:\n        /* \"#utility.yul\":5217:5224   */\n      0x00\n        /* \"#utility.yul\":5246:5251   */\n      dup2\n        /* \"#utility.yul\":5235:5251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5263:5385   */\n    tag_380:\n        /* \"#utility.yul\":5336:5360   */\n      tag_474\n        /* \"#utility.yul\":5354:5359   */\n      dup2\n        /* \"#utility.yul\":5336:5360   */\n      tag_379\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5329:5334   */\n      dup2\n        /* \"#utility.yul\":5326:5361   */\n      eq\n        /* \"#utility.yul\":5316:5379   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":5375:5376   */\n      0x00\n        /* \"#utility.yul\":5372:5373   */\n      dup1\n        /* \"#utility.yul\":5365:5377   */\n      revert\n        /* \"#utility.yul\":5316:5379   */\n    tag_475:\n        /* \"#utility.yul\":5263:5385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5391:5530   */\n    tag_381:\n        /* \"#utility.yul\":5437:5442   */\n      0x00\n        /* \"#utility.yul\":5475:5481   */\n      dup2\n        /* \"#utility.yul\":5462:5482   */\n      calldataload\n        /* \"#utility.yul\":5453:5482   */\n      swap1\n      pop\n        /* \"#utility.yul\":5491:5524   */\n      tag_477\n        /* \"#utility.yul\":5518:5523   */\n      dup2\n        /* \"#utility.yul\":5491:5524   */\n      tag_380\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":5391:5530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5536:5865   */\n    tag_67:\n        /* \"#utility.yul\":5595:5601   */\n      0x00\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5632:5641   */\n      dup3\n        /* \"#utility.yul\":5623:5630   */\n      dup5\n        /* \"#utility.yul\":5619:5642   */\n      sub\n        /* \"#utility.yul\":5615:5647   */\n      slt\n        /* \"#utility.yul\":5612:5731   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":5650:5729   */\n      tag_480\n      tag_359\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5612:5731   */\n    tag_479:\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5795:5848   */\n      tag_481\n        /* \"#utility.yul\":5840:5847   */\n      dup5\n        /* \"#utility.yul\":5831:5837   */\n      dup3\n        /* \"#utility.yul\":5820:5829   */\n      dup6\n        /* \"#utility.yul\":5816:5838   */\n      add\n        /* \"#utility.yul\":5795:5848   */\n      tag_381\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":5785:5848   */\n      swap2\n      pop\n        /* \"#utility.yul\":5741:5858   */\n      pop\n        /* \"#utility.yul\":5536:5865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:5989   */\n    tag_382:\n        /* \"#utility.yul\":5958:5982   */\n      tag_483\n        /* \"#utility.yul\":5976:5981   */\n      dup2\n        /* \"#utility.yul\":5958:5982   */\n      tag_379\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5953:5956   */\n      dup3\n        /* \"#utility.yul\":5946:5983   */\n      mstore\n        /* \"#utility.yul\":5871:5989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5995:6217   */\n    tag_70:\n        /* \"#utility.yul\":6088:6092   */\n      0x00\n        /* \"#utility.yul\":6126:6128   */\n      0x20\n        /* \"#utility.yul\":6115:6124   */\n      dup3\n        /* \"#utility.yul\":6111:6129   */\n      add\n        /* \"#utility.yul\":6103:6129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6139:6210   */\n      tag_485\n        /* \"#utility.yul\":6207:6208   */\n      0x00\n        /* \"#utility.yul\":6196:6205   */\n      dup4\n        /* \"#utility.yul\":6192:6209   */\n      add\n        /* \"#utility.yul\":6183:6189   */\n      dup5\n        /* \"#utility.yul\":6139:6210   */\n      tag_382\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":5995:6217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6697   */\n    tag_73:\n        /* \"#utility.yul\":6291:6297   */\n      0x00\n        /* \"#utility.yul\":6299:6305   */\n      dup1\n        /* \"#utility.yul\":6348:6350   */\n      0x40\n        /* \"#utility.yul\":6336:6345   */\n      dup4\n        /* \"#utility.yul\":6327:6334   */\n      dup6\n        /* \"#utility.yul\":6323:6346   */\n      sub\n        /* \"#utility.yul\":6319:6351   */\n      slt\n        /* \"#utility.yul\":6316:6435   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":6354:6433   */\n      tag_488\n      tag_359\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6316:6435   */\n    tag_487:\n        /* \"#utility.yul\":6474:6475   */\n      0x00\n        /* \"#utility.yul\":6499:6552   */\n      tag_489\n        /* \"#utility.yul\":6544:6551   */\n      dup6\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup7\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6499:6552   */\n      tag_381\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":6489:6552   */\n      swap3\n      pop\n        /* \"#utility.yul\":6445:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_490\n        /* \"#utility.yul\":6672:6679   */\n      dup6\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup7\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_374\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6223:6697   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6703:6789   */\n    tag_383:\n        /* \"#utility.yul\":6738:6745   */\n      0x00\n        /* \"#utility.yul\":6778:6782   */\n      0xff\n        /* \"#utility.yul\":6771:6776   */\n      dup3\n        /* \"#utility.yul\":6767:6783   */\n      and\n        /* \"#utility.yul\":6756:6783   */\n      swap1\n      pop\n        /* \"#utility.yul\":6703:6789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6795:6907   */\n    tag_384:\n        /* \"#utility.yul\":6878:6900   */\n      tag_493\n        /* \"#utility.yul\":6894:6899   */\n      dup2\n        /* \"#utility.yul\":6878:6900   */\n      tag_383\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":6873:6876   */\n      dup3\n        /* \"#utility.yul\":6866:6901   */\n      mstore\n        /* \"#utility.yul\":6795:6907   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6913:7127   */\n    tag_78:\n        /* \"#utility.yul\":7002:7006   */\n      0x00\n        /* \"#utility.yul\":7040:7042   */\n      0x20\n        /* \"#utility.yul\":7029:7038   */\n      dup3\n        /* \"#utility.yul\":7025:7043   */\n      add\n        /* \"#utility.yul\":7017:7043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7053:7120   */\n      tag_495\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7106:7115   */\n      dup4\n        /* \"#utility.yul\":7102:7119   */\n      add\n        /* \"#utility.yul\":7093:7099   */\n      dup5\n        /* \"#utility.yul\":7053:7120   */\n      tag_384\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":6913:7127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7133:7462   */\n    tag_87:\n        /* \"#utility.yul\":7192:7198   */\n      0x00\n        /* \"#utility.yul\":7241:7243   */\n      0x20\n        /* \"#utility.yul\":7229:7238   */\n      dup3\n        /* \"#utility.yul\":7220:7227   */\n      dup5\n        /* \"#utility.yul\":7216:7239   */\n      sub\n        /* \"#utility.yul\":7212:7244   */\n      slt\n        /* \"#utility.yul\":7209:7328   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":7247:7326   */\n      tag_498\n      tag_359\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7209:7328   */\n    tag_497:\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7392:7445   */\n      tag_499\n        /* \"#utility.yul\":7437:7444   */\n      dup5\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup6\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7392:7445   */\n      tag_374\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7382:7445   */\n      swap2\n      pop\n        /* \"#utility.yul\":7338:7455   */\n      pop\n        /* \"#utility.yul\":7133:7462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7942   */\n    tag_129:\n        /* \"#utility.yul\":7536:7542   */\n      0x00\n        /* \"#utility.yul\":7544:7550   */\n      dup1\n        /* \"#utility.yul\":7593:7595   */\n      0x40\n        /* \"#utility.yul\":7581:7590   */\n      dup4\n        /* \"#utility.yul\":7572:7579   */\n      dup6\n        /* \"#utility.yul\":7568:7591   */\n      sub\n        /* \"#utility.yul\":7564:7596   */\n      slt\n        /* \"#utility.yul\":7561:7680   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":7599:7678   */\n      tag_502\n      tag_359\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":7561:7680   */\n    tag_501:\n        /* \"#utility.yul\":7719:7720   */\n      0x00\n        /* \"#utility.yul\":7744:7797   */\n      tag_503\n        /* \"#utility.yul\":7789:7796   */\n      dup6\n        /* \"#utility.yul\":7780:7786   */\n      dup3\n        /* \"#utility.yul\":7769:7778   */\n      dup7\n        /* \"#utility.yul\":7765:7787   */\n      add\n        /* \"#utility.yul\":7744:7797   */\n      tag_374\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":7734:7797   */\n      swap3\n      pop\n        /* \"#utility.yul\":7690:7807   */\n      pop\n        /* \"#utility.yul\":7846:7848   */\n      0x20\n        /* \"#utility.yul\":7872:7925   */\n      tag_504\n        /* \"#utility.yul\":7917:7924   */\n      dup6\n        /* \"#utility.yul\":7908:7914   */\n      dup3\n        /* \"#utility.yul\":7897:7906   */\n      dup7\n        /* \"#utility.yul\":7893:7915   */\n      add\n        /* \"#utility.yul\":7872:7925   */\n      tag_374\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":7862:7925   */\n      swap2\n      pop\n        /* \"#utility.yul\":7817:7935   */\n      pop\n        /* \"#utility.yul\":7468:7942   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7948:8128   */\n    tag_385:\n        /* \"#utility.yul\":7996:8073   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7993:7994   */\n      0x00\n        /* \"#utility.yul\":7986:8074   */\n      mstore\n        /* \"#utility.yul\":8093:8097   */\n      0x22\n        /* \"#utility.yul\":8090:8091   */\n      0x04\n        /* \"#utility.yul\":8083:8098   */\n      mstore\n        /* \"#utility.yul\":8117:8121   */\n      0x24\n        /* \"#utility.yul\":8114:8115   */\n      0x00\n        /* \"#utility.yul\":8107:8122   */\n      revert\n        /* \"#utility.yul\":8134:8454   */\n    tag_147:\n        /* \"#utility.yul\":8178:8184   */\n      0x00\n        /* \"#utility.yul\":8215:8216   */\n      0x02\n        /* \"#utility.yul\":8209:8213   */\n      dup3\n        /* \"#utility.yul\":8205:8217   */\n      div\n        /* \"#utility.yul\":8195:8217   */\n      swap1\n      pop\n        /* \"#utility.yul\":8262:8263   */\n      0x01\n        /* \"#utility.yul\":8256:8260   */\n      dup3\n        /* \"#utility.yul\":8252:8264   */\n      and\n        /* \"#utility.yul\":8283:8301   */\n      dup1\n        /* \"#utility.yul\":8273:8354   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":8339:8343   */\n      0x7f\n        /* \"#utility.yul\":8331:8337   */\n      dup3\n        /* \"#utility.yul\":8327:8344   */\n      and\n        /* \"#utility.yul\":8317:8344   */\n      swap2\n      pop\n        /* \"#utility.yul\":8273:8354   */\n    tag_507:\n        /* \"#utility.yul\":8401:8403   */\n      0x20\n        /* \"#utility.yul\":8393:8399   */\n      dup3\n        /* \"#utility.yul\":8390:8404   */\n      lt\n        /* \"#utility.yul\":8370:8388   */\n      dup2\n        /* \"#utility.yul\":8367:8405   */\n      sub\n        /* \"#utility.yul\":8364:8448   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":8420:8438   */\n      tag_509\n      tag_385\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8364:8448   */\n    tag_508:\n        /* \"#utility.yul\":8185:8454   */\n      pop\n        /* \"#utility.yul\":8134:8454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8460:8637   */\n    tag_386:\n        /* \"#utility.yul\":8600:8629   */\n      0x63616e6e6f742073656e6420746f207a65726f20616464726573730000000000\n        /* \"#utility.yul\":8596:8597   */\n      0x00\n        /* \"#utility.yul\":8588:8594   */\n      dup3\n        /* \"#utility.yul\":8584:8598   */\n      add\n        /* \"#utility.yul\":8577:8630   */\n      mstore\n        /* \"#utility.yul\":8460:8637   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8643:9009   */\n    tag_387:\n        /* \"#utility.yul\":8785:8788   */\n      0x00\n        /* \"#utility.yul\":8806:8873   */\n      tag_512\n        /* \"#utility.yul\":8870:8872   */\n      0x1b\n        /* \"#utility.yul\":8865:8868   */\n      dup4\n        /* \"#utility.yul\":8806:8873   */\n      tag_367\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":8799:8873   */\n      swap2\n      pop\n        /* \"#utility.yul\":8882:8975   */\n      tag_513\n        /* \"#utility.yul\":8971:8974   */\n      dup3\n        /* \"#utility.yul\":8882:8975   */\n      tag_386\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9000:9002   */\n      0x20\n        /* \"#utility.yul\":8995:8998   */\n      dup3\n        /* \"#utility.yul\":8991:9003   */\n      add\n        /* \"#utility.yul\":8984:9003   */\n      swap1\n      pop\n        /* \"#utility.yul\":8643:9009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9015:9434   */\n    tag_163:\n        /* \"#utility.yul\":9181:9185   */\n      0x00\n        /* \"#utility.yul\":9219:9221   */\n      0x20\n        /* \"#utility.yul\":9208:9217   */\n      dup3\n        /* \"#utility.yul\":9204:9222   */\n      add\n        /* \"#utility.yul\":9196:9222   */\n      swap1\n      pop\n        /* \"#utility.yul\":9268:9277   */\n      dup2\n        /* \"#utility.yul\":9262:9266   */\n      dup2\n        /* \"#utility.yul\":9258:9278   */\n      sub\n        /* \"#utility.yul\":9254:9255   */\n      0x00\n        /* \"#utility.yul\":9243:9252   */\n      dup4\n        /* \"#utility.yul\":9239:9256   */\n      add\n        /* \"#utility.yul\":9232:9279   */\n      mstore\n        /* \"#utility.yul\":9296:9427   */\n      tag_515\n        /* \"#utility.yul\":9422:9426   */\n      dup2\n        /* \"#utility.yul\":9296:9427   */\n      tag_387\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9288:9427   */\n      swap1\n      pop\n        /* \"#utility.yul\":9015:9434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9440:9618   */\n    tag_388:\n        /* \"#utility.yul\":9580:9610   */\n      0x746f6b656e20616464726573732063616e6e6f74206265207a65726f00000000\n        /* \"#utility.yul\":9576:9577   */\n      0x00\n        /* \"#utility.yul\":9568:9574   */\n      dup3\n        /* \"#utility.yul\":9564:9578   */\n      add\n        /* \"#utility.yul\":9557:9611   */\n      mstore\n        /* \"#utility.yul\":9440:9618   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9624:9990   */\n    tag_389:\n        /* \"#utility.yul\":9766:9769   */\n      0x00\n        /* \"#utility.yul\":9787:9854   */\n      tag_518\n        /* \"#utility.yul\":9851:9853   */\n      0x1c\n        /* \"#utility.yul\":9846:9849   */\n      dup4\n        /* \"#utility.yul\":9787:9854   */\n      tag_367\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":9780:9854   */\n      swap2\n      pop\n        /* \"#utility.yul\":9863:9956   */\n      tag_519\n        /* \"#utility.yul\":9952:9955   */\n      dup3\n        /* \"#utility.yul\":9863:9956   */\n      tag_388\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":9981:9983   */\n      0x20\n        /* \"#utility.yul\":9976:9979   */\n      dup3\n        /* \"#utility.yul\":9972:9984   */\n      add\n        /* \"#utility.yul\":9965:9984   */\n      swap1\n      pop\n        /* \"#utility.yul\":9624:9990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9996:10415   */\n    tag_166:\n        /* \"#utility.yul\":10162:10166   */\n      0x00\n        /* \"#utility.yul\":10200:10202   */\n      0x20\n        /* \"#utility.yul\":10189:10198   */\n      dup3\n        /* \"#utility.yul\":10185:10203   */\n      add\n        /* \"#utility.yul\":10177:10203   */\n      swap1\n      pop\n        /* \"#utility.yul\":10249:10258   */\n      dup2\n        /* \"#utility.yul\":10243:10247   */\n      dup2\n        /* \"#utility.yul\":10239:10259   */\n      sub\n        /* \"#utility.yul\":10235:10236   */\n      0x00\n        /* \"#utility.yul\":10224:10233   */\n      dup4\n        /* \"#utility.yul\":10220:10237   */\n      add\n        /* \"#utility.yul\":10213:10260   */\n      mstore\n        /* \"#utility.yul\":10277:10408   */\n      tag_521\n        /* \"#utility.yul\":10403:10407   */\n      dup2\n        /* \"#utility.yul\":10277:10408   */\n      tag_389\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10269:10408   */\n      swap1\n      pop\n        /* \"#utility.yul\":9996:10415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10421:10603   */\n    tag_390:\n        /* \"#utility.yul\":10561:10595   */\n      0x616d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":10557:10558   */\n      0x00\n        /* \"#utility.yul\":10549:10555   */\n      dup3\n        /* \"#utility.yul\":10545:10559   */\n      add\n        /* \"#utility.yul\":10538:10596   */\n      mstore\n        /* \"#utility.yul\":10421:10603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10609:10975   */\n    tag_391:\n        /* \"#utility.yul\":10751:10754   */\n      0x00\n        /* \"#utility.yul\":10772:10839   */\n      tag_524\n        /* \"#utility.yul\":10836:10838   */\n      0x20\n        /* \"#utility.yul\":10831:10834   */\n      dup4\n        /* \"#utility.yul\":10772:10839   */\n      tag_367\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10765:10839   */\n      swap2\n      pop\n        /* \"#utility.yul\":10848:10941   */\n      tag_525\n        /* \"#utility.yul\":10937:10940   */\n      dup3\n        /* \"#utility.yul\":10848:10941   */\n      tag_390\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10966:10968   */\n      0x20\n        /* \"#utility.yul\":10961:10964   */\n      dup3\n        /* \"#utility.yul\":10957:10969   */\n      add\n        /* \"#utility.yul\":10950:10969   */\n      swap1\n      pop\n        /* \"#utility.yul\":10609:10975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10981:11400   */\n    tag_169:\n        /* \"#utility.yul\":11147:11151   */\n      0x00\n        /* \"#utility.yul\":11185:11187   */\n      0x20\n        /* \"#utility.yul\":11174:11183   */\n      dup3\n        /* \"#utility.yul\":11170:11188   */\n      add\n        /* \"#utility.yul\":11162:11188   */\n      swap1\n      pop\n        /* \"#utility.yul\":11234:11243   */\n      dup2\n        /* \"#utility.yul\":11228:11232   */\n      dup2\n        /* \"#utility.yul\":11224:11244   */\n      sub\n        /* \"#utility.yul\":11220:11221   */\n      0x00\n        /* \"#utility.yul\":11209:11218   */\n      dup4\n        /* \"#utility.yul\":11205:11222   */\n      add\n        /* \"#utility.yul\":11198:11245   */\n      mstore\n        /* \"#utility.yul\":11262:11393   */\n      tag_527\n        /* \"#utility.yul\":11388:11392   */\n      dup2\n        /* \"#utility.yul\":11262:11393   */\n      tag_391\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11254:11393   */\n      swap1\n      pop\n        /* \"#utility.yul\":10981:11400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11406:11524   */\n    tag_392:\n        /* \"#utility.yul\":11493:11517   */\n      tag_529\n        /* \"#utility.yul\":11511:11516   */\n      dup2\n        /* \"#utility.yul\":11493:11517   */\n      tag_372\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11488:11491   */\n      dup3\n        /* \"#utility.yul\":11481:11518   */\n      mstore\n        /* \"#utility.yul\":11406:11524   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11530:11862   */\n    tag_171:\n        /* \"#utility.yul\":11651:11655   */\n      0x00\n        /* \"#utility.yul\":11689:11691   */\n      0x40\n        /* \"#utility.yul\":11678:11687   */\n      dup3\n        /* \"#utility.yul\":11674:11692   */\n      add\n        /* \"#utility.yul\":11666:11692   */\n      swap1\n      pop\n        /* \"#utility.yul\":11702:11773   */\n      tag_531\n        /* \"#utility.yul\":11770:11771   */\n      0x00\n        /* \"#utility.yul\":11759:11768   */\n      dup4\n        /* \"#utility.yul\":11755:11772   */\n      add\n        /* \"#utility.yul\":11746:11752   */\n      dup6\n        /* \"#utility.yul\":11702:11773   */\n      tag_392\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11783:11855   */\n      tag_532\n        /* \"#utility.yul\":11851:11853   */\n      0x20\n        /* \"#utility.yul\":11840:11849   */\n      dup4\n        /* \"#utility.yul\":11836:11854   */\n      add\n        /* \"#utility.yul\":11827:11833   */\n      dup5\n        /* \"#utility.yul\":11783:11855   */\n      tag_378\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":11530:11862   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11868:11984   */\n    tag_393:\n        /* \"#utility.yul\":11938:11959   */\n      tag_534\n        /* \"#utility.yul\":11953:11958   */\n      dup2\n        /* \"#utility.yul\":11938:11959   */\n      tag_364\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11931:11936   */\n      dup2\n        /* \"#utility.yul\":11928:11960   */\n      eq\n        /* \"#utility.yul\":11918:11978   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":11974:11975   */\n      0x00\n        /* \"#utility.yul\":11971:11972   */\n      dup1\n        /* \"#utility.yul\":11964:11976   */\n      revert\n        /* \"#utility.yul\":11918:11978   */\n    tag_535:\n        /* \"#utility.yul\":11868:11984   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11990:12127   */\n    tag_394:\n        /* \"#utility.yul\":12044:12049   */\n      0x00\n        /* \"#utility.yul\":12075:12081   */\n      dup2\n        /* \"#utility.yul\":12069:12082   */\n      mload\n        /* \"#utility.yul\":12060:12082   */\n      swap1\n      pop\n        /* \"#utility.yul\":12091:12121   */\n      tag_537\n        /* \"#utility.yul\":12115:12120   */\n      dup2\n        /* \"#utility.yul\":12091:12121   */\n      tag_393\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11990:12127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12133:12478   */\n    tag_175:\n        /* \"#utility.yul\":12200:12206   */\n      0x00\n        /* \"#utility.yul\":12249:12251   */\n      0x20\n        /* \"#utility.yul\":12237:12246   */\n      dup3\n        /* \"#utility.yul\":12228:12235   */\n      dup5\n        /* \"#utility.yul\":12224:12247   */\n      sub\n        /* \"#utility.yul\":12220:12252   */\n      slt\n        /* \"#utility.yul\":12217:12336   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":12255:12334   */\n      tag_540\n      tag_359\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12217:12336   */\n    tag_539:\n        /* \"#utility.yul\":12375:12376   */\n      0x00\n        /* \"#utility.yul\":12400:12461   */\n      tag_541\n        /* \"#utility.yul\":12453:12460   */\n      dup5\n        /* \"#utility.yul\":12444:12450   */\n      dup3\n        /* \"#utility.yul\":12433:12442   */\n      dup6\n        /* \"#utility.yul\":12429:12451   */\n      add\n        /* \"#utility.yul\":12400:12461   */\n      tag_394\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":12390:12461   */\n      swap2\n      pop\n        /* \"#utility.yul\":12346:12471   */\n      pop\n        /* \"#utility.yul\":12133:12478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12484:12655   */\n    tag_395:\n        /* \"#utility.yul\":12624:12647   */\n      0x4552433230207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":12620:12621   */\n      0x00\n        /* \"#utility.yul\":12612:12618   */\n      dup3\n        /* \"#utility.yul\":12608:12622   */\n      add\n        /* \"#utility.yul\":12601:12648   */\n      mstore\n        /* \"#utility.yul\":12484:12655   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12661:13027   */\n    tag_396:\n        /* \"#utility.yul\":12803:12806   */\n      0x00\n        /* \"#utility.yul\":12824:12891   */\n      tag_544\n        /* \"#utility.yul\":12888:12890   */\n      0x15\n        /* \"#utility.yul\":12883:12886   */\n      dup4\n        /* \"#utility.yul\":12824:12891   */\n      tag_367\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12817:12891   */\n      swap2\n      pop\n        /* \"#utility.yul\":12900:12993   */\n      tag_545\n        /* \"#utility.yul\":12989:12992   */\n      dup3\n        /* \"#utility.yul\":12900:12993   */\n      tag_395\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13018:13020   */\n      0x20\n        /* \"#utility.yul\":13013:13016   */\n      dup3\n        /* \"#utility.yul\":13009:13021   */\n      add\n        /* \"#utility.yul\":13002:13021   */\n      swap1\n      pop\n        /* \"#utility.yul\":12661:13027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13033:13452   */\n    tag_178:\n        /* \"#utility.yul\":13199:13203   */\n      0x00\n        /* \"#utility.yul\":13237:13239   */\n      0x20\n        /* \"#utility.yul\":13226:13235   */\n      dup3\n        /* \"#utility.yul\":13222:13240   */\n      add\n        /* \"#utility.yul\":13214:13240   */\n      swap1\n      pop\n        /* \"#utility.yul\":13286:13295   */\n      dup2\n        /* \"#utility.yul\":13280:13284   */\n      dup2\n        /* \"#utility.yul\":13276:13296   */\n      sub\n        /* \"#utility.yul\":13272:13273   */\n      0x00\n        /* \"#utility.yul\":13261:13270   */\n      dup4\n        /* \"#utility.yul\":13257:13274   */\n      add\n        /* \"#utility.yul\":13250:13297   */\n      mstore\n        /* \"#utility.yul\":13314:13445   */\n      tag_547\n        /* \"#utility.yul\":13440:13444   */\n      dup2\n        /* \"#utility.yul\":13314:13445   */\n      tag_396\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13306:13445   */\n      swap1\n      pop\n        /* \"#utility.yul\":13033:13452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13458:13681   */\n    tag_397:\n        /* \"#utility.yul\":13598:13632   */\n      0x63616e6e6f7420756e2d77686974656c69737420746865207a65726f20616464\n        /* \"#utility.yul\":13594:13595   */\n      0x00\n        /* \"#utility.yul\":13586:13592   */\n      dup3\n        /* \"#utility.yul\":13582:13596   */\n      add\n        /* \"#utility.yul\":13575:13633   */\n      mstore\n        /* \"#utility.yul\":13667:13673   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13662:13664   */\n      0x20\n        /* \"#utility.yul\":13654:13660   */\n      dup3\n        /* \"#utility.yul\":13650:13665   */\n      add\n        /* \"#utility.yul\":13643:13674   */\n      mstore\n        /* \"#utility.yul\":13458:13681   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13687:14053   */\n    tag_398:\n        /* \"#utility.yul\":13829:13832   */\n      0x00\n        /* \"#utility.yul\":13850:13917   */\n      tag_550\n        /* \"#utility.yul\":13914:13916   */\n      0x24\n        /* \"#utility.yul\":13909:13912   */\n      dup4\n        /* \"#utility.yul\":13850:13917   */\n      tag_367\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13843:13917   */\n      swap2\n      pop\n        /* \"#utility.yul\":13926:14019   */\n      tag_551\n        /* \"#utility.yul\":14015:14018   */\n      dup3\n        /* \"#utility.yul\":13926:14019   */\n      tag_397\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":14044:14046   */\n      0x40\n        /* \"#utility.yul\":14039:14042   */\n      dup3\n        /* \"#utility.yul\":14035:14047   */\n      add\n        /* \"#utility.yul\":14028:14047   */\n      swap1\n      pop\n        /* \"#utility.yul\":13687:14053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14059:14478   */\n    tag_224:\n        /* \"#utility.yul\":14225:14229   */\n      0x00\n        /* \"#utility.yul\":14263:14265   */\n      0x20\n        /* \"#utility.yul\":14252:14261   */\n      dup3\n        /* \"#utility.yul\":14248:14266   */\n      add\n        /* \"#utility.yul\":14240:14266   */\n      swap1\n      pop\n        /* \"#utility.yul\":14312:14321   */\n      dup2\n        /* \"#utility.yul\":14306:14310   */\n      dup2\n        /* \"#utility.yul\":14302:14322   */\n      sub\n        /* \"#utility.yul\":14298:14299   */\n      0x00\n        /* \"#utility.yul\":14287:14296   */\n      dup4\n        /* \"#utility.yul\":14283:14300   */\n      add\n        /* \"#utility.yul\":14276:14323   */\n      mstore\n        /* \"#utility.yul\":14340:14471   */\n      tag_553\n        /* \"#utility.yul\":14466:14470   */\n      dup2\n        /* \"#utility.yul\":14340:14471   */\n      tag_398\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14332:14471   */\n      swap1\n      pop\n        /* \"#utility.yul\":14059:14478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14484:14704   */\n    tag_399:\n        /* \"#utility.yul\":14624:14658   */\n      0x63616e6e6f742077686974656c69737420746865207a65726f20616464726573\n        /* \"#utility.yul\":14620:14621   */\n      0x00\n        /* \"#utility.yul\":14612:14618   */\n      dup3\n        /* \"#utility.yul\":14608:14622   */\n      add\n        /* \"#utility.yul\":14601:14659   */\n      mstore\n        /* \"#utility.yul\":14693:14696   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14688:14690   */\n      0x20\n        /* \"#utility.yul\":14680:14686   */\n      dup3\n        /* \"#utility.yul\":14676:14691   */\n      add\n        /* \"#utility.yul\":14669:14697   */\n      mstore\n        /* \"#utility.yul\":14484:14704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14710:15076   */\n    tag_400:\n        /* \"#utility.yul\":14852:14855   */\n      0x00\n        /* \"#utility.yul\":14873:14940   */\n      tag_556\n        /* \"#utility.yul\":14937:14939   */\n      0x21\n        /* \"#utility.yul\":14932:14935   */\n      dup4\n        /* \"#utility.yul\":14873:14940   */\n      tag_367\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14866:14940   */\n      swap2\n      pop\n        /* \"#utility.yul\":14949:15042   */\n      tag_557\n        /* \"#utility.yul\":15038:15041   */\n      dup3\n        /* \"#utility.yul\":14949:15042   */\n      tag_399\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15067:15069   */\n      0x40\n        /* \"#utility.yul\":15062:15065   */\n      dup3\n        /* \"#utility.yul\":15058:15070   */\n      add\n        /* \"#utility.yul\":15051:15070   */\n      swap1\n      pop\n        /* \"#utility.yul\":14710:15076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15082:15501   */\n    tag_247:\n        /* \"#utility.yul\":15248:15252   */\n      0x00\n        /* \"#utility.yul\":15286:15288   */\n      0x20\n        /* \"#utility.yul\":15275:15284   */\n      dup3\n        /* \"#utility.yul\":15271:15289   */\n      add\n        /* \"#utility.yul\":15263:15289   */\n      swap1\n      pop\n        /* \"#utility.yul\":15335:15344   */\n      dup2\n        /* \"#utility.yul\":15329:15333   */\n      dup2\n        /* \"#utility.yul\":15325:15345   */\n      sub\n        /* \"#utility.yul\":15321:15322   */\n      0x00\n        /* \"#utility.yul\":15310:15319   */\n      dup4\n        /* \"#utility.yul\":15306:15323   */\n      add\n        /* \"#utility.yul\":15299:15346   */\n      mstore\n        /* \"#utility.yul\":15363:15494   */\n      tag_559\n        /* \"#utility.yul\":15489:15493   */\n      dup2\n        /* \"#utility.yul\":15363:15494   */\n      tag_400\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15355:15494   */\n      swap1\n      pop\n        /* \"#utility.yul\":15082:15501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15507:15686   */\n    tag_401:\n        /* \"#utility.yul\":15647:15678   */\n      0x4d696e7465722063616e6e6f74206265207a65726f2061646472657373000000\n        /* \"#utility.yul\":15643:15644   */\n      0x00\n        /* \"#utility.yul\":15635:15641   */\n      dup3\n        /* \"#utility.yul\":15631:15645   */\n      add\n        /* \"#utility.yul\":15624:15679   */\n      mstore\n        /* \"#utility.yul\":15507:15686   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15692:16058   */\n    tag_402:\n        /* \"#utility.yul\":15834:15837   */\n      0x00\n        /* \"#utility.yul\":15855:15922   */\n      tag_562\n        /* \"#utility.yul\":15919:15921   */\n      0x1d\n        /* \"#utility.yul\":15914:15917   */\n      dup4\n        /* \"#utility.yul\":15855:15922   */\n      tag_367\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":15848:15922   */\n      swap2\n      pop\n        /* \"#utility.yul\":15931:16024   */\n      tag_563\n        /* \"#utility.yul\":16020:16023   */\n      dup3\n        /* \"#utility.yul\":15931:16024   */\n      tag_401\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":16049:16051   */\n      0x20\n        /* \"#utility.yul\":16044:16047   */\n      dup3\n        /* \"#utility.yul\":16040:16052   */\n      add\n        /* \"#utility.yul\":16033:16052   */\n      swap1\n      pop\n        /* \"#utility.yul\":15692:16058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16064:16483   */\n    tag_254:\n        /* \"#utility.yul\":16230:16234   */\n      0x00\n        /* \"#utility.yul\":16268:16270   */\n      0x20\n        /* \"#utility.yul\":16257:16266   */\n      dup3\n        /* \"#utility.yul\":16253:16271   */\n      add\n        /* \"#utility.yul\":16245:16271   */\n      swap1\n      pop\n        /* \"#utility.yul\":16317:16326   */\n      dup2\n        /* \"#utility.yul\":16311:16315   */\n      dup2\n        /* \"#utility.yul\":16307:16327   */\n      sub\n        /* \"#utility.yul\":16303:16304   */\n      0x00\n        /* \"#utility.yul\":16292:16301   */\n      dup4\n        /* \"#utility.yul\":16288:16305   */\n      add\n        /* \"#utility.yul\":16281:16328   */\n      mstore\n        /* \"#utility.yul\":16345:16476   */\n      tag_565\n        /* \"#utility.yul\":16471:16475   */\n      dup2\n        /* \"#utility.yul\":16345:16476   */\n      tag_402\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16337:16476   */\n      swap1\n      pop\n        /* \"#utility.yul\":16064:16483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16489:16931   */\n    tag_270:\n        /* \"#utility.yul\":16638:16642   */\n      0x00\n        /* \"#utility.yul\":16676:16678   */\n      0x60\n        /* \"#utility.yul\":16665:16674   */\n      dup3\n        /* \"#utility.yul\":16661:16679   */\n      add\n        /* \"#utility.yul\":16653:16679   */\n      swap1\n      pop\n        /* \"#utility.yul\":16689:16760   */\n      tag_567\n        /* \"#utility.yul\":16757:16758   */\n      0x00\n        /* \"#utility.yul\":16746:16755   */\n      dup4\n        /* \"#utility.yul\":16742:16759   */\n      add\n        /* \"#utility.yul\":16733:16739   */\n      dup7\n        /* \"#utility.yul\":16689:16760   */\n      tag_392\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16770:16842   */\n      tag_568\n        /* \"#utility.yul\":16838:16840   */\n      0x20\n        /* \"#utility.yul\":16827:16836   */\n      dup4\n        /* \"#utility.yul\":16823:16841   */\n      add\n        /* \"#utility.yul\":16814:16820   */\n      dup6\n        /* \"#utility.yul\":16770:16842   */\n      tag_378\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":16852:16924   */\n      tag_569\n        /* \"#utility.yul\":16920:16922   */\n      0x40\n        /* \"#utility.yul\":16909:16918   */\n      dup4\n        /* \"#utility.yul\":16905:16923   */\n      add\n        /* \"#utility.yul\":16896:16902   */\n      dup5\n        /* \"#utility.yul\":16852:16924   */\n      tag_378\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16489:16931   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16937:17159   */\n    tag_275:\n        /* \"#utility.yul\":17030:17034   */\n      0x00\n        /* \"#utility.yul\":17068:17070   */\n      0x20\n        /* \"#utility.yul\":17057:17066   */\n      dup3\n        /* \"#utility.yul\":17053:17071   */\n      add\n        /* \"#utility.yul\":17045:17071   */\n      swap1\n      pop\n        /* \"#utility.yul\":17081:17152   */\n      tag_571\n        /* \"#utility.yul\":17149:17150   */\n      0x00\n        /* \"#utility.yul\":17138:17147   */\n      dup4\n        /* \"#utility.yul\":17134:17151   */\n      add\n        /* \"#utility.yul\":17125:17131   */\n      dup5\n        /* \"#utility.yul\":17081:17152   */\n      tag_392\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16937:17159   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17165:17497   */\n    tag_317:\n        /* \"#utility.yul\":17286:17290   */\n      0x00\n        /* \"#utility.yul\":17324:17326   */\n      0x40\n        /* \"#utility.yul\":17313:17322   */\n      dup3\n        /* \"#utility.yul\":17309:17327   */\n      add\n        /* \"#utility.yul\":17301:17327   */\n      swap1\n      pop\n        /* \"#utility.yul\":17337:17408   */\n      tag_573\n        /* \"#utility.yul\":17405:17406   */\n      0x00\n        /* \"#utility.yul\":17394:17403   */\n      dup4\n        /* \"#utility.yul\":17390:17407   */\n      add\n        /* \"#utility.yul\":17381:17387   */\n      dup6\n        /* \"#utility.yul\":17337:17408   */\n      tag_392\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":17418:17490   */\n      tag_574\n        /* \"#utility.yul\":17486:17488   */\n      0x20\n        /* \"#utility.yul\":17475:17484   */\n      dup4\n        /* \"#utility.yul\":17471:17489   */\n      add\n        /* \"#utility.yul\":17462:17468   */\n      dup5\n        /* \"#utility.yul\":17418:17490   */\n      tag_382\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":17165:17497   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17503:17736   */\n    tag_403:\n        /* \"#utility.yul\":17643:17677   */\n      0x546f6b656e3a207472616e73666572207768696c652070617573656420286e6f\n        /* \"#utility.yul\":17639:17640   */\n      0x00\n        /* \"#utility.yul\":17631:17637   */\n      dup3\n        /* \"#utility.yul\":17627:17641   */\n      add\n        /* \"#utility.yul\":17620:17678   */\n      mstore\n        /* \"#utility.yul\":17712:17728   */\n      0x742077686974656c697374656429000000000000000000000000000000000000\n        /* \"#utility.yul\":17707:17709   */\n      0x20\n        /* \"#utility.yul\":17699:17705   */\n      dup3\n        /* \"#utility.yul\":17695:17710   */\n      add\n        /* \"#utility.yul\":17688:17729   */\n      mstore\n        /* \"#utility.yul\":17503:17736   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17742:18108   */\n    tag_404:\n        /* \"#utility.yul\":17884:17887   */\n      0x00\n        /* \"#utility.yul\":17905:17972   */\n      tag_577\n        /* \"#utility.yul\":17969:17971   */\n      0x2e\n        /* \"#utility.yul\":17964:17967   */\n      dup4\n        /* \"#utility.yul\":17905:17972   */\n      tag_367\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17898:17972   */\n      swap2\n      pop\n        /* \"#utility.yul\":17981:18074   */\n      tag_578\n        /* \"#utility.yul\":18070:18073   */\n      dup3\n        /* \"#utility.yul\":17981:18074   */\n      tag_403\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18099:18101   */\n      0x40\n        /* \"#utility.yul\":18094:18097   */\n      dup3\n        /* \"#utility.yul\":18090:18102   */\n      add\n        /* \"#utility.yul\":18083:18102   */\n      swap1\n      pop\n        /* \"#utility.yul\":17742:18108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18114:18533   */\n    tag_326:\n        /* \"#utility.yul\":18280:18284   */\n      0x00\n        /* \"#utility.yul\":18318:18320   */\n      0x20\n        /* \"#utility.yul\":18307:18316   */\n      dup3\n        /* \"#utility.yul\":18303:18321   */\n      add\n        /* \"#utility.yul\":18295:18321   */\n      swap1\n      pop\n        /* \"#utility.yul\":18367:18376   */\n      dup2\n        /* \"#utility.yul\":18361:18365   */\n      dup2\n        /* \"#utility.yul\":18357:18377   */\n      sub\n        /* \"#utility.yul\":18353:18354   */\n      0x00\n        /* \"#utility.yul\":18342:18351   */\n      dup4\n        /* \"#utility.yul\":18338:18355   */\n      add\n        /* \"#utility.yul\":18331:18378   */\n      mstore\n        /* \"#utility.yul\":18395:18526   */\n      tag_580\n        /* \"#utility.yul\":18521:18525   */\n      dup2\n        /* \"#utility.yul\":18395:18526   */\n      tag_404\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":18387:18526   */\n      swap1\n      pop\n        /* \"#utility.yul\":18114:18533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18539:18709   */\n    tag_405:\n        /* \"#utility.yul\":18679:18701   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":18675:18676   */\n      0x00\n        /* \"#utility.yul\":18667:18673   */\n      dup3\n        /* \"#utility.yul\":18663:18677   */\n      add\n        /* \"#utility.yul\":18656:18702   */\n      mstore\n        /* \"#utility.yul\":18539:18709   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18715:19081   */\n    tag_406:\n        /* \"#utility.yul\":18857:18860   */\n      0x00\n        /* \"#utility.yul\":18878:18945   */\n      tag_583\n        /* \"#utility.yul\":18942:18944   */\n      0x14\n        /* \"#utility.yul\":18937:18940   */\n      dup4\n        /* \"#utility.yul\":18878:18945   */\n      tag_367\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":18871:18945   */\n      swap2\n      pop\n        /* \"#utility.yul\":18954:19047   */\n      tag_584\n        /* \"#utility.yul\":19043:19046   */\n      dup3\n        /* \"#utility.yul\":18954:19047   */\n      tag_405\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":19072:19074   */\n      0x20\n        /* \"#utility.yul\":19067:19070   */\n      dup3\n        /* \"#utility.yul\":19063:19075   */\n      add\n        /* \"#utility.yul\":19056:19075   */\n      swap1\n      pop\n        /* \"#utility.yul\":18715:19081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19087:19506   */\n    tag_333:\n        /* \"#utility.yul\":19253:19257   */\n      0x00\n        /* \"#utility.yul\":19291:19293   */\n      0x20\n        /* \"#utility.yul\":19280:19289   */\n      dup3\n        /* \"#utility.yul\":19276:19294   */\n      add\n        /* \"#utility.yul\":19268:19294   */\n      swap1\n      pop\n        /* \"#utility.yul\":19340:19349   */\n      dup2\n        /* \"#utility.yul\":19334:19338   */\n      dup2\n        /* \"#utility.yul\":19330:19350   */\n      sub\n        /* \"#utility.yul\":19326:19327   */\n      0x00\n        /* \"#utility.yul\":19315:19324   */\n      dup4\n        /* \"#utility.yul\":19311:19328   */\n      add\n        /* \"#utility.yul\":19304:19351   */\n      mstore\n        /* \"#utility.yul\":19368:19499   */\n      tag_586\n        /* \"#utility.yul\":19494:19498   */\n      dup2\n        /* \"#utility.yul\":19368:19499   */\n      tag_406\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":19360:19499   */\n      swap1\n      pop\n        /* \"#utility.yul\":19087:19506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19512:19678   */\n    tag_407:\n        /* \"#utility.yul\":19652:19670   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":19648:19649   */\n      0x00\n        /* \"#utility.yul\":19640:19646   */\n      dup3\n        /* \"#utility.yul\":19636:19650   */\n      add\n        /* \"#utility.yul\":19629:19671   */\n      mstore\n        /* \"#utility.yul\":19512:19678   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19684:20050   */\n    tag_408:\n        /* \"#utility.yul\":19826:19829   */\n      0x00\n        /* \"#utility.yul\":19847:19914   */\n      tag_589\n        /* \"#utility.yul\":19911:19913   */\n      0x10\n        /* \"#utility.yul\":19906:19909   */\n      dup4\n        /* \"#utility.yul\":19847:19914   */\n      tag_367\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":19840:19914   */\n      swap2\n      pop\n        /* \"#utility.yul\":19923:20016   */\n      tag_590\n        /* \"#utility.yul\":20012:20015   */\n      dup3\n        /* \"#utility.yul\":19923:20016   */\n      tag_407\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":20041:20043   */\n      0x20\n        /* \"#utility.yul\":20036:20039   */\n      dup3\n        /* \"#utility.yul\":20032:20044   */\n      add\n        /* \"#utility.yul\":20025:20044   */\n      swap1\n      pop\n        /* \"#utility.yul\":19684:20050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20056:20475   */\n    tag_338:\n        /* \"#utility.yul\":20222:20226   */\n      0x00\n        /* \"#utility.yul\":20260:20262   */\n      0x20\n        /* \"#utility.yul\":20249:20258   */\n      dup3\n        /* \"#utility.yul\":20245:20263   */\n      add\n        /* \"#utility.yul\":20237:20263   */\n      swap1\n      pop\n        /* \"#utility.yul\":20309:20318   */\n      dup2\n        /* \"#utility.yul\":20303:20307   */\n      dup2\n        /* \"#utility.yul\":20299:20319   */\n      sub\n        /* \"#utility.yul\":20295:20296   */\n      0x00\n        /* \"#utility.yul\":20284:20293   */\n      dup4\n        /* \"#utility.yul\":20280:20297   */\n      add\n        /* \"#utility.yul\":20273:20320   */\n      mstore\n        /* \"#utility.yul\":20337:20468   */\n      tag_592\n        /* \"#utility.yul\":20463:20467   */\n      dup2\n        /* \"#utility.yul\":20337:20468   */\n      tag_408\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":20329:20468   */\n      swap1\n      pop\n        /* \"#utility.yul\":20056:20475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20481:20813   */\n    tag_347:\n        /* \"#utility.yul\":20602:20606   */\n      0x00\n        /* \"#utility.yul\":20640:20642   */\n      0x40\n        /* \"#utility.yul\":20629:20638   */\n      dup3\n        /* \"#utility.yul\":20625:20643   */\n      add\n        /* \"#utility.yul\":20617:20643   */\n      swap1\n      pop\n        /* \"#utility.yul\":20653:20724   */\n      tag_594\n        /* \"#utility.yul\":20721:20722   */\n      0x00\n        /* \"#utility.yul\":20710:20719   */\n      dup4\n        /* \"#utility.yul\":20706:20723   */\n      add\n        /* \"#utility.yul\":20697:20703   */\n      dup6\n        /* \"#utility.yul\":20653:20724   */\n      tag_378\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":20734:20806   */\n      tag_595\n        /* \"#utility.yul\":20802:20804   */\n      0x20\n        /* \"#utility.yul\":20791:20800   */\n      dup4\n        /* \"#utility.yul\":20787:20805   */\n      add\n        /* \"#utility.yul\":20778:20784   */\n      dup5\n        /* \"#utility.yul\":20734:20806   */\n      tag_378\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":20481:20813   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20819:20999   */\n    tag_409:\n        /* \"#utility.yul\":20867:20944   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20864:20865   */\n      0x00\n        /* \"#utility.yul\":20857:20945   */\n      mstore\n        /* \"#utility.yul\":20964:20968   */\n      0x11\n        /* \"#utility.yul\":20961:20962   */\n      0x04\n        /* \"#utility.yul\":20954:20969   */\n      mstore\n        /* \"#utility.yul\":20988:20992   */\n      0x24\n        /* \"#utility.yul\":20985:20986   */\n      0x00\n        /* \"#utility.yul\":20978:20993   */\n      revert\n        /* \"#utility.yul\":21005:21196   */\n    tag_351:\n        /* \"#utility.yul\":21045:21048   */\n      0x00\n        /* \"#utility.yul\":21064:21084   */\n      tag_598\n        /* \"#utility.yul\":21082:21083   */\n      dup3\n        /* \"#utility.yul\":21064:21084   */\n      tag_375\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":21059:21084   */\n      swap2\n      pop\n        /* \"#utility.yul\":21098:21118   */\n      tag_599\n        /* \"#utility.yul\":21116:21117   */\n      dup4\n        /* \"#utility.yul\":21098:21118   */\n      tag_375\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":21093:21118   */\n      swap3\n      pop\n        /* \"#utility.yul\":21141:21142   */\n      dup3\n        /* \"#utility.yul\":21138:21139   */\n      dup3\n        /* \"#utility.yul\":21134:21143   */\n      add\n        /* \"#utility.yul\":21127:21143   */\n      swap1\n      pop\n        /* \"#utility.yul\":21162:21165   */\n      dup1\n        /* \"#utility.yul\":21159:21160   */\n      dup3\n        /* \"#utility.yul\":21156:21166   */\n      gt\n        /* \"#utility.yul\":21153:21189   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":21169:21187   */\n      tag_601\n      tag_409\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":21153:21189   */\n    tag_600:\n        /* \"#utility.yul\":21005:21196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d810c97f1b7ffd0da9d2ab8a995865f5abe91f4b69610611da3969683af136064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1258": {
									"entryPoint": null,
									"id": 1258,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1486": {
									"entryPoint": null,
									"id": 1486,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_543": {
									"entryPoint": null,
									"id": 543,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_676": {
									"entryPoint": null,
									"id": 676,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 348,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1354": {
									"entryPoint": 912,
									"id": 1354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_607": {
									"entryPoint": 697,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_580": {
									"entryPoint": 948,
									"id": 580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setRoleAdmin_218": {
									"entryPoint": 600,
									"id": 218,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_129": {
									"entryPoint": 919,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 812,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@paused_568": {
									"entryPoint": 1033,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 2623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 2584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1276,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11980:12",
										"nodeType": "YulBlock",
										"src": "0:11980:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "423:28:12",
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:12",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:12:12",
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nativeSrc": "433:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nativeSrc": "546:28:12",
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:12",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:12",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nativeSrc": "556:12:12",
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nativeSrc": "556:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nativeSrc": "628:54:12",
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nativeSrc": "638:38:12",
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nativeSrc": "652:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:12",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nativeSrc": "668:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nativeSrc": "648:28:12",
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:12",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:12",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nativeSrc": "716:152:12",
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:12",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:12",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nativeSrc": "726:88:12",
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nativeSrc": "726:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:12",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:12",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nativeSrc": "823:15:12",
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nativeSrc": "823:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:12",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:12",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nativeSrc": "847:15:12",
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nativeSrc": "847:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nativeSrc": "917:238:12",
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nativeSrc": "927:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nativeSrc": "957:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nativeSrc": "945:40:12",
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:12",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:12",
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nativeSrc": "1098:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nativeSrc": "1098:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:12",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nativeSrc": "1036:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nativeSrc": "1072:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nativeSrc": "1033:62:12",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nativeSrc": "1030:88:12",
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nativeSrc": "1127:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nativeSrc": "1127:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:12",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:12",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nativeSrc": "1202:88:12",
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nativeSrc": "1212:30:12",
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nativeSrc": "1222:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nativeSrc": "1251:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nativeSrc": "1251:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:12",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:12",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nativeSrc": "1363:241:12",
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:12",
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nativeSrc": "1470:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nativeSrc": "1470:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nativeSrc": "1437:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nativeSrc": "1434:56:12",
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nativeSrc": "1500:37:12",
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nativeSrc": "1508:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nativeSrc": "1574:23:12",
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nativeSrc": "1582:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:12",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:12",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nativeSrc": "1672:184:12",
													"nodeType": "YulBlock",
													"src": "1672:184:12",
													"statements": [
														{
															"nativeSrc": "1682:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:12",
																"nodeType": "YulLiteral",
																"src": "1691:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:12",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:12",
																"nodeType": "YulBlock",
																"src": "1751:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:12"
																					},
																					"nativeSrc": "1772:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:12"
																							},
																							"nativeSrc": "1791:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:12"
																					},
																					"nativeSrc": "1785:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:12"
																			},
																			"nativeSrc": "1765:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:12"
																		},
																		"nativeSrc": "1765:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:12"
																},
																"nativeSrc": "1709:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:12"
															},
															"nativeSrc": "1701:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:12",
																"nodeType": "YulBlock",
																"src": "1723:19:12",
																"statements": [
																	{
																		"nativeSrc": "1725:15:12",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:12",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:12"
																			},
																			"nativeSrc": "1730:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:12",
																"nodeType": "YulBlock",
																"src": "1705:3:12",
																"statements": []
															},
															"src": "1701:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:12"
																		},
																		"nativeSrc": "1830:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:12"
																},
																"nativeSrc": "1823:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:12"
															},
															"nativeSrc": "1823:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:12",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:12",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:12",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:246:12"
											},
											{
												"body": {
													"nativeSrc": "1957:339:12",
													"nodeType": "YulBlock",
													"src": "1957:339:12",
													"statements": [
														{
															"nativeSrc": "1967:75:12",
															"nodeType": "YulAssignment",
															"src": "1967:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:12"
																		},
																		"nativeSrc": "1992:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:12"
																},
																"nativeSrc": "1976:66:12",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:12"
																},
																"nativeSrc": "2051:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:12"
															},
															"nativeSrc": "2051:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:12"
														},
														{
															"nativeSrc": "2081:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nativeSrc": "2092:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:12",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:12",
																"nodeType": "YulBlock",
																"src": "2146:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:12"
																			},
																			"nativeSrc": "2148:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:12"
																		},
																		"nativeSrc": "2148:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:12"
																		},
																		"nativeSrc": "2123:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:12"
																},
																"nativeSrc": "2120:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:12"
															},
															"nativeSrc": "2117:112:12",
															"nodeType": "YulIf",
															"src": "2117:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:12"
																},
																"nativeSrc": "2238:52:12",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:12"
															},
															"nativeSrc": "2238:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:12",
														"nodeType": "YulTypedName",
														"src": "1930:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:12",
														"nodeType": "YulTypedName",
														"src": "1935:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:12",
														"nodeType": "YulTypedName",
														"src": "1943:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:12",
														"nodeType": "YulTypedName",
														"src": "1951:5:12",
														"type": ""
													}
												],
												"src": "1862:434:12"
											},
											{
												"body": {
													"nativeSrc": "2389:282:12",
													"nodeType": "YulBlock",
													"src": "2389:282:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:12",
																"nodeType": "YulBlock",
																"src": "2438:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:12"
																			},
																			"nativeSrc": "2440:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:12"
																		},
																		"nativeSrc": "2440:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:12"
																				},
																				"nativeSrc": "2413:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:12"
																		},
																		"nativeSrc": "2409:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:12"
																},
																"nativeSrc": "2402:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:12"
															},
															"nativeSrc": "2399:122:12",
															"nodeType": "YulIf",
															"src": "2399:122:12"
														},
														{
															"nativeSrc": "2530:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:12"
																},
																"nativeSrc": "2544:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:12",
															"nodeType": "YulAssignment",
															"src": "2566:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:12"
																		},
																		"nativeSrc": "2634:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:12"
																},
																"nativeSrc": "2575:90:12",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:12",
														"nodeType": "YulTypedName",
														"src": "2367:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:12",
														"nodeType": "YulTypedName",
														"src": "2375:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:12",
														"nodeType": "YulTypedName",
														"src": "2383:5:12",
														"type": ""
													}
												],
												"src": "2316:355:12"
											},
											{
												"body": {
													"nativeSrc": "2722:32:12",
													"nodeType": "YulBlock",
													"src": "2722:32:12",
													"statements": [
														{
															"nativeSrc": "2732:16:12",
															"nodeType": "YulAssignment",
															"src": "2732:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2743:5:12",
																"nodeType": "YulIdentifier",
																"src": "2743:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2732:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2677:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2704:5:12",
														"nodeType": "YulTypedName",
														"src": "2704:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2714:7:12",
														"nodeType": "YulTypedName",
														"src": "2714:7:12",
														"type": ""
													}
												],
												"src": "2677:77:12"
											},
											{
												"body": {
													"nativeSrc": "2803:79:12",
													"nodeType": "YulBlock",
													"src": "2803:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2860:16:12",
																"nodeType": "YulBlock",
																"src": "2860:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2869:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2872:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2862:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:12"
																			},
																			"nativeSrc": "2862:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:12"
																		},
																		"nativeSrc": "2862:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2826:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2851:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2833:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:12"
																				},
																				"nativeSrc": "2833:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2823:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:12"
																		},
																		"nativeSrc": "2823:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2816:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:12"
																},
																"nativeSrc": "2816:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2816:43:12"
															},
															"nativeSrc": "2813:63:12",
															"nodeType": "YulIf",
															"src": "2813:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2760:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2796:5:12",
														"nodeType": "YulTypedName",
														"src": "2796:5:12",
														"type": ""
													}
												],
												"src": "2760:122:12"
											},
											{
												"body": {
													"nativeSrc": "2951:80:12",
													"nodeType": "YulBlock",
													"src": "2951:80:12",
													"statements": [
														{
															"nativeSrc": "2961:22:12",
															"nodeType": "YulAssignment",
															"src": "2961:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2976:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2970:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:12"
																},
																"nativeSrc": "2970:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2970:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2961:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3019:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2992:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:12"
																},
																"nativeSrc": "2992:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2992:33:12"
															},
															"nativeSrc": "2992:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2888:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2929:6:12",
														"nodeType": "YulTypedName",
														"src": "2929:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2937:3:12",
														"nodeType": "YulTypedName",
														"src": "2937:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2945:5:12",
														"nodeType": "YulTypedName",
														"src": "2945:5:12",
														"type": ""
													}
												],
												"src": "2888:143:12"
											},
											{
												"body": {
													"nativeSrc": "3082:81:12",
													"nodeType": "YulBlock",
													"src": "3082:81:12",
													"statements": [
														{
															"nativeSrc": "3092:65:12",
															"nodeType": "YulAssignment",
															"src": "3092:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3107:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3107:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3114:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3114:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3103:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3103:3:12"
																},
																"nativeSrc": "3103:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3103:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3092:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3092:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3037:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3064:5:12",
														"nodeType": "YulTypedName",
														"src": "3064:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3074:7:12",
														"nodeType": "YulTypedName",
														"src": "3074:7:12",
														"type": ""
													}
												],
												"src": "3037:126:12"
											},
											{
												"body": {
													"nativeSrc": "3214:51:12",
													"nodeType": "YulBlock",
													"src": "3214:51:12",
													"statements": [
														{
															"nativeSrc": "3224:35:12",
															"nodeType": "YulAssignment",
															"src": "3224:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3253:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3253:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3235:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3235:17:12"
																},
																"nativeSrc": "3235:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3235:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3224:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3224:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3169:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3196:5:12",
														"nodeType": "YulTypedName",
														"src": "3196:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3206:7:12",
														"nodeType": "YulTypedName",
														"src": "3206:7:12",
														"type": ""
													}
												],
												"src": "3169:96:12"
											},
											{
												"body": {
													"nativeSrc": "3314:79:12",
													"nodeType": "YulBlock",
													"src": "3314:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3371:16:12",
																"nodeType": "YulBlock",
																"src": "3371:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3380:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3380:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3383:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3383:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3373:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3373:6:12"
																			},
																			"nativeSrc": "3373:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3373:12:12"
																		},
																		"nativeSrc": "3373:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3373:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3337:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3337:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3362:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3362:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3344:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3344:17:12"
																				},
																				"nativeSrc": "3344:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3344:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3334:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3334:2:12"
																		},
																		"nativeSrc": "3334:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:12"
																},
																"nativeSrc": "3327:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3327:43:12"
															},
															"nativeSrc": "3324:63:12",
															"nodeType": "YulIf",
															"src": "3324:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3271:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3307:5:12",
														"nodeType": "YulTypedName",
														"src": "3307:5:12",
														"type": ""
													}
												],
												"src": "3271:122:12"
											},
											{
												"body": {
													"nativeSrc": "3462:80:12",
													"nodeType": "YulBlock",
													"src": "3462:80:12",
													"statements": [
														{
															"nativeSrc": "3472:22:12",
															"nodeType": "YulAssignment",
															"src": "3472:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3487:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3487:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3481:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3481:5:12"
																},
																"nativeSrc": "3481:13:12",
																"nodeType": "YulFunctionCall",
																"src": "3481:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3472:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3472:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3530:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3530:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3503:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3503:26:12"
																},
																"nativeSrc": "3503:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3503:33:12"
															},
															"nativeSrc": "3503:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3503:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3399:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3440:6:12",
														"nodeType": "YulTypedName",
														"src": "3440:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3448:3:12",
														"nodeType": "YulTypedName",
														"src": "3448:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3456:5:12",
														"nodeType": "YulTypedName",
														"src": "3456:5:12",
														"type": ""
													}
												],
												"src": "3399:143:12"
											},
											{
												"body": {
													"nativeSrc": "3713:1158:12",
													"nodeType": "YulBlock",
													"src": "3713:1158:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3760:83:12",
																"nodeType": "YulBlock",
																"src": "3760:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3762:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3762:77:12"
																			},
																			"nativeSrc": "3762:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3762:79:12"
																		},
																		"nativeSrc": "3762:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3762:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3734:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3734:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3743:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3743:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3730:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3730:3:12"
																		},
																		"nativeSrc": "3730:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3730:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3755:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3755:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3726:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:12"
																},
																"nativeSrc": "3726:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3726:33:12"
															},
															"nativeSrc": "3723:120:12",
															"nodeType": "YulIf",
															"src": "3723:120:12"
														},
														{
															"nativeSrc": "3853:291:12",
															"nodeType": "YulBlock",
															"src": "3853:291:12",
															"statements": [
																{
																	"nativeSrc": "3868:38:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3868:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3892:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3892:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3903:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3903:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3888:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3888:3:12"
																				},
																				"nativeSrc": "3888:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3888:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3882:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3882:5:12"
																		},
																		"nativeSrc": "3882:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3882:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3872:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3872:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3953:83:12",
																		"nodeType": "YulBlock",
																		"src": "3953:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3955:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3955:77:12"
																					},
																					"nativeSrc": "3955:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3955:79:12"
																				},
																				"nativeSrc": "3955:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3955:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3925:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3925:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3933:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3933:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3922:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3922:2:12"
																		},
																		"nativeSrc": "3922:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3922:30:12"
																	},
																	"nativeSrc": "3919:117:12",
																	"nodeType": "YulIf",
																	"src": "3919:117:12"
																},
																{
																	"nativeSrc": "4050:84:12",
																	"nodeType": "YulAssignment",
																	"src": "4050:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4106:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4106:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4117:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4117:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4102:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4102:3:12"
																				},
																				"nativeSrc": "4102:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4102:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4126:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4126:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4060:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "4060:41:12"
																		},
																		"nativeSrc": "4060:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4050:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4050:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4154:292:12",
															"nodeType": "YulBlock",
															"src": "4154:292:12",
															"statements": [
																{
																	"nativeSrc": "4169:39:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4169:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4193:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4193:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4204:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4204:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4189:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4189:3:12"
																				},
																				"nativeSrc": "4189:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4189:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4183:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4183:5:12"
																		},
																		"nativeSrc": "4183:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4173:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4173:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4255:83:12",
																		"nodeType": "YulBlock",
																		"src": "4255:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4257:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "4257:77:12"
																					},
																					"nativeSrc": "4257:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:79:12"
																				},
																				"nativeSrc": "4257:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4257:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4227:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4227:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4235:18:12",
																				"nodeType": "YulLiteral",
																				"src": "4235:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4224:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4224:2:12"
																		},
																		"nativeSrc": "4224:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4224:30:12"
																	},
																	"nativeSrc": "4221:117:12",
																	"nodeType": "YulIf",
																	"src": "4221:117:12"
																},
																{
																	"nativeSrc": "4352:84:12",
																	"nodeType": "YulAssignment",
																	"src": "4352:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4408:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4408:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4419:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4419:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4404:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4404:3:12"
																				},
																				"nativeSrc": "4404:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4404:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4428:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4428:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4362:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "4362:41:12"
																		},
																		"nativeSrc": "4362:74:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4362:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4352:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4352:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4456:129:12",
															"nodeType": "YulBlock",
															"src": "4456:129:12",
															"statements": [
																{
																	"nativeSrc": "4471:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4471:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4485:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4485:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4475:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4475:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4501:74:12",
																	"nodeType": "YulAssignment",
																	"src": "4501:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4547:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4547:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4558:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4558:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4543:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4543:3:12"
																				},
																				"nativeSrc": "4543:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4543:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4567:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4567:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4511:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "4511:31:12"
																		},
																		"nativeSrc": "4511:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4511:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4501:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4501:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4595:129:12",
															"nodeType": "YulBlock",
															"src": "4595:129:12",
															"statements": [
																{
																	"nativeSrc": "4610:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4610:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4624:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4624:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4614:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4614:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4640:74:12",
																	"nodeType": "YulAssignment",
																	"src": "4640:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4686:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4686:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4697:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4697:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4682:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4682:3:12"
																				},
																				"nativeSrc": "4682:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4682:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4706:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4706:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4650:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "4650:31:12"
																		},
																		"nativeSrc": "4650:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4650:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4640:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4640:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4734:130:12",
															"nodeType": "YulBlock",
															"src": "4734:130:12",
															"statements": [
																{
																	"nativeSrc": "4749:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4749:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4763:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4763:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4753:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4753:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4780:74:12",
																	"nodeType": "YulAssignment",
																	"src": "4780:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4826:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4826:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4837:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4837:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4822:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4822:3:12"
																				},
																				"nativeSrc": "4822:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4822:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4846:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4846:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4790:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "4790:31:12"
																		},
																		"nativeSrc": "4790:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4790:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4780:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4780:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory",
												"nativeSrc": "3548:1323:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3651:9:12",
														"nodeType": "YulTypedName",
														"src": "3651:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3662:7:12",
														"nodeType": "YulTypedName",
														"src": "3662:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3674:6:12",
														"nodeType": "YulTypedName",
														"src": "3674:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3682:6:12",
														"nodeType": "YulTypedName",
														"src": "3682:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3690:6:12",
														"nodeType": "YulTypedName",
														"src": "3690:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3698:6:12",
														"nodeType": "YulTypedName",
														"src": "3698:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3706:6:12",
														"nodeType": "YulTypedName",
														"src": "3706:6:12",
														"type": ""
													}
												],
												"src": "3548:1323:12"
											},
											{
												"body": {
													"nativeSrc": "4936:40:12",
													"nodeType": "YulBlock",
													"src": "4936:40:12",
													"statements": [
														{
															"nativeSrc": "4947:22:12",
															"nodeType": "YulAssignment",
															"src": "4947:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4963:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4963:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4957:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4957:5:12"
																},
																"nativeSrc": "4957:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4957:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4947:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4947:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4877:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4919:5:12",
														"nodeType": "YulTypedName",
														"src": "4919:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4929:6:12",
														"nodeType": "YulTypedName",
														"src": "4929:6:12",
														"type": ""
													}
												],
												"src": "4877:99:12"
											},
											{
												"body": {
													"nativeSrc": "5010:152:12",
													"nodeType": "YulBlock",
													"src": "5010:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5027:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5027:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5030:77:12",
																		"nodeType": "YulLiteral",
																		"src": "5030:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5020:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:12"
																},
																"nativeSrc": "5020:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5020:88:12"
															},
															"nativeSrc": "5020:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5020:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5124:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5124:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5127:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5127:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5117:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:12"
																},
																"nativeSrc": "5117:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5117:15:12"
															},
															"nativeSrc": "5117:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5117:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5148:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5148:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5151:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5151:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5141:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5141:6:12"
																},
																"nativeSrc": "5141:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5141:15:12"
															},
															"nativeSrc": "5141:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5141:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4982:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4982:180:12"
											},
											{
												"body": {
													"nativeSrc": "5219:269:12",
													"nodeType": "YulBlock",
													"src": "5219:269:12",
													"statements": [
														{
															"nativeSrc": "5229:22:12",
															"nodeType": "YulAssignment",
															"src": "5229:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5243:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5243:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5249:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5249:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5239:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5239:3:12"
																},
																"nativeSrc": "5239:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5239:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5229:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5229:6:12"
																}
															]
														},
														{
															"nativeSrc": "5260:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5260:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5290:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5290:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5296:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5286:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5286:3:12"
																},
																"nativeSrc": "5286:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5286:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5264:18:12",
																	"nodeType": "YulTypedName",
																	"src": "5264:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5337:51:12",
																"nodeType": "YulBlock",
																"src": "5337:51:12",
																"statements": [
																	{
																		"nativeSrc": "5351:27:12",
																		"nodeType": "YulAssignment",
																		"src": "5351:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5365:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5365:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5373:4:12",
																					"nodeType": "YulLiteral",
																					"src": "5373:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5361:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5361:3:12"
																			},
																			"nativeSrc": "5361:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5361:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5351:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5351:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5317:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "5317:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5310:6:12"
																},
																"nativeSrc": "5310:26:12",
																"nodeType": "YulFunctionCall",
																"src": "5310:26:12"
															},
															"nativeSrc": "5307:81:12",
															"nodeType": "YulIf",
															"src": "5307:81:12"
														},
														{
															"body": {
																"nativeSrc": "5440:42:12",
																"nodeType": "YulBlock",
																"src": "5440:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5454:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5454:16:12"
																			},
																			"nativeSrc": "5454:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5454:18:12"
																		},
																		"nativeSrc": "5454:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5454:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5404:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "5404:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5427:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5427:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5435:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5435:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5424:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5424:2:12"
																		},
																		"nativeSrc": "5424:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5424:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5401:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5401:2:12"
																},
																"nativeSrc": "5401:38:12",
																"nodeType": "YulFunctionCall",
																"src": "5401:38:12"
															},
															"nativeSrc": "5398:84:12",
															"nodeType": "YulIf",
															"src": "5398:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5168:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5203:4:12",
														"nodeType": "YulTypedName",
														"src": "5203:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5212:6:12",
														"nodeType": "YulTypedName",
														"src": "5212:6:12",
														"type": ""
													}
												],
												"src": "5168:320:12"
											},
											{
												"body": {
													"nativeSrc": "5548:87:12",
													"nodeType": "YulBlock",
													"src": "5548:87:12",
													"statements": [
														{
															"nativeSrc": "5558:11:12",
															"nodeType": "YulAssignment",
															"src": "5558:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "5566:3:12",
																"nodeType": "YulIdentifier",
																"src": "5566:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5558:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5558:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5586:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5586:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5589:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5589:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5579:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:12"
																},
																"nativeSrc": "5579:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5579:14:12"
															},
															"nativeSrc": "5579:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "5579:14:12"
														},
														{
															"nativeSrc": "5602:26:12",
															"nodeType": "YulAssignment",
															"src": "5602:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5620:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5620:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5623:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5610:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5610:9:12"
																},
																"nativeSrc": "5610:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5610:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5602:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5602:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5494:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5535:3:12",
														"nodeType": "YulTypedName",
														"src": "5535:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5543:4:12",
														"nodeType": "YulTypedName",
														"src": "5543:4:12",
														"type": ""
													}
												],
												"src": "5494:141:12"
											},
											{
												"body": {
													"nativeSrc": "5685:49:12",
													"nodeType": "YulBlock",
													"src": "5685:49:12",
													"statements": [
														{
															"nativeSrc": "5695:33:12",
															"nodeType": "YulAssignment",
															"src": "5695:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5713:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5713:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5720:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5720:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5709:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5709:3:12"
																		},
																		"nativeSrc": "5709:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5725:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5725:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5705:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5705:3:12"
																},
																"nativeSrc": "5705:23:12",
																"nodeType": "YulFunctionCall",
																"src": "5705:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5695:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5641:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5668:5:12",
														"nodeType": "YulTypedName",
														"src": "5668:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5678:6:12",
														"nodeType": "YulTypedName",
														"src": "5678:6:12",
														"type": ""
													}
												],
												"src": "5641:93:12"
											},
											{
												"body": {
													"nativeSrc": "5793:54:12",
													"nodeType": "YulBlock",
													"src": "5793:54:12",
													"statements": [
														{
															"nativeSrc": "5803:37:12",
															"nodeType": "YulAssignment",
															"src": "5803:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5828:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5828:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5834:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5834:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5824:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5824:3:12"
																},
																"nativeSrc": "5824:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5824:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5803:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "5803:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5740:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5768:4:12",
														"nodeType": "YulTypedName",
														"src": "5768:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5774:5:12",
														"nodeType": "YulTypedName",
														"src": "5774:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5784:8:12",
														"nodeType": "YulTypedName",
														"src": "5784:8:12",
														"type": ""
													}
												],
												"src": "5740:107:12"
											},
											{
												"body": {
													"nativeSrc": "5929:317:12",
													"nodeType": "YulBlock",
													"src": "5929:317:12",
													"statements": [
														{
															"nativeSrc": "5939:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5939:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5960:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5960:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5972:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5972:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5956:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5956:3:12"
																},
																"nativeSrc": "5956:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5956:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5943:9:12",
																	"nodeType": "YulTypedName",
																	"src": "5943:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5983:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5983:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6014:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6014:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6025:66:12",
																		"nodeType": "YulLiteral",
																		"src": "6025:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5995:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5995:18:12"
																},
																"nativeSrc": "5995:97:12",
																"nodeType": "YulFunctionCall",
																"src": "5995:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5987:4:12",
																	"nodeType": "YulTypedName",
																	"src": "5987:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6101:51:12",
															"nodeType": "YulAssignment",
															"src": "6101:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6132:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6132:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6143:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "6143:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6113:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "6113:18:12"
																},
																"nativeSrc": "6113:39:12",
																"nodeType": "YulFunctionCall",
																"src": "6113:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6101:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "6101:8:12"
																}
															]
														},
														{
															"nativeSrc": "6161:30:12",
															"nodeType": "YulAssignment",
															"src": "6161:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6174:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6174:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6185:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6185:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6181:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6181:3:12"
																		},
																		"nativeSrc": "6181:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6181:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6170:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:12"
																},
																"nativeSrc": "6170:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6170:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6161:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6161:5:12"
																}
															]
														},
														{
															"nativeSrc": "6200:40:12",
															"nodeType": "YulAssignment",
															"src": "6200:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6213:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6213:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6224:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "6224:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6234:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6234:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6220:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6220:3:12"
																		},
																		"nativeSrc": "6220:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6220:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6210:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6210:2:12"
																},
																"nativeSrc": "6210:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6210:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6200:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6200:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5853:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5890:5:12",
														"nodeType": "YulTypedName",
														"src": "5890:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5897:10:12",
														"nodeType": "YulTypedName",
														"src": "5897:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5909:8:12",
														"nodeType": "YulTypedName",
														"src": "5909:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5922:6:12",
														"nodeType": "YulTypedName",
														"src": "5922:6:12",
														"type": ""
													}
												],
												"src": "5853:393:12"
											},
											{
												"body": {
													"nativeSrc": "6284:28:12",
													"nodeType": "YulBlock",
													"src": "6284:28:12",
													"statements": [
														{
															"nativeSrc": "6294:12:12",
															"nodeType": "YulAssignment",
															"src": "6294:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "6301:5:12",
																"nodeType": "YulIdentifier",
																"src": "6301:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6294:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6294:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6252:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6270:5:12",
														"nodeType": "YulTypedName",
														"src": "6270:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6280:3:12",
														"nodeType": "YulTypedName",
														"src": "6280:3:12",
														"type": ""
													}
												],
												"src": "6252:60:12"
											},
											{
												"body": {
													"nativeSrc": "6378:82:12",
													"nodeType": "YulBlock",
													"src": "6378:82:12",
													"statements": [
														{
															"nativeSrc": "6388:66:12",
															"nodeType": "YulAssignment",
															"src": "6388:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6446:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6446:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6428:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "6428:17:12"
																				},
																				"nativeSrc": "6428:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6428:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6419:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "6419:8:12"
																		},
																		"nativeSrc": "6419:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6419:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6401:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6401:17:12"
																},
																"nativeSrc": "6401:53:12",
																"nodeType": "YulFunctionCall",
																"src": "6401:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6388:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "6388:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6318:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6358:5:12",
														"nodeType": "YulTypedName",
														"src": "6358:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6368:9:12",
														"nodeType": "YulTypedName",
														"src": "6368:9:12",
														"type": ""
													}
												],
												"src": "6318:142:12"
											},
											{
												"body": {
													"nativeSrc": "6513:28:12",
													"nodeType": "YulBlock",
													"src": "6513:28:12",
													"statements": [
														{
															"nativeSrc": "6523:12:12",
															"nodeType": "YulAssignment",
															"src": "6523:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "6530:5:12",
																"nodeType": "YulIdentifier",
																"src": "6530:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6523:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6523:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6466:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6499:5:12",
														"nodeType": "YulTypedName",
														"src": "6499:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6509:3:12",
														"nodeType": "YulTypedName",
														"src": "6509:3:12",
														"type": ""
													}
												],
												"src": "6466:75:12"
											},
											{
												"body": {
													"nativeSrc": "6623:193:12",
													"nodeType": "YulBlock",
													"src": "6623:193:12",
													"statements": [
														{
															"nativeSrc": "6633:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6633:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6688:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "6688:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6657:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6657:30:12"
																},
																"nativeSrc": "6657:39:12",
																"nodeType": "YulFunctionCall",
																"src": "6657:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6637:16:12",
																	"nodeType": "YulTypedName",
																	"src": "6637:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6712:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6712:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6752:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6752:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6746:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6746:5:12"
																				},
																				"nativeSrc": "6746:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6746:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6759:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6759:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6791:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "6791:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6767:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "6767:23:12"
																				},
																				"nativeSrc": "6767:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6767:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6718:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "6718:27:12"
																		},
																		"nativeSrc": "6718:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6718:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6705:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6705:6:12"
																},
																"nativeSrc": "6705:105:12",
																"nodeType": "YulFunctionCall",
																"src": "6705:105:12"
															},
															"nativeSrc": "6705:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "6705:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6547:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6600:4:12",
														"nodeType": "YulTypedName",
														"src": "6600:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6606:6:12",
														"nodeType": "YulTypedName",
														"src": "6606:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6614:7:12",
														"nodeType": "YulTypedName",
														"src": "6614:7:12",
														"type": ""
													}
												],
												"src": "6547:269:12"
											},
											{
												"body": {
													"nativeSrc": "6871:24:12",
													"nodeType": "YulBlock",
													"src": "6871:24:12",
													"statements": [
														{
															"nativeSrc": "6881:8:12",
															"nodeType": "YulAssignment",
															"src": "6881:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "6888:1:12",
																"nodeType": "YulLiteral",
																"src": "6888:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6881:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6881:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6822:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6867:3:12",
														"nodeType": "YulTypedName",
														"src": "6867:3:12",
														"type": ""
													}
												],
												"src": "6822:73:12"
											},
											{
												"body": {
													"nativeSrc": "6954:136:12",
													"nodeType": "YulBlock",
													"src": "6954:136:12",
													"statements": [
														{
															"nativeSrc": "6964:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6964:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6978:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6978:30:12"
																},
																"nativeSrc": "6978:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6978:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6968:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6968:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7063:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7063:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7069:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7069:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7077:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7077:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "7019:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7019:43:12"
																},
																"nativeSrc": "7019:65:12",
																"nodeType": "YulFunctionCall",
																"src": "7019:65:12"
															},
															"nativeSrc": "7019:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "7019:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6901:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6940:4:12",
														"nodeType": "YulTypedName",
														"src": "6940:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6946:6:12",
														"nodeType": "YulTypedName",
														"src": "6946:6:12",
														"type": ""
													}
												],
												"src": "6901:189:12"
											},
											{
												"body": {
													"nativeSrc": "7146:136:12",
													"nodeType": "YulBlock",
													"src": "7146:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7213:63:12",
																"nodeType": "YulBlock",
																"src": "7213:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7257:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "7257:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7264:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7264:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7227:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "7227:29:12"
																			},
																			"nativeSrc": "7227:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7227:39:12"
																		},
																		"nativeSrc": "7227:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7227:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7166:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7166:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7173:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7173:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7163:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7163:2:12"
																},
																"nativeSrc": "7163:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7163:14:12"
															},
															"nativeSrc": "7156:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7178:26:12",
																"nodeType": "YulBlock",
																"src": "7178:26:12",
																"statements": [
																	{
																		"nativeSrc": "7180:22:12",
																		"nodeType": "YulAssignment",
																		"src": "7180:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7193:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "7193:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7200:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7200:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7189:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7189:3:12"
																			},
																			"nativeSrc": "7189:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7189:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7180:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7180:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7160:2:12",
																"nodeType": "YulBlock",
																"src": "7160:2:12",
																"statements": []
															},
															"src": "7156:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7096:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7134:5:12",
														"nodeType": "YulTypedName",
														"src": "7134:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7141:3:12",
														"nodeType": "YulTypedName",
														"src": "7141:3:12",
														"type": ""
													}
												],
												"src": "7096:186:12"
											},
											{
												"body": {
													"nativeSrc": "7367:464:12",
													"nodeType": "YulBlock",
													"src": "7367:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7393:431:12",
																"nodeType": "YulBlock",
																"src": "7393:431:12",
																"statements": [
																	{
																		"nativeSrc": "7407:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7407:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7455:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "7455:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7423:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "7423:31:12"
																			},
																			"nativeSrc": "7423:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7423:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7411:8:12",
																				"nodeType": "YulTypedName",
																				"src": "7411:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7474:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7474:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7497:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "7497:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7525:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "7525:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7507:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "7507:17:12"
																					},
																					"nativeSrc": "7507:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7507:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7493:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7493:3:12"
																			},
																			"nativeSrc": "7493:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7493:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7478:11:12",
																				"nodeType": "YulTypedName",
																				"src": "7478:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7694:27:12",
																			"nodeType": "YulBlock",
																			"src": "7694:27:12",
																			"statements": [
																				{
																					"nativeSrc": "7696:23:12",
																					"nodeType": "YulAssignment",
																					"src": "7696:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7711:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "7711:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7696:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "7696:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7678:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "7678:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7690:2:12",
																					"nodeType": "YulLiteral",
																					"src": "7690:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7675:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "7675:2:12"
																			},
																			"nativeSrc": "7675:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7675:18:12"
																		},
																		"nativeSrc": "7672:49:12",
																		"nodeType": "YulIf",
																		"src": "7672:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7763:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "7763:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7780:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "7780:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7808:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7808:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7790:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "7790:17:12"
																							},
																							"nativeSrc": "7790:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "7790:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7776:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7776:3:12"
																					},
																					"nativeSrc": "7776:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7776:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7734:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "7734:28:12"
																			},
																			"nativeSrc": "7734:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7734:80:12"
																		},
																		"nativeSrc": "7734:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7734:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7384:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7384:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7389:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7389:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7381:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7381:2:12"
																},
																"nativeSrc": "7381:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7381:11:12"
															},
															"nativeSrc": "7378:446:12",
															"nodeType": "YulIf",
															"src": "7378:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7288:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7343:5:12",
														"nodeType": "YulTypedName",
														"src": "7343:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7350:3:12",
														"nodeType": "YulTypedName",
														"src": "7350:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7355:10:12",
														"nodeType": "YulTypedName",
														"src": "7355:10:12",
														"type": ""
													}
												],
												"src": "7288:543:12"
											},
											{
												"body": {
													"nativeSrc": "7900:54:12",
													"nodeType": "YulBlock",
													"src": "7900:54:12",
													"statements": [
														{
															"nativeSrc": "7910:37:12",
															"nodeType": "YulAssignment",
															"src": "7910:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7935:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7935:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7941:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7931:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7931:3:12"
																},
																"nativeSrc": "7931:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7931:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7910:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "7910:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7837:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7875:4:12",
														"nodeType": "YulTypedName",
														"src": "7875:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7881:5:12",
														"nodeType": "YulTypedName",
														"src": "7881:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7891:8:12",
														"nodeType": "YulTypedName",
														"src": "7891:8:12",
														"type": ""
													}
												],
												"src": "7837:117:12"
											},
											{
												"body": {
													"nativeSrc": "8011:118:12",
													"nodeType": "YulBlock",
													"src": "8011:118:12",
													"statements": [
														{
															"nativeSrc": "8021:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8021:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8070:1:12",
																						"nodeType": "YulLiteral",
																						"src": "8070:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8073:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "8073:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8066:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8066:3:12"
																				},
																				"nativeSrc": "8066:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8066:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8085:1:12",
																						"nodeType": "YulLiteral",
																						"src": "8085:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8081:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8081:3:12"
																				},
																				"nativeSrc": "8081:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8081:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8037:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "8037:28:12"
																		},
																		"nativeSrc": "8037:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8037:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8033:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8033:3:12"
																},
																"nativeSrc": "8033:56:12",
																"nodeType": "YulFunctionCall",
																"src": "8033:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8025:4:12",
																	"nodeType": "YulTypedName",
																	"src": "8025:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8098:25:12",
															"nodeType": "YulAssignment",
															"src": "8098:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8112:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8112:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8118:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8118:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8108:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8108:3:12"
																},
																"nativeSrc": "8108:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8108:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8098:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8098:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7960:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7988:4:12",
														"nodeType": "YulTypedName",
														"src": "7988:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7994:5:12",
														"nodeType": "YulTypedName",
														"src": "7994:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8004:6:12",
														"nodeType": "YulTypedName",
														"src": "8004:6:12",
														"type": ""
													}
												],
												"src": "7960:169:12"
											},
											{
												"body": {
													"nativeSrc": "8215:214:12",
													"nodeType": "YulBlock",
													"src": "8215:214:12",
													"statements": [
														{
															"nativeSrc": "8348:37:12",
															"nodeType": "YulAssignment",
															"src": "8348:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8375:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8375:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8381:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8381:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8356:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "8356:18:12"
																},
																"nativeSrc": "8356:29:12",
																"nodeType": "YulFunctionCall",
																"src": "8356:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8348:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8348:4:12"
																}
															]
														},
														{
															"nativeSrc": "8394:29:12",
															"nodeType": "YulAssignment",
															"src": "8394:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8405:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8405:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8415:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8415:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8418:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8418:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8411:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8411:3:12"
																		},
																		"nativeSrc": "8411:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8411:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8402:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8402:2:12"
																},
																"nativeSrc": "8402:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8402:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8394:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8394:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8134:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8196:4:12",
														"nodeType": "YulTypedName",
														"src": "8196:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8202:3:12",
														"nodeType": "YulTypedName",
														"src": "8202:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8210:4:12",
														"nodeType": "YulTypedName",
														"src": "8210:4:12",
														"type": ""
													}
												],
												"src": "8134:295:12"
											},
											{
												"body": {
													"nativeSrc": "8526:1303:12",
													"nodeType": "YulBlock",
													"src": "8526:1303:12",
													"statements": [
														{
															"nativeSrc": "8537:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8537:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8584:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8584:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8551:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "8551:32:12"
																},
																"nativeSrc": "8551:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8551:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8541:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8541:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8673:22:12",
																"nodeType": "YulBlock",
																"src": "8673:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8675:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8675:16:12"
																			},
																			"nativeSrc": "8675:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8675:18:12"
																		},
																		"nativeSrc": "8675:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8675:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8645:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8645:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8653:18:12",
																		"nodeType": "YulLiteral",
																		"src": "8653:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8642:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8642:2:12"
																},
																"nativeSrc": "8642:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8642:30:12"
															},
															"nativeSrc": "8639:56:12",
															"nodeType": "YulIf",
															"src": "8639:56:12"
														},
														{
															"nativeSrc": "8705:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8705:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8751:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8751:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8745:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "8745:5:12"
																		},
																		"nativeSrc": "8745:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8745:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8719:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "8719:25:12"
																},
																"nativeSrc": "8719:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8719:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8709:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8709:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8850:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8850:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8856:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8856:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8864:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8864:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8804:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "8804:45:12"
																},
																"nativeSrc": "8804:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8804:67:12"
															},
															"nativeSrc": "8804:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "8804:67:12"
														},
														{
															"nativeSrc": "8881:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8881:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "8898:1:12",
																"nodeType": "YulLiteral",
																"src": "8898:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8885:9:12",
																	"nodeType": "YulTypedName",
																	"src": "8885:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8909:17:12",
															"nodeType": "YulAssignment",
															"src": "8909:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "8922:4:12",
																"nodeType": "YulLiteral",
																"src": "8922:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8909:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "8909:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8973:611:12",
																		"nodeType": "YulBlock",
																		"src": "8973:611:12",
																		"statements": [
																			{
																				"nativeSrc": "8987:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8987:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9006:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "9006:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9018:4:12",
																									"nodeType": "YulLiteral",
																									"src": "9018:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9014:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "9014:3:12"
																							},
																							"nativeSrc": "9014:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9014:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9002:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "9002:3:12"
																					},
																					"nativeSrc": "9002:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9002:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8991:7:12",
																						"nodeType": "YulTypedName",
																						"src": "8991:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9038:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9038:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9084:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9084:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9052:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "9052:31:12"
																					},
																					"nativeSrc": "9052:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9052:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9042:6:12",
																						"nodeType": "YulTypedName",
																						"src": "9042:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9102:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9102:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9111:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9111:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9106:1:12",
																						"nodeType": "YulTypedName",
																						"src": "9106:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9170:163:12",
																					"nodeType": "YulBlock",
																					"src": "9170:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9195:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "9195:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9213:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "9213:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9218:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "9218:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9209:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "9209:3:12"
																												},
																												"nativeSrc": "9209:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "9209:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9203:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "9203:5:12"
																										},
																										"nativeSrc": "9203:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9203:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9188:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9188:6:12"
																								},
																								"nativeSrc": "9188:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9188:42:12"
																							},
																							"nativeSrc": "9188:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "9188:42:12"
																						},
																						{
																							"nativeSrc": "9247:24:12",
																							"nodeType": "YulAssignment",
																							"src": "9247:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9261:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "9261:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9269:1:12",
																										"nodeType": "YulLiteral",
																										"src": "9269:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9257:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "9257:3:12"
																								},
																								"nativeSrc": "9257:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9257:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9247:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9247:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9288:31:12",
																							"nodeType": "YulAssignment",
																							"src": "9288:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9305:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "9305:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9316:2:12",
																										"nodeType": "YulLiteral",
																										"src": "9316:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9301:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "9301:3:12"
																								},
																								"nativeSrc": "9301:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9301:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9288:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "9288:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9136:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "9136:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9139:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "9139:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9133:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "9133:2:12"
																					},
																					"nativeSrc": "9133:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9133:14:12"
																				},
																				"nativeSrc": "9125:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9148:21:12",
																					"nodeType": "YulBlock",
																					"src": "9148:21:12",
																					"statements": [
																						{
																							"nativeSrc": "9150:17:12",
																							"nodeType": "YulAssignment",
																							"src": "9150:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9159:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "9159:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9162:4:12",
																										"nodeType": "YulLiteral",
																										"src": "9162:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9155:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "9155:3:12"
																								},
																								"nativeSrc": "9155:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9155:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9150:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "9150:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9129:3:12",
																					"nodeType": "YulBlock",
																					"src": "9129:3:12",
																					"statements": []
																				},
																				"src": "9125:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "9369:156:12",
																					"nodeType": "YulBlock",
																					"src": "9369:156:12",
																					"statements": [
																						{
																							"nativeSrc": "9387:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9387:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9414:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "9414:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9419:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "9419:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9410:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "9410:3:12"
																										},
																										"nativeSrc": "9410:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9410:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9404:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9404:5:12"
																								},
																								"nativeSrc": "9404:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9404:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9391:9:12",
																									"nodeType": "YulTypedName",
																									"src": "9391:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9454:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "9454:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9481:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "9481:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9496:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "9496:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9504:4:12",
																														"nodeType": "YulLiteral",
																														"src": "9504:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9492:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "9492:3:12"
																												},
																												"nativeSrc": "9492:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "9492:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9462:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "9462:18:12"
																										},
																										"nativeSrc": "9462:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9462:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9447:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9447:6:12"
																								},
																								"nativeSrc": "9447:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9447:64:12"
																							},
																							"nativeSrc": "9447:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "9447:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9352:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "9352:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9361:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "9361:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9349:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "9349:2:12"
																					},
																					"nativeSrc": "9349:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9349:19:12"
																				},
																				"nativeSrc": "9346:179:12",
																				"nodeType": "YulIf",
																				"src": "9346:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9545:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9545:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9559:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "9559:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9567:1:12",
																											"nodeType": "YulLiteral",
																											"src": "9567:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9555:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "9555:3:12"
																									},
																									"nativeSrc": "9555:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "9555:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9571:1:12",
																									"nodeType": "YulLiteral",
																									"src": "9571:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9551:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "9551:3:12"
																							},
																							"nativeSrc": "9551:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9551:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9538:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9538:6:12"
																					},
																					"nativeSrc": "9538:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9538:36:12"
																				},
																				"nativeSrc": "9538:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9538:36:12"
																			}
																		]
																	},
																	"nativeSrc": "8966:618:12",
																	"nodeType": "YulCase",
																	"src": "8966:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8971:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8971:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9601:222:12",
																		"nodeType": "YulBlock",
																		"src": "9601:222:12",
																		"statements": [
																			{
																				"nativeSrc": "9615:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9615:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9628:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9628:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9619:5:12",
																						"nodeType": "YulTypedName",
																						"src": "9619:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9652:67:12",
																					"nodeType": "YulBlock",
																					"src": "9652:67:12",
																					"statements": [
																						{
																							"nativeSrc": "9670:35:12",
																							"nodeType": "YulAssignment",
																							"src": "9670:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9689:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "9689:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9694:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "9694:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9685:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "9685:3:12"
																										},
																										"nativeSrc": "9685:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9685:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9679:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9679:5:12"
																								},
																								"nativeSrc": "9679:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9679:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9670:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9670:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9645:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9645:6:12"
																				},
																				"nativeSrc": "9642:77:12",
																				"nodeType": "YulIf",
																				"src": "9642:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9739:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9739:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9798:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9798:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9805:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9805:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9745:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "9745:52:12"
																							},
																							"nativeSrc": "9745:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9745:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9732:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9732:6:12"
																					},
																					"nativeSrc": "9732:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9732:81:12"
																				},
																				"nativeSrc": "9732:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9732:81:12"
																			}
																		]
																	},
																	"nativeSrc": "9593:230:12",
																	"nodeType": "YulCase",
																	"src": "9593:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8946:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8946:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8954:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8954:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8943:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8943:2:12"
																},
																"nativeSrc": "8943:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8943:14:12"
															},
															"nativeSrc": "8936:887:12",
															"nodeType": "YulSwitch",
															"src": "8936:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8434:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8515:4:12",
														"nodeType": "YulTypedName",
														"src": "8515:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8521:3:12",
														"nodeType": "YulTypedName",
														"src": "8521:3:12",
														"type": ""
													}
												],
												"src": "8434:1395:12"
											},
											{
												"body": {
													"nativeSrc": "9888:32:12",
													"nodeType": "YulBlock",
													"src": "9888:32:12",
													"statements": [
														{
															"nativeSrc": "9898:16:12",
															"nodeType": "YulAssignment",
															"src": "9898:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "9909:5:12",
																"nodeType": "YulIdentifier",
																"src": "9909:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9898:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "9898:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "9835:85:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9870:5:12",
														"nodeType": "YulTypedName",
														"src": "9870:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9880:7:12",
														"nodeType": "YulTypedName",
														"src": "9880:7:12",
														"type": ""
													}
												],
												"src": "9835:85:12"
											},
											{
												"body": {
													"nativeSrc": "9994:90:12",
													"nodeType": "YulBlock",
													"src": "9994:90:12",
													"statements": [
														{
															"nativeSrc": "10004:74:12",
															"nodeType": "YulAssignment",
															"src": "10004:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10070:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10070:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "10044:25:12",
																					"nodeType": "YulIdentifier",
																					"src": "10044:25:12"
																				},
																				"nativeSrc": "10044:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10044:32:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10035:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "10035:8:12"
																		},
																		"nativeSrc": "10035:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10035:42:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10017:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10017:17:12"
																},
																"nativeSrc": "10017:61:12",
																"nodeType": "YulFunctionCall",
																"src": "10017:61:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10004:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "10004:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "9926:158:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9974:5:12",
														"nodeType": "YulTypedName",
														"src": "9974:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9984:9:12",
														"nodeType": "YulTypedName",
														"src": "9984:9:12",
														"type": ""
													}
												],
												"src": "9926:158:12"
											},
											{
												"body": {
													"nativeSrc": "10163:74:12",
													"nodeType": "YulBlock",
													"src": "10163:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10180:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10180:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10224:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10224:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "10185:38:12",
																			"nodeType": "YulIdentifier",
																			"src": "10185:38:12"
																		},
																		"nativeSrc": "10185:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10185:45:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10173:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10173:6:12"
																},
																"nativeSrc": "10173:58:12",
																"nodeType": "YulFunctionCall",
																"src": "10173:58:12"
															},
															"nativeSrc": "10173:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "10173:58:12"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "10090:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10151:5:12",
														"nodeType": "YulTypedName",
														"src": "10151:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10158:3:12",
														"nodeType": "YulTypedName",
														"src": "10158:3:12",
														"type": ""
													}
												],
												"src": "10090:147:12"
											},
											{
												"body": {
													"nativeSrc": "10349:132:12",
													"nodeType": "YulBlock",
													"src": "10349:132:12",
													"statements": [
														{
															"nativeSrc": "10359:26:12",
															"nodeType": "YulAssignment",
															"src": "10359:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10371:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10371:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10382:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10382:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10367:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10367:3:12"
																},
																"nativeSrc": "10367:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10367:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10359:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10359:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10447:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10447:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10460:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10460:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10471:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10471:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10456:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10456:3:12"
																		},
																		"nativeSrc": "10456:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10456:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10395:51:12",
																	"nodeType": "YulIdentifier",
																	"src": "10395:51:12"
																},
																"nativeSrc": "10395:79:12",
																"nodeType": "YulFunctionCall",
																"src": "10395:79:12"
															},
															"nativeSrc": "10395:79:12",
															"nodeType": "YulExpressionStatement",
															"src": "10395:79:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10243:238:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10321:9:12",
														"nodeType": "YulTypedName",
														"src": "10321:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10333:6:12",
														"nodeType": "YulTypedName",
														"src": "10333:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10344:4:12",
														"nodeType": "YulTypedName",
														"src": "10344:4:12",
														"type": ""
													}
												],
												"src": "10243:238:12"
											},
											{
												"body": {
													"nativeSrc": "10552:53:12",
													"nodeType": "YulBlock",
													"src": "10552:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10569:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10569:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10592:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10592:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10574:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "10574:17:12"
																		},
																		"nativeSrc": "10574:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10574:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10562:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10562:6:12"
																},
																"nativeSrc": "10562:37:12",
																"nodeType": "YulFunctionCall",
																"src": "10562:37:12"
															},
															"nativeSrc": "10562:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "10562:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10487:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10540:5:12",
														"nodeType": "YulTypedName",
														"src": "10540:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10547:3:12",
														"nodeType": "YulTypedName",
														"src": "10547:3:12",
														"type": ""
													}
												],
												"src": "10487:118:12"
											},
											{
												"body": {
													"nativeSrc": "10709:124:12",
													"nodeType": "YulBlock",
													"src": "10709:124:12",
													"statements": [
														{
															"nativeSrc": "10719:26:12",
															"nodeType": "YulAssignment",
															"src": "10719:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10731:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10731:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10742:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10742:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10727:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10727:3:12"
																},
																"nativeSrc": "10727:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10727:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10719:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10719:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10799:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10799:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10812:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10812:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10823:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10823:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10808:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10808:3:12"
																		},
																		"nativeSrc": "10808:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10755:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10755:43:12"
																},
																"nativeSrc": "10755:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10755:71:12"
															},
															"nativeSrc": "10755:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10755:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10611:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10681:9:12",
														"nodeType": "YulTypedName",
														"src": "10681:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10693:6:12",
														"nodeType": "YulTypedName",
														"src": "10693:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10704:4:12",
														"nodeType": "YulTypedName",
														"src": "10704:4:12",
														"type": ""
													}
												],
												"src": "10611:222:12"
											},
											{
												"body": {
													"nativeSrc": "10935:73:12",
													"nodeType": "YulBlock",
													"src": "10935:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10952:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10952:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10957:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10957:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10945:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10945:6:12"
																},
																"nativeSrc": "10945:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10945:19:12"
															},
															"nativeSrc": "10945:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "10945:19:12"
														},
														{
															"nativeSrc": "10973:29:12",
															"nodeType": "YulAssignment",
															"src": "10973:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10992:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10992:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10997:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10997:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10988:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10988:3:12"
																},
																"nativeSrc": "10988:14:12",
																"nodeType": "YulFunctionCall",
																"src": "10988:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10973:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "10973:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10839:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10907:3:12",
														"nodeType": "YulTypedName",
														"src": "10907:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10912:6:12",
														"nodeType": "YulTypedName",
														"src": "10912:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10923:11:12",
														"nodeType": "YulTypedName",
														"src": "10923:11:12",
														"type": ""
													}
												],
												"src": "10839:169:12"
											},
											{
												"body": {
													"nativeSrc": "11120:60:12",
													"nodeType": "YulBlock",
													"src": "11120:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11142:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11142:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11150:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11150:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11138:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11138:3:12"
																		},
																		"nativeSrc": "11138:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11138:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "11154:18:12",
																		"nodeType": "YulLiteral",
																		"src": "11154:18:12",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11131:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11131:6:12"
																},
																"nativeSrc": "11131:42:12",
																"nodeType": "YulFunctionCall",
																"src": "11131:42:12"
															},
															"nativeSrc": "11131:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "11131:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "11014:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11112:6:12",
														"nodeType": "YulTypedName",
														"src": "11112:6:12",
														"type": ""
													}
												],
												"src": "11014:166:12"
											},
											{
												"body": {
													"nativeSrc": "11332:220:12",
													"nodeType": "YulBlock",
													"src": "11332:220:12",
													"statements": [
														{
															"nativeSrc": "11342:74:12",
															"nodeType": "YulAssignment",
															"src": "11342:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11408:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11408:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11413:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11413:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11349:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11349:58:12"
																},
																"nativeSrc": "11349:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11349:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11342:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11342:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11514:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11514:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "11425:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11425:88:12"
																},
																"nativeSrc": "11425:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11425:93:12"
															},
															"nativeSrc": "11425:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11425:93:12"
														},
														{
															"nativeSrc": "11527:19:12",
															"nodeType": "YulAssignment",
															"src": "11527:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11538:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11538:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11543:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11543:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11534:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11534:3:12"
																},
																"nativeSrc": "11534:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11534:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11527:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11527:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11186:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11320:3:12",
														"nodeType": "YulTypedName",
														"src": "11320:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11328:3:12",
														"nodeType": "YulTypedName",
														"src": "11328:3:12",
														"type": ""
													}
												],
												"src": "11186:366:12"
											},
											{
												"body": {
													"nativeSrc": "11729:248:12",
													"nodeType": "YulBlock",
													"src": "11729:248:12",
													"statements": [
														{
															"nativeSrc": "11739:26:12",
															"nodeType": "YulAssignment",
															"src": "11739:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11751:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11751:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11762:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11762:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11747:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11747:3:12"
																},
																"nativeSrc": "11747:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11747:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11739:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11739:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11786:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11786:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11797:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11797:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11782:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11782:3:12"
																		},
																		"nativeSrc": "11782:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11782:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11805:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11805:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11811:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11811:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11801:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11801:3:12"
																		},
																		"nativeSrc": "11801:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11801:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11775:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11775:6:12"
																},
																"nativeSrc": "11775:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11775:47:12"
															},
															"nativeSrc": "11775:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11775:47:12"
														},
														{
															"nativeSrc": "11831:139:12",
															"nodeType": "YulAssignment",
															"src": "11831:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11965:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11965:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11839:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11839:124:12"
																},
																"nativeSrc": "11839:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11839:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11831:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11831:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11558:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11709:9:12",
														"nodeType": "YulTypedName",
														"src": "11709:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11724:4:12",
														"nodeType": "YulTypedName",
														"src": "11724:4:12",
														"type": ""
													}
												],
												"src": "11558:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b50604051620032773803806200327783398181016040528101906200003691906200063b565b8285855f805f6101000a81548160ff02191690831515021790555081600490816200006291906200092b565b5080600590816200007491906200092b565b5050505f8103620000be575f6040517f392e1e27000000000000000000000000000000000000000000000000000000008152600401620000b5919062000a50565b60405180910390fd5b806080818152505050620000db5f801b836200015c60201b60201c565b506200010e7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a826200015c60201b60201c565b50620001417f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a806200025860201b60201c565b62000151620002b960201b60201c565b505050505062000b15565b5f6200016f83836200032c60201b60201c565b6200024e57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620001ea6200039060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000252565b5f90505b92915050565b5f6200026a836200039760201b60201c565b90508160065f8581526020019081526020015f20600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b620002c9620003b460201b60201c565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620003136200039060201b60201c565b60405162000322919062000a7c565b60405180910390a1565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f60065f8381526020019081526020015f20600101549050919050565b620003c46200040960201b60201c565b1562000407576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003fe9062000af5565b60405180910390fd5b565b5f805f9054906101000a900460ff16905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200047e8262000436565b810181811067ffffffffffffffff82111715620004a0576200049f62000446565b5b80604052505050565b5f620004b46200041d565b9050620004c2828262000473565b919050565b5f67ffffffffffffffff821115620004e457620004e362000446565b5b620004ef8262000436565b9050602081019050919050565b5f5b838110156200051b578082015181840152602081019050620004fe565b5f8484015250505050565b5f6200053c6200053684620004c7565b620004a9565b9050828152602081018484840111156200055b576200055a62000432565b5b62000568848285620004fc565b509392505050565b5f82601f8301126200058757620005866200042e565b5b81516200059984826020860162000526565b91505092915050565b5f819050919050565b620005b681620005a2565b8114620005c1575f80fd5b50565b5f81519050620005d481620005ab565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200060582620005da565b9050919050565b6200061781620005f9565b811462000622575f80fd5b50565b5f8151905062000635816200060c565b92915050565b5f805f805f60a0868803121562000657576200065662000426565b5b5f86015167ffffffffffffffff8111156200067757620006766200042a565b5b620006858882890162000570565b955050602086015167ffffffffffffffff811115620006a957620006a86200042a565b5b620006b78882890162000570565b9450506040620006ca88828901620005c4565b9350506060620006dd8882890162000625565b9250506080620006f08882890162000625565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200074c57607f821691505b60208210810362000762576200076162000707565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007c67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000789565b620007d2868362000789565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620008136200080d6200080784620005a2565b620007ea565b620005a2565b9050919050565b5f819050919050565b6200082e83620007f3565b620008466200083d826200081a565b84845462000795565b825550505050565b5f90565b6200085c6200084e565b6200086981848462000823565b505050565b5b818110156200089057620008845f8262000852565b6001810190506200086f565b5050565b601f821115620008df57620008a98162000768565b620008b4846200077a565b81016020851015620008c4578190505b620008dc620008d3856200077a565b8301826200086e565b50505b505050565b5f82821c905092915050565b5f620009015f1984600802620008e4565b1980831691505092915050565b5f6200091b8383620008f0565b9150826002028217905092915050565b6200093682620006fd565b67ffffffffffffffff81111562000952576200095162000446565b5b6200095e825462000734565b6200096b82828562000894565b5f60209050601f831160018114620009a1575f84156200098c578287015190505b6200099885826200090e565b86555062000a07565b601f198416620009b18662000768565b5f5b82811015620009da57848901518255600182019150602085019450602081019050620009b3565b86831015620009fa5784890151620009f6601f891682620008f0565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b5f62000a3862000a3262000a2c8462000a0f565b620007ea565b620005a2565b9050919050565b62000a4a8162000a18565b82525050565b5f60208201905062000a655f83018462000a3f565b92915050565b62000a7681620005f9565b82525050565b5f60208201905062000a915f83018462000a6b565b92915050565b5f82825260208201905092915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f62000add60108362000a97565b915062000aea8262000aa7565b602082019050919050565b5f6020820190508181035f83015262000b0e8162000acf565b9050919050565b60805161274962000b2e5f395f61097801526127495ff3fe608060405234801561000f575f80fd5b50600436106101c2575f3560e01c80635c975abb116100f7578063a9059cbb11610095578063dd62ed3e1161006f578063dd62ed3e146104f2578063e43252d714610522578063e63ab1e91461053e578063fca3b5aa1461055c576101c2565b8063a9059cbb14610488578063d5391393146104b8578063d547741f146104d6576101c2565b80638ab1d681116100d15780638ab1d6811461040057806391d148541461041c57806395d89b411461044c578063a217fddf1461046a576101c2565b80635c975abb146103a857806370a08231146103c65780638456cb59146103f6576101c2565b80632f2ff15d1161016457806336568abe1161013e57806336568abe146103365780633af32abf146103525780633f4ba83a1461038257806340c10f191461038c576101c2565b80632f2ff15d146102de578063313ce567146102fa578063355274ea14610318576101c2565b80631171bda9116101a05780631171bda91461024457806318160ddd1461026057806323b872dd1461027e578063248a9ca3146102ae576101c2565b806301ffc9a7146101c657806306fdde03146101f6578063095ea7b314610214575b5f80fd5b6101e060048036038101906101db9190611d01565b610578565b6040516101ed9190611d46565b60405180910390f35b6101fe6105f1565b60405161020b9190611de9565b60405180910390f35b61022e60048036038101906102299190611e96565b610681565b60405161023b9190611d46565b60405180910390f35b61025e60048036038101906102599190611ed4565b6106a3565b005b6102686108f7565b6040516102759190611f33565b60405180910390f35b61029860048036038101906102939190611ed4565b610900565b6040516102a59190611d46565b60405180910390f35b6102c860048036038101906102c39190611f7f565b61092e565b6040516102d59190611fb9565b60405180910390f35b6102f860048036038101906102f39190611fd2565b61094b565b005b61030261096d565b60405161030f919061202b565b60405180910390f35b610320610975565b60405161032d9190611f33565b60405180910390f35b610350600480360381019061034b9190611fd2565b61099c565b005b61036c60048036038101906103679190612044565b610a17565b6040516103799190611d46565b60405180910390f35b61038a610a69565b005b6103a660048036038101906103a19190611e96565b610a9e565b005b6103b0610ad7565b6040516103bd9190611d46565b60405180910390f35b6103e060048036038101906103db9190612044565b610aeb565b6040516103ed9190611f33565b60405180910390f35b6103fe610b31565b005b61041a60048036038101906104159190612044565b610b66565b005b61043660048036038101906104319190611fd2565b610ca4565b6040516104439190611d46565b60405180910390f35b610454610d08565b6040516104619190611de9565b60405180910390f35b610472610d98565b60405161047f9190611fb9565b60405180910390f35b6104a2600480360381019061049d9190611e96565b610d9e565b6040516104af9190611d46565b60405180910390f35b6104c0610dc0565b6040516104cd9190611fb9565b60405180910390f35b6104f060048036038101906104eb9190611fd2565b610de4565b005b61050c6004803603810190610507919061206f565b610e06565b6040516105199190611f33565b60405180910390f35b61053c60048036038101906105379190612044565b610e88565b005b610546610fc8565b6040516105539190611fb9565b60405180910390f35b61057660048036038101906105719190612044565b610fec565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105ea57506105e982611095565b5b9050919050565b606060048054610600906120da565b80601f016020809104026020016040519081016040528092919081815260200182805461062c906120da565b80156106775780601f1061064e57610100808354040283529160200191610677565b820191905f5260205f20905b81548152906001019060200180831161065a57829003601f168201915b5050505050905090565b5f8061068b6110fe565b9050610698818585611105565b600191505092915050565b5f801b6106af81611117565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361071d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071490612154565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361078b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610782906121bc565b60405180910390fd5b5f82116107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490612224565b60405180910390fd5b5f8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b8152600401610809929190612251565b6020604051808303815f875af1158015610825573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084991906122a2565b90508061088b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088290612317565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167faca8fb252cde442184e5f10e0f2e6e4029e8cd7717cae63559079610702436aa856040516108e89190611f33565b60405180910390a35050505050565b5f600354905090565b5f8061090a6110fe565b905061091785828561112b565b6109228585856111be565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b6109548261092e565b61095d81611117565b61096783836112ae565b50505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b6109a46110fe565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a08576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a128282611398565b505050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610a9381611117565b610a9b611482565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610ac881611117565b610ad283836114e2565b505050565b5f805f9054906101000a900460ff16905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b5b81611117565b610b63611561565b50565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b9081611117565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf5906123a5565b60405180910390fd5b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d5f604051610c989190611d46565b60405180910390a25050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060058054610d17906120da565b80601f0160208091040260200160405190810160405280929190818152602001828054610d43906120da565b8015610d8e5780601f10610d6557610100808354040283529160200191610d8e565b820191905f5260205f20905b815481529060010190602001808311610d7157829003601f168201915b5050505050905090565b5f801b81565b5f80610da86110fe565b9050610db58185856111be565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610ded8261092e565b610df681611117565b610e008383611398565b50505050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610eb281611117565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1790612433565b60405180910390fd5b600160075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d6001604051610fbc9190611d46565b60405180910390a25050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f801b610ff881611117565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611066576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105d9061249b565b60405180910390fd5b6110907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6836112ae565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b61111283838360016115c2565b505050565b611128816111236110fe565b611791565b50565b5f6111368484610e06565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156111b857818110156111a9578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111a0939291906124b9565b60405180910390fd5b6111b784848484035f6115c2565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361122e575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161122591906124ee565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129e575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161129591906124ee565b60405180910390fd5b6112a98383836117e2565b505050565b5f6112b98383610ca4565b61138e57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061132b6110fe565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611392565b5f90505b92915050565b5f6113a38383610ca4565b15611478575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506114156110fe565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061147c565b5f90505b92915050565b61148a611956565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6114cb6110fe565b6040516114d891906124ee565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611552575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161154991906124ee565b60405180910390fd5b61155d5f83836117e2565b5050565b61156961199f565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115ab6110fe565b6040516115b891906124ee565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611632575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161162991906124ee565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116a2575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161169991906124ee565b60405180910390fd5b8160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561178b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117829190611f33565b60405180910390a35b50505050565b61179b8282610ca4565b6117de5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117d5929190612507565b60405180910390fd5b5050565b6117ea610ad7565b15611946575f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f60075f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680156118f0575060075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b905082806118fb5750815b806119035750805b611942576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119399061259e565b60405180910390fd5b5050505b6119518383836119e9565b505050565b61195e610ad7565b61199d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199490612606565b60405180910390fd5b565b6119a7610ad7565b156119e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119de9061266e565b60405180910390fd5b565b6119f4838383611a8c565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a87575f611a30610975565b90505f611a3b6108f7565b905081811115611a845780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401611a7b92919061268c565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611adc578060035f828254611ad091906126e0565b92505081905550611bac565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611b66578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611b5d939291906124b9565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bf3578060035f8282540392505081905550611c3e565b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c9b9190611f33565b60405180910390a3505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ce081611cac565b8114611cea575f80fd5b50565b5f81359050611cfb81611cd7565b92915050565b5f60208284031215611d1657611d15611ca8565b5b5f611d2384828501611ced565b91505092915050565b5f8115159050919050565b611d4081611d2c565b82525050565b5f602082019050611d595f830184611d37565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d96578082015181840152602081019050611d7b565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611dbb82611d5f565b611dc58185611d69565b9350611dd5818560208601611d79565b611dde81611da1565b840191505092915050565b5f6020820190508181035f830152611e018184611db1565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e3282611e09565b9050919050565b611e4281611e28565b8114611e4c575f80fd5b50565b5f81359050611e5d81611e39565b92915050565b5f819050919050565b611e7581611e63565b8114611e7f575f80fd5b50565b5f81359050611e9081611e6c565b92915050565b5f8060408385031215611eac57611eab611ca8565b5b5f611eb985828601611e4f565b9250506020611eca85828601611e82565b9150509250929050565b5f805f60608486031215611eeb57611eea611ca8565b5b5f611ef886828701611e4f565b9350506020611f0986828701611e4f565b9250506040611f1a86828701611e82565b9150509250925092565b611f2d81611e63565b82525050565b5f602082019050611f465f830184611f24565b92915050565b5f819050919050565b611f5e81611f4c565b8114611f68575f80fd5b50565b5f81359050611f7981611f55565b92915050565b5f60208284031215611f9457611f93611ca8565b5b5f611fa184828501611f6b565b91505092915050565b611fb381611f4c565b82525050565b5f602082019050611fcc5f830184611faa565b92915050565b5f8060408385031215611fe857611fe7611ca8565b5b5f611ff585828601611f6b565b925050602061200685828601611e4f565b9150509250929050565b5f60ff82169050919050565b61202581612010565b82525050565b5f60208201905061203e5f83018461201c565b92915050565b5f6020828403121561205957612058611ca8565b5b5f61206684828501611e4f565b91505092915050565b5f806040838503121561208557612084611ca8565b5b5f61209285828601611e4f565b92505060206120a385828601611e4f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806120f157607f821691505b602082108103612104576121036120ad565b5b50919050565b7f63616e6e6f742073656e6420746f207a65726f206164647265737300000000005f82015250565b5f61213e601b83611d69565b91506121498261210a565b602082019050919050565b5f6020820190508181035f83015261216b81612132565b9050919050565b7f746f6b656e20616464726573732063616e6e6f74206265207a65726f000000005f82015250565b5f6121a6601c83611d69565b91506121b182612172565b602082019050919050565b5f6020820190508181035f8301526121d38161219a565b9050919050565b7f616d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61220e602083611d69565b9150612219826121da565b602082019050919050565b5f6020820190508181035f83015261223b81612202565b9050919050565b61224b81611e28565b82525050565b5f6040820190506122645f830185612242565b6122716020830184611f24565b9392505050565b61228181611d2c565b811461228b575f80fd5b50565b5f8151905061229c81612278565b92915050565b5f602082840312156122b7576122b6611ca8565b5b5f6122c48482850161228e565b91505092915050565b7f4552433230207472616e73666572206661696c656400000000000000000000005f82015250565b5f612301601583611d69565b915061230c826122cd565b602082019050919050565b5f6020820190508181035f83015261232e816122f5565b9050919050565b7f63616e6e6f7420756e2d77686974656c69737420746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61238f602483611d69565b915061239a82612335565b604082019050919050565b5f6020820190508181035f8301526123bc81612383565b9050919050565b7f63616e6e6f742077686974656c69737420746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61241d602183611d69565b9150612428826123c3565b604082019050919050565b5f6020820190508181035f83015261244a81612411565b9050919050565b7f4d696e7465722063616e6e6f74206265207a65726f20616464726573730000005f82015250565b5f612485601d83611d69565b915061249082612451565b602082019050919050565b5f6020820190508181035f8301526124b281612479565b9050919050565b5f6060820190506124cc5f830186612242565b6124d96020830185611f24565b6124e66040830184611f24565b949350505050565b5f6020820190506125015f830184612242565b92915050565b5f60408201905061251a5f830185612242565b6125276020830184611faa565b9392505050565b7f546f6b656e3a207472616e73666572207768696c652070617573656420286e6f5f8201527f742077686974656c697374656429000000000000000000000000000000000000602082015250565b5f612588602e83611d69565b91506125938261252e565b604082019050919050565b5f6020820190508181035f8301526125b58161257c565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6125f0601483611d69565b91506125fb826125bc565b602082019050919050565b5f6020820190508181035f83015261261d816125e4565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612658601083611d69565b915061266382612624565b602082019050919050565b5f6020820190508181035f8301526126858161264c565b9050919050565b5f60408201905061269f5f830185611f24565b6126ac6020830184611f24565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126ea82611e63565b91506126f583611e63565b925082820190508082111561270d5761270c6126b3565b5b9291505056fea26469706673582212200d810c97f1b7ffd0da9d2ab8a995865f5abe91f4b69610611da3969683af136064736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3277 CODESIZE SUB DUP1 PUSH3 0x3277 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x63B JUMP JUMPDEST DUP3 DUP6 DUP6 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x62 SWAP2 SWAP1 PUSH3 0x92B JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP2 PUSH3 0x74 SWAP2 SWAP1 PUSH3 0x92B JUMP JUMPDEST POP POP POP PUSH0 DUP2 SUB PUSH3 0xBE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x392E1E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0xA50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP PUSH3 0xDB PUSH0 DUP1 SHL DUP4 PUSH3 0x15C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x10E PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP3 PUSH3 0x15C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x141 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP1 PUSH3 0x258 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x151 PUSH3 0x2B9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH3 0xB15 JUMP JUMPDEST PUSH0 PUSH3 0x16F DUP4 DUP4 PUSH3 0x32C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x24E JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x1EA PUSH3 0x390 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x252 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x26A DUP4 PUSH3 0x397 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP5 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH3 0x2C9 PUSH3 0x3B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH3 0x313 PUSH3 0x390 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x322 SWAP2 SWAP1 PUSH3 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C4 PUSH3 0x409 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x407 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3FE SWAP1 PUSH3 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x47E DUP3 PUSH3 0x436 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x4A0 JUMPI PUSH3 0x49F PUSH3 0x446 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4B4 PUSH3 0x41D JUMP JUMPDEST SWAP1 POP PUSH3 0x4C2 DUP3 DUP3 PUSH3 0x473 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x4E4 JUMPI PUSH3 0x4E3 PUSH3 0x446 JUMP JUMPDEST JUMPDEST PUSH3 0x4EF DUP3 PUSH3 0x436 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x51B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4FE JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x53C PUSH3 0x536 DUP5 PUSH3 0x4C7 JUMP JUMPDEST PUSH3 0x4A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x55B JUMPI PUSH3 0x55A PUSH3 0x432 JUMP JUMPDEST JUMPDEST PUSH3 0x568 DUP5 DUP3 DUP6 PUSH3 0x4FC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x587 JUMPI PUSH3 0x586 PUSH3 0x42E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x599 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x526 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5B6 DUP2 PUSH3 0x5A2 JUMP JUMPDEST DUP2 EQ PUSH3 0x5C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x5D4 DUP2 PUSH3 0x5AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x605 DUP3 PUSH3 0x5DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x617 DUP2 PUSH3 0x5F9 JUMP JUMPDEST DUP2 EQ PUSH3 0x622 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x635 DUP2 PUSH3 0x60C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x657 JUMPI PUSH3 0x656 PUSH3 0x426 JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x677 JUMPI PUSH3 0x676 PUSH3 0x42A JUMP JUMPDEST JUMPDEST PUSH3 0x685 DUP9 DUP3 DUP10 ADD PUSH3 0x570 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A9 JUMPI PUSH3 0x6A8 PUSH3 0x42A JUMP JUMPDEST JUMPDEST PUSH3 0x6B7 DUP9 DUP3 DUP10 ADD PUSH3 0x570 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x6CA DUP9 DUP3 DUP10 ADD PUSH3 0x5C4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x6DD DUP9 DUP3 DUP10 ADD PUSH3 0x625 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x6F0 DUP9 DUP3 DUP10 ADD PUSH3 0x625 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x74C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x762 JUMPI PUSH3 0x761 PUSH3 0x707 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x7C6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x789 JUMP JUMPDEST PUSH3 0x7D2 DUP7 DUP4 PUSH3 0x789 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x813 PUSH3 0x80D PUSH3 0x807 DUP5 PUSH3 0x5A2 JUMP JUMPDEST PUSH3 0x7EA JUMP JUMPDEST PUSH3 0x5A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x82E DUP4 PUSH3 0x7F3 JUMP JUMPDEST PUSH3 0x846 PUSH3 0x83D DUP3 PUSH3 0x81A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x795 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x85C PUSH3 0x84E JUMP JUMPDEST PUSH3 0x869 DUP2 DUP5 DUP5 PUSH3 0x823 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x890 JUMPI PUSH3 0x884 PUSH0 DUP3 PUSH3 0x852 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x86F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x8DF JUMPI PUSH3 0x8A9 DUP2 PUSH3 0x768 JUMP JUMPDEST PUSH3 0x8B4 DUP5 PUSH3 0x77A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x8C4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x8DC PUSH3 0x8D3 DUP6 PUSH3 0x77A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x86E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x901 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x8E4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x91B DUP4 DUP4 PUSH3 0x8F0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x936 DUP3 PUSH3 0x6FD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x952 JUMPI PUSH3 0x951 PUSH3 0x446 JUMP JUMPDEST JUMPDEST PUSH3 0x95E DUP3 SLOAD PUSH3 0x734 JUMP JUMPDEST PUSH3 0x96B DUP3 DUP3 DUP6 PUSH3 0x894 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x9A1 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x98C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x998 DUP6 DUP3 PUSH3 0x90E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xA07 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9B1 DUP7 PUSH3 0x768 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x9DA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9B3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x9FA JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x9F6 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x8F0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xA38 PUSH3 0xA32 PUSH3 0xA2C DUP5 PUSH3 0xA0F JUMP JUMPDEST PUSH3 0x7EA JUMP JUMPDEST PUSH3 0x5A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA4A DUP2 PUSH3 0xA18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA65 PUSH0 DUP4 ADD DUP5 PUSH3 0xA3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA76 DUP2 PUSH3 0x5F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA91 PUSH0 DUP4 ADD DUP5 PUSH3 0xA6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0xADD PUSH1 0x10 DUP4 PUSH3 0xA97 JUMP JUMPDEST SWAP2 POP PUSH3 0xAEA DUP3 PUSH3 0xAA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xB0E DUP2 PUSH3 0xACF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2749 PUSH3 0xB2E PUSH0 CODECOPY PUSH0 PUSH2 0x978 ADD MSTORE PUSH2 0x2749 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x55C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4D6 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x8AB1D681 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x46A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F6 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x38C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x318 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1171BDA9 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x1171BDA9 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2AE JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x214 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0xA69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH2 0xB31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0xD98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C0 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xE88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x546 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x576 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xFEC JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5EA JUMPI POP PUSH2 0x5E9 DUP3 PUSH2 0x1095 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x600 SWAP1 PUSH2 0x20DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x62C SWAP1 PUSH2 0x20DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x677 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x64E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x677 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x68B PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP PUSH2 0x698 DUP2 DUP6 DUP6 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x6AF DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x714 SWAP1 PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP3 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x22A2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xACA8FB252CDE442184E5F10E0F2E6E4029E8CD7717CAE63559079610702436AA DUP6 PUSH1 0x40 MLOAD PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x90A PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP PUSH2 0x917 DUP6 DUP3 DUP6 PUSH2 0x112B JUMP JUMPDEST PUSH2 0x922 DUP6 DUP6 DUP6 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x954 DUP3 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x95D DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x967 DUP4 DUP4 PUSH2 0x12AE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A4 PUSH2 0x10FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA12 DUP3 DUP3 PUSH2 0x1398 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xA93 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x1482 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xAC8 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xAD2 DUP4 DUP4 PUSH2 0x14E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB5B DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xB63 PUSH2 0x1561 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB90 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D PUSH0 PUSH1 0x40 MLOAD PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0xD17 SWAP1 PUSH2 0x20DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD43 SWAP1 PUSH2 0x20DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD8E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD8E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD71 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDA8 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP PUSH2 0xDB5 DUP2 DUP6 DUP6 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xDED DUP3 PUSH2 0x92E JUMP JUMPDEST PUSH2 0xDF6 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xE00 DUP4 DUP4 PUSH2 0x1398 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xEB2 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF17 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xFF8 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1066 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105D SWAP1 PUSH2 0x249B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1090 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x12AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1112 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1128 DUP2 PUSH2 0x1123 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x1791 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1136 DUP5 DUP5 PUSH2 0xE06 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x11B8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11A9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1225 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A9 DUP4 DUP4 DUP4 PUSH2 0x17E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B9 DUP4 DUP4 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0x138E JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x132B PUSH2 0x10FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1392 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13A3 DUP4 DUP4 PUSH2 0xCA4 JUMP JUMPDEST ISZERO PUSH2 0x1478 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1415 PUSH2 0x10FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x147C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x148A PUSH2 0x1956 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x14CB PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1552 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1549 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155D PUSH0 DUP4 DUP4 PUSH2 0x17E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1569 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x15AB PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B8 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1632 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1699 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x178B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x179B DUP3 DUP3 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0x17DE JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D5 SWAP3 SWAP2 SWAP1 PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x17EA PUSH2 0xAD7 JUMP JUMPDEST ISZERO PUSH2 0x1946 JUMPI PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x18F0 JUMPI POP PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP DUP3 DUP1 PUSH2 0x18FB JUMPI POP DUP2 JUMPDEST DUP1 PUSH2 0x1903 JUMPI POP DUP1 JUMPDEST PUSH2 0x1942 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1939 SWAP1 PUSH2 0x259E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMPDEST PUSH2 0x1951 DUP4 DUP4 DUP4 PUSH2 0x19E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x195E PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x199D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1994 SWAP1 PUSH2 0x2606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19A7 PUSH2 0xAD7 JUMP JUMPDEST ISZERO PUSH2 0x19E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19DE SWAP1 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19F4 DUP4 DUP4 DUP4 PUSH2 0x1A8C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A87 JUMPI PUSH0 PUSH2 0x1A30 PUSH2 0x975 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A3B PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A84 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7B SWAP3 SWAP2 SWAP1 PUSH2 0x268C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ADC JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1AD0 SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1B66 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BF3 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C3E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C9B SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE0 DUP2 PUSH2 0x1CAC JUMP JUMPDEST DUP2 EQ PUSH2 0x1CEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFB DUP2 PUSH2 0x1CD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D23 DUP5 DUP3 DUP6 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D40 DUP2 PUSH2 0x1D2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D59 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D96 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D7B JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBB DUP3 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x1DC5 DUP2 DUP6 PUSH2 0x1D69 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DD5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D79 JUMP JUMPDEST PUSH2 0x1DDE DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E01 DUP2 DUP5 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E32 DUP3 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E42 DUP2 PUSH2 0x1E28 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E75 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E90 DUP2 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAC JUMPI PUSH2 0x1EAB PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECA DUP6 DUP3 DUP7 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EEB JUMPI PUSH2 0x1EEA PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF8 DUP7 DUP3 DUP8 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F09 DUP7 DUP3 DUP8 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F1A DUP7 DUP3 DUP8 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1F2D DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F46 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F5E DUP2 PUSH2 0x1F4C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F68 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F79 DUP2 PUSH2 0x1F55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F94 JUMPI PUSH2 0x1F93 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FA1 DUP5 DUP3 DUP6 ADD PUSH2 0x1F6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FB3 DUP2 PUSH2 0x1F4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FCC PUSH0 DUP4 ADD DUP5 PUSH2 0x1FAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE8 JUMPI PUSH2 0x1FE7 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF5 DUP6 DUP3 DUP7 ADD PUSH2 0x1F6B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2006 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2025 DUP2 PUSH2 0x2010 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x203E PUSH0 DUP4 ADD DUP5 PUSH2 0x201C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2059 JUMPI PUSH2 0x2058 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2066 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH2 0x2084 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2092 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20F1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2104 JUMPI PUSH2 0x2103 PUSH2 0x20AD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F742073656E6420746F207A65726F20616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x213E PUSH1 0x1B DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2149 DUP3 PUSH2 0x210A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x216B DUP2 PUSH2 0x2132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F6B656E20616464726573732063616E6E6F74206265207A65726F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21A6 PUSH1 0x1C DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B1 DUP3 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D3 DUP2 PUSH2 0x219A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x220E PUSH1 0x20 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2219 DUP3 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x223B DUP2 PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x224B DUP2 PUSH2 0x1E28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2264 PUSH0 DUP4 ADD DUP6 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x2271 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2281 DUP2 PUSH2 0x1D2C JUMP JUMPDEST DUP2 EQ PUSH2 0x228B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x229C DUP2 PUSH2 0x2278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B7 JUMPI PUSH2 0x22B6 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C4 DUP5 DUP3 DUP6 ADD PUSH2 0x228E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2301 PUSH1 0x15 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x230C DUP3 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232E DUP2 PUSH2 0x22F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F7420756E2D77686974656C69737420746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238F PUSH1 0x24 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x239A DUP3 PUSH2 0x2335 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23BC DUP2 PUSH2 0x2383 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F742077686974656C69737420746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x241D PUSH1 0x21 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2428 DUP3 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x244A DUP2 PUSH2 0x2411 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E7465722063616E6E6F74206265207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2485 PUSH1 0x1D DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2490 DUP3 PUSH2 0x2451 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24B2 DUP2 PUSH2 0x2479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24CC PUSH0 DUP4 ADD DUP7 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x24D9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x24E6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F24 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2501 PUSH0 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x251A PUSH0 DUP4 ADD DUP6 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x2527 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FAA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E3A207472616E73666572207768696C652070617573656420286E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x742077686974656C697374656429000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2588 PUSH1 0x2E DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2593 DUP3 PUSH2 0x252E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25B5 DUP2 PUSH2 0x257C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F0 PUSH1 0x14 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x25FB DUP3 PUSH2 0x25BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x261D DUP2 PUSH2 0x25E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2658 PUSH1 0x10 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2663 DUP3 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2685 DUP2 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x269F PUSH0 DUP4 ADD DUP6 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x26AC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26EA DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP PUSH2 0x26F5 DUP4 PUSH2 0x1E63 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x270D JUMPI PUSH2 0x270C PUSH2 0x26B3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD DUP2 0xC SWAP8 CALL 0xB7 SELFDESTRUCT 0xD0 0xDA SWAP14 0x2A 0xB8 0xA9 SWAP6 DUP7 PUSH0 GAS 0xBE SWAP2 DELEGATECALL 0xB6 SWAP7 LT PUSH2 0x1DA3 SWAP7 SWAP7 DUP4 0xAF SGT PUSH1 0x64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "526:4600:11:-:0;;;1250:343;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1426:3;1400:4;1406:6;1006:5:3;996:7;;:15;;;;;;;;;;;;;;;;;;1656:5:4;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;764:1:6;756:4;:9;752:65;;804:1;788:18;;;;;;;;;;;:::i;:::-;;;;;;;;752:65;833:4;826:11;;;;;;716:128;1441:37:11::2;2241:4:0;1452:18:11::0;::::2;1472:5;1441:10;;;:37;;:::i;:::-;;1488:31;696:24;1512:6;1488:10;;;:31;;:::i;:::-;;1529:39;696:24;::::0;1529:13:::2;;;:39;;:::i;:::-;1578:8;:6;;;:8;;:::i;:::-;1250:343:::0;;;;;526:4600;;6155:316:0;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;5674:247::-;5757:25;5785:18;5798:4;5785:12;;;:18;;:::i;:::-;5757:46;;5838:9;5813:6;:12;5820:4;5813:12;;;;;;;;;;;:22;;:34;;;;5904:9;5885:17;5879:4;5862:52;;;;;;;;;;5747:174;5674:247;;:::o;2186:115:3:-;1239:19;:17;;;:19;;:::i;:::-;2255:4:::1;2245:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;;;:12;;:::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;1767:106:3:-;1837:8;:6;;;:8;;:::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;1615:84::-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:126::-;3074:7;3114:42;3107:5;3103:54;3092:65;;3037:126;;;:::o;3169:96::-;3206:7;3235:24;3253:5;3235:24;:::i;:::-;3224:35;;3169:96;;;:::o;3271:122::-;3344:24;3362:5;3344:24;:::i;:::-;3337:5;3334:35;3324:63;;3383:1;3380;3373:12;3324:63;3271:122;:::o;3399:143::-;3456:5;3487:6;3481:13;3472:22;;3503:33;3530:5;3503:33;:::i;:::-;3399:143;;;;:::o;3548:1323::-;3674:6;3682;3690;3698;3706;3755:3;3743:9;3734:7;3730:23;3726:33;3723:120;;;3762:79;;:::i;:::-;3723:120;3903:1;3892:9;3888:17;3882:24;3933:18;3925:6;3922:30;3919:117;;;3955:79;;:::i;:::-;3919:117;4060:74;4126:7;4117:6;4106:9;4102:22;4060:74;:::i;:::-;4050:84;;3853:291;4204:2;4193:9;4189:18;4183:25;4235:18;4227:6;4224:30;4221:117;;;4257:79;;:::i;:::-;4221:117;4362:74;4428:7;4419:6;4408:9;4404:22;4362:74;:::i;:::-;4352:84;;4154:292;4485:2;4511:64;4567:7;4558:6;4547:9;4543:22;4511:64;:::i;:::-;4501:74;;4456:129;4624:2;4650:64;4706:7;4697:6;4686:9;4682:22;4650:64;:::i;:::-;4640:74;;4595:129;4763:3;4790:64;4846:7;4837:6;4826:9;4822:22;4790:64;:::i;:::-;4780:74;;4734:130;3548:1323;;;;;;;;:::o;4877:99::-;4929:6;4963:5;4957:12;4947:22;;4877:99;;;:::o;4982:180::-;5030:77;5027:1;5020:88;5127:4;5124:1;5117:15;5151:4;5148:1;5141:15;5168:320;5212:6;5249:1;5243:4;5239:12;5229:22;;5296:1;5290:4;5286:12;5317:18;5307:81;;5373:4;5365:6;5361:17;5351:27;;5307:81;5435:2;5427:6;5424:14;5404:18;5401:38;5398:84;;5454:18;;:::i;:::-;5398:84;5219:269;5168:320;;;:::o;5494:141::-;5543:4;5566:3;5558:11;;5589:3;5586:1;5579:14;5623:4;5620:1;5610:18;5602:26;;5494:141;;;:::o;5641:93::-;5678:6;5725:2;5720;5713:5;5709:14;5705:23;5695:33;;5641:93;;;:::o;5740:107::-;5784:8;5834:5;5828:4;5824:16;5803:37;;5740:107;;;;:::o;5853:393::-;5922:6;5972:1;5960:10;5956:18;5995:97;6025:66;6014:9;5995:97;:::i;:::-;6113:39;6143:8;6132:9;6113:39;:::i;:::-;6101:51;;6185:4;6181:9;6174:5;6170:21;6161:30;;6234:4;6224:8;6220:19;6213:5;6210:30;6200:40;;5929:317;;5853:393;;;;;:::o;6252:60::-;6280:3;6301:5;6294:12;;6252:60;;;:::o;6318:142::-;6368:9;6401:53;6419:34;6428:24;6446:5;6428:24;:::i;:::-;6419:34;:::i;:::-;6401:53;:::i;:::-;6388:66;;6318:142;;;:::o;6466:75::-;6509:3;6530:5;6523:12;;6466:75;;;:::o;6547:269::-;6657:39;6688:7;6657:39;:::i;:::-;6718:91;6767:41;6791:16;6767:41;:::i;:::-;6759:6;6752:4;6746:11;6718:91;:::i;:::-;6712:4;6705:105;6623:193;6547:269;;;:::o;6822:73::-;6867:3;6822:73;:::o;6901:189::-;6978:32;;:::i;:::-;7019:65;7077:6;7069;7063:4;7019:65;:::i;:::-;6954:136;6901:189;;:::o;7096:186::-;7156:120;7173:3;7166:5;7163:14;7156:120;;;7227:39;7264:1;7257:5;7227:39;:::i;:::-;7200:1;7193:5;7189:13;7180:22;;7156:120;;;7096:186;;:::o;7288:543::-;7389:2;7384:3;7381:11;7378:446;;;7423:38;7455:5;7423:38;:::i;:::-;7507:29;7525:10;7507:29;:::i;:::-;7497:8;7493:44;7690:2;7678:10;7675:18;7672:49;;;7711:8;7696:23;;7672:49;7734:80;7790:22;7808:3;7790:22;:::i;:::-;7780:8;7776:37;7763:11;7734:80;:::i;:::-;7393:431;;7378:446;7288:543;;;:::o;7837:117::-;7891:8;7941:5;7935:4;7931:16;7910:37;;7837:117;;;;:::o;7960:169::-;8004:6;8037:51;8085:1;8081:6;8073:5;8070:1;8066:13;8037:51;:::i;:::-;8033:56;8118:4;8112;8108:15;8098:25;;8011:118;7960:169;;;;:::o;8134:295::-;8210:4;8356:29;8381:3;8375:4;8356:29;:::i;:::-;8348:37;;8418:3;8415:1;8411:11;8405:4;8402:21;8394:29;;8134:295;;;;:::o;8434:1395::-;8551:37;8584:3;8551:37;:::i;:::-;8653:18;8645:6;8642:30;8639:56;;;8675:18;;:::i;:::-;8639:56;8719:38;8751:4;8745:11;8719:38;:::i;:::-;8804:67;8864:6;8856;8850:4;8804:67;:::i;:::-;8898:1;8922:4;8909:17;;8954:2;8946:6;8943:14;8971:1;8966:618;;;;9628:1;9645:6;9642:77;;;9694:9;9689:3;9685:19;9679:26;9670:35;;9642:77;9745:67;9805:6;9798:5;9745:67;:::i;:::-;9739:4;9732:81;9601:222;8936:887;;8966:618;9018:4;9014:9;9006:6;9002:22;9052:37;9084:4;9052:37;:::i;:::-;9111:1;9125:208;9139:7;9136:1;9133:14;9125:208;;;9218:9;9213:3;9209:19;9203:26;9195:6;9188:42;9269:1;9261:6;9257:14;9247:24;;9316:2;9305:9;9301:18;9288:31;;9162:4;9159:1;9155:12;9150:17;;9125:208;;;9361:6;9352:7;9349:19;9346:179;;;9419:9;9414:3;9410:19;9404:26;9462:48;9504:4;9496:6;9492:17;9481:9;9462:48;:::i;:::-;9454:6;9447:64;9369:156;9346:179;9571:1;9567;9559:6;9555:14;9551:22;9545:4;9538:36;8973:611;;;8936:887;;8526:1303;;;8434:1395;;:::o;9835:85::-;9880:7;9909:5;9898:16;;9835:85;;;:::o;9926:158::-;9984:9;10017:61;10035:42;10044:32;10070:5;10044:32;:::i;:::-;10035:42;:::i;:::-;10017:61;:::i;:::-;10004:74;;9926:158;;;:::o;10090:147::-;10185:45;10224:5;10185:45;:::i;:::-;10180:3;10173:58;10090:147;;:::o;10243:238::-;10344:4;10382:2;10371:9;10367:18;10359:26;;10395:79;10471:1;10460:9;10456:17;10447:6;10395:79;:::i;:::-;10243:238;;;;:::o;10487:118::-;10574:24;10592:5;10574:24;:::i;:::-;10569:3;10562:37;10487:118;;:::o;10611:222::-;10704:4;10742:2;10731:9;10727:18;10719:26;;10755:71;10823:1;10812:9;10808:17;10799:6;10755:71;:::i;:::-;10611:222;;;;:::o;10839:169::-;10923:11;10957:6;10952:3;10945:19;10997:4;10992:3;10988:14;10973:29;;10839:169;;;;:::o;11014:166::-;11154:18;11150:1;11142:6;11138:14;11131:42;11014:166;:::o;11186:366::-;11328:3;11349:67;11413:2;11408:3;11349:67;:::i;:::-;11342:74;;11425:93;11514:3;11425:93;:::i;:::-;11543:2;11538:3;11534:12;11527:19;;11186:366;;;:::o;11558:419::-;11724:4;11762:2;11751:9;11747:18;11739:26;;11811:9;11805:4;11801:20;11797:1;11786:9;11782:17;11775:47;11839:131;11965:4;11839:131;:::i;:::-;11831:139;;11558:419;;;:::o;526:4600:11:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 3480,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1431": {
									"entryPoint": 3520,
									"id": 1431,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1436": {
									"entryPoint": 4040,
									"id": 1436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1030": {
									"entryPoint": 4357,
									"id": 1030,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1090": {
									"entryPoint": 5570,
									"id": 1090,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 6033,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 4375,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 4782,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_979": {
									"entryPoint": 5346,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1354": {
									"entryPoint": 4350,
									"id": 1354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_607": {
									"entryPoint": 5473,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_580": {
									"entryPoint": 6559,
									"id": 580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_591": {
									"entryPoint": 6486,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_295": {
									"entryPoint": 5016,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1138": {
									"entryPoint": 4395,
									"id": 1138,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_869": {
									"entryPoint": 4542,
									"id": 869,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_623": {
									"entryPoint": 5250,
									"id": 623,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1315": {
									"entryPoint": 6633,
									"id": 1315,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1686": {
									"entryPoint": 6114,
									"id": 1686,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_946": {
									"entryPoint": 6796,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToWhitelist_1594": {
									"entryPoint": 3720,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_766": {
									"entryPoint": 3590,
									"id": 766,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_790": {
									"entryPoint": 1665,
									"id": 790,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_725": {
									"entryPoint": 2795,
									"id": 725,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cap_1267": {
									"entryPoint": 2421,
									"id": 1267,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_703": {
									"entryPoint": 2413,
									"id": 703,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_129": {
									"entryPoint": 2350,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 2379,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 3236,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isWhitelisted_1563": {
									"entryPoint": 2583,
									"id": 1563,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1550": {
									"entryPoint": 2718,
									"id": 1550,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_685": {
									"entryPoint": 1521,
									"id": 685,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1497": {
									"entryPoint": 2865,
									"id": 1497,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_568": {
									"entryPoint": 2775,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recoverERC20_1756": {
									"entryPoint": 1699,
									"id": 1756,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@removeFromWhitelist_1625": {
									"entryPoint": 2918,
									"id": 1625,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_190": {
									"entryPoint": 2460,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 3556,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMinter_1533": {
									"entryPoint": 4076,
									"id": 1533,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1395": {
									"entryPoint": 4245,
									"id": 1395,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 1400,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_694": {
									"entryPoint": 3336,
									"id": 694,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_712": {
									"entryPoint": 2295,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_822": {
									"entryPoint": 2304,
									"id": 822,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_749": {
									"entryPoint": 3486,
									"id": 749,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1508": {
									"entryPoint": 2665,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 9479,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9401,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9868,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7545,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9907,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613": {
									"entryPoint": 9297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 9660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff": {
									"entryPoint": 8909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee": {
									"entryPoint": 8458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 9764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba": {
									"entryPoint": 9155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181": {
									"entryPoint": 9013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e": {
									"entryPoint": 9518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad": {
									"entryPoint": 8666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4": {
									"entryPoint": 8562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21199:12",
										"nodeType": "YulBlock",
										"src": "0:21199:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:184:12",
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nativeSrc": "1870:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:12",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:12",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:12",
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nativeSrc": "1960:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nativeSrc": "1979:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nativeSrc": "1973:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nativeSrc": "1953:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nativeSrc": "1953:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nativeSrc": "1897:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nativeSrc": "1889:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:12",
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nativeSrc": "1913:15:12",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:12",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nativeSrc": "1918:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:12",
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nativeSrc": "2018:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nativeSrc": "2011:27:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nativeSrc": "2011:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nativeSrc": "2098:54:12",
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nativeSrc": "2108:38:12",
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nativeSrc": "2122:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nativeSrc": "2138:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nativeSrc": "2118:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:12",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:12",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nativeSrc": "2250:285:12",
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nativeSrc": "2260:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nativeSrc": "2274:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:12",
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nativeSrc": "2329:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nativeSrc": "2444:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nativeSrc": "2409:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nativeSrc": "2409:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nativeSrc": "2483:46:12",
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nativeSrc": "2499:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nativeSrc": "2490:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:12",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:12",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:12",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nativeSrc": "2659:195:12",
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nativeSrc": "2669:26:12",
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nativeSrc": "2677:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nativeSrc": "2712:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nativeSrc": "2731:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nativeSrc": "2705:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nativeSrc": "2705:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nativeSrc": "2761:86:12",
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nativeSrc": "2769:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:12",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:12",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:12",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nativeSrc": "2905:81:12",
													"nodeType": "YulBlock",
													"src": "2905:81:12",
													"statements": [
														{
															"nativeSrc": "2915:65:12",
															"nodeType": "YulAssignment",
															"src": "2915:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2930:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2937:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2926:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:12"
																},
																"nativeSrc": "2926:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2926:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2860:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:12",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:12",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:126:12"
											},
											{
												"body": {
													"nativeSrc": "3037:51:12",
													"nodeType": "YulBlock",
													"src": "3037:51:12",
													"statements": [
														{
															"nativeSrc": "3047:35:12",
															"nodeType": "YulAssignment",
															"src": "3047:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3058:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:12"
																},
																"nativeSrc": "3058:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3058:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3047:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2992:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3019:5:12",
														"nodeType": "YulTypedName",
														"src": "3019:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3029:7:12",
														"nodeType": "YulTypedName",
														"src": "3029:7:12",
														"type": ""
													}
												],
												"src": "2992:96:12"
											},
											{
												"body": {
													"nativeSrc": "3137:79:12",
													"nodeType": "YulBlock",
													"src": "3137:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:16:12",
																"nodeType": "YulBlock",
																"src": "3194:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3203:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3196:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:12"
																			},
																			"nativeSrc": "3196:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:12"
																		},
																		"nativeSrc": "3196:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3160:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3185:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3167:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:12"
																				},
																				"nativeSrc": "3167:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3157:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:12"
																		},
																		"nativeSrc": "3157:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:12"
																},
																"nativeSrc": "3150:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3150:43:12"
															},
															"nativeSrc": "3147:63:12",
															"nodeType": "YulIf",
															"src": "3147:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3094:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3130:5:12",
														"nodeType": "YulTypedName",
														"src": "3130:5:12",
														"type": ""
													}
												],
												"src": "3094:122:12"
											},
											{
												"body": {
													"nativeSrc": "3274:87:12",
													"nodeType": "YulBlock",
													"src": "3274:87:12",
													"statements": [
														{
															"nativeSrc": "3284:29:12",
															"nodeType": "YulAssignment",
															"src": "3284:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3306:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3293:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:12"
																},
																"nativeSrc": "3293:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3293:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3284:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3349:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3322:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:12"
																},
																"nativeSrc": "3322:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3322:33:12"
															},
															"nativeSrc": "3322:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3222:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3252:6:12",
														"nodeType": "YulTypedName",
														"src": "3252:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3260:3:12",
														"nodeType": "YulTypedName",
														"src": "3260:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3268:5:12",
														"nodeType": "YulTypedName",
														"src": "3268:5:12",
														"type": ""
													}
												],
												"src": "3222:139:12"
											},
											{
												"body": {
													"nativeSrc": "3412:32:12",
													"nodeType": "YulBlock",
													"src": "3412:32:12",
													"statements": [
														{
															"nativeSrc": "3422:16:12",
															"nodeType": "YulAssignment",
															"src": "3422:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3433:5:12",
																"nodeType": "YulIdentifier",
																"src": "3433:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3422:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3367:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3394:5:12",
														"nodeType": "YulTypedName",
														"src": "3394:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3404:7:12",
														"nodeType": "YulTypedName",
														"src": "3404:7:12",
														"type": ""
													}
												],
												"src": "3367:77:12"
											},
											{
												"body": {
													"nativeSrc": "3493:79:12",
													"nodeType": "YulBlock",
													"src": "3493:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3550:16:12",
																"nodeType": "YulBlock",
																"src": "3550:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3559:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3562:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3552:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:12"
																			},
																			"nativeSrc": "3552:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:12"
																		},
																		"nativeSrc": "3552:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3516:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3541:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3523:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:12"
																				},
																				"nativeSrc": "3523:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3513:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:12"
																		},
																		"nativeSrc": "3513:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3506:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:12"
																},
																"nativeSrc": "3506:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3506:43:12"
															},
															"nativeSrc": "3503:63:12",
															"nodeType": "YulIf",
															"src": "3503:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3450:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3486:5:12",
														"nodeType": "YulTypedName",
														"src": "3486:5:12",
														"type": ""
													}
												],
												"src": "3450:122:12"
											},
											{
												"body": {
													"nativeSrc": "3630:87:12",
													"nodeType": "YulBlock",
													"src": "3630:87:12",
													"statements": [
														{
															"nativeSrc": "3640:29:12",
															"nodeType": "YulAssignment",
															"src": "3640:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3662:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3649:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:12"
																},
																"nativeSrc": "3649:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3649:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3640:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3705:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3678:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:12"
																},
																"nativeSrc": "3678:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3678:33:12"
															},
															"nativeSrc": "3678:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3578:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3608:6:12",
														"nodeType": "YulTypedName",
														"src": "3608:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3616:3:12",
														"nodeType": "YulTypedName",
														"src": "3616:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3624:5:12",
														"nodeType": "YulTypedName",
														"src": "3624:5:12",
														"type": ""
													}
												],
												"src": "3578:139:12"
											},
											{
												"body": {
													"nativeSrc": "3806:391:12",
													"nodeType": "YulBlock",
													"src": "3806:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3852:83:12",
																"nodeType": "YulBlock",
																"src": "3852:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3854:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:12"
																			},
																			"nativeSrc": "3854:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:12"
																		},
																		"nativeSrc": "3854:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3827:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3836:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3823:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:12"
																		},
																		"nativeSrc": "3823:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3819:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:12"
																},
																"nativeSrc": "3819:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3819:32:12"
															},
															"nativeSrc": "3816:119:12",
															"nodeType": "YulIf",
															"src": "3816:119:12"
														},
														{
															"nativeSrc": "3945:117:12",
															"nodeType": "YulBlock",
															"src": "3945:117:12",
															"statements": [
																{
																	"nativeSrc": "3960:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3974:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3964:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3989:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3989:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4024:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4035:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4020:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:12"
																				},
																				"nativeSrc": "4020:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4044:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3999:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:12"
																		},
																		"nativeSrc": "3999:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3989:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4072:118:12",
															"nodeType": "YulBlock",
															"src": "4072:118:12",
															"statements": [
																{
																	"nativeSrc": "4087:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4101:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4091:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4117:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4117:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4152:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4163:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:12"
																				},
																				"nativeSrc": "4148:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4127:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:12"
																		},
																		"nativeSrc": "4127:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4117:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3723:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3768:9:12",
														"nodeType": "YulTypedName",
														"src": "3768:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3779:7:12",
														"nodeType": "YulTypedName",
														"src": "3779:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3791:6:12",
														"nodeType": "YulTypedName",
														"src": "3791:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3799:6:12",
														"nodeType": "YulTypedName",
														"src": "3799:6:12",
														"type": ""
													}
												],
												"src": "3723:474:12"
											},
											{
												"body": {
													"nativeSrc": "4303:519:12",
													"nodeType": "YulBlock",
													"src": "4303:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4349:83:12",
																"nodeType": "YulBlock",
																"src": "4349:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4351:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4351:77:12"
																			},
																			"nativeSrc": "4351:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4351:79:12"
																		},
																		"nativeSrc": "4351:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4351:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4324:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4324:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4333:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4333:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4320:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4320:3:12"
																		},
																		"nativeSrc": "4320:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4345:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4345:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4316:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4316:3:12"
																},
																"nativeSrc": "4316:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4316:32:12"
															},
															"nativeSrc": "4313:119:12",
															"nodeType": "YulIf",
															"src": "4313:119:12"
														},
														{
															"nativeSrc": "4442:117:12",
															"nodeType": "YulBlock",
															"src": "4442:117:12",
															"statements": [
																{
																	"nativeSrc": "4457:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4457:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4471:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4471:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4461:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4461:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4486:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4486:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4521:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4521:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4532:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4517:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4517:3:12"
																				},
																				"nativeSrc": "4517:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4517:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4541:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4541:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4496:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4496:20:12"
																		},
																		"nativeSrc": "4496:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4496:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4486:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4486:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4569:118:12",
															"nodeType": "YulBlock",
															"src": "4569:118:12",
															"statements": [
																{
																	"nativeSrc": "4584:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4584:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4598:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4598:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4588:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4588:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4614:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4614:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4649:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4649:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4660:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4660:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4645:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4645:3:12"
																				},
																				"nativeSrc": "4645:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4645:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4669:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4669:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4624:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4624:20:12"
																		},
																		"nativeSrc": "4624:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4624:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4614:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4614:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4697:118:12",
															"nodeType": "YulBlock",
															"src": "4697:118:12",
															"statements": [
																{
																	"nativeSrc": "4712:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4712:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4726:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4726:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4716:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4716:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4742:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4742:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4777:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4777:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4788:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4788:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4773:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4773:3:12"
																				},
																				"nativeSrc": "4773:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4773:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4797:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4797:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4752:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4752:20:12"
																		},
																		"nativeSrc": "4752:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4742:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4742:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4203:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4257:9:12",
														"nodeType": "YulTypedName",
														"src": "4257:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4268:7:12",
														"nodeType": "YulTypedName",
														"src": "4268:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4280:6:12",
														"nodeType": "YulTypedName",
														"src": "4280:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4288:6:12",
														"nodeType": "YulTypedName",
														"src": "4288:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4296:6:12",
														"nodeType": "YulTypedName",
														"src": "4296:6:12",
														"type": ""
													}
												],
												"src": "4203:619:12"
											},
											{
												"body": {
													"nativeSrc": "4893:53:12",
													"nodeType": "YulBlock",
													"src": "4893:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4910:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4910:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4933:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4933:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4915:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4915:17:12"
																		},
																		"nativeSrc": "4915:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4915:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4903:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4903:6:12"
																},
																"nativeSrc": "4903:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4903:37:12"
															},
															"nativeSrc": "4903:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4903:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4828:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4881:5:12",
														"nodeType": "YulTypedName",
														"src": "4881:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4888:3:12",
														"nodeType": "YulTypedName",
														"src": "4888:3:12",
														"type": ""
													}
												],
												"src": "4828:118:12"
											},
											{
												"body": {
													"nativeSrc": "5050:124:12",
													"nodeType": "YulBlock",
													"src": "5050:124:12",
													"statements": [
														{
															"nativeSrc": "5060:26:12",
															"nodeType": "YulAssignment",
															"src": "5060:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5072:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5072:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5083:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5083:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5068:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5068:3:12"
																},
																"nativeSrc": "5068:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5068:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5060:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5060:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5140:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5140:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5153:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5153:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5164:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5164:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5149:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5149:3:12"
																		},
																		"nativeSrc": "5149:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5149:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5096:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5096:43:12"
																},
																"nativeSrc": "5096:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5096:71:12"
															},
															"nativeSrc": "5096:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5096:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4952:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5022:9:12",
														"nodeType": "YulTypedName",
														"src": "5022:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5034:6:12",
														"nodeType": "YulTypedName",
														"src": "5034:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5045:4:12",
														"nodeType": "YulTypedName",
														"src": "5045:4:12",
														"type": ""
													}
												],
												"src": "4952:222:12"
											},
											{
												"body": {
													"nativeSrc": "5225:32:12",
													"nodeType": "YulBlock",
													"src": "5225:32:12",
													"statements": [
														{
															"nativeSrc": "5235:16:12",
															"nodeType": "YulAssignment",
															"src": "5235:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5246:5:12",
																"nodeType": "YulIdentifier",
																"src": "5246:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5235:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5235:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5180:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5207:5:12",
														"nodeType": "YulTypedName",
														"src": "5207:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5217:7:12",
														"nodeType": "YulTypedName",
														"src": "5217:7:12",
														"type": ""
													}
												],
												"src": "5180:77:12"
											},
											{
												"body": {
													"nativeSrc": "5306:79:12",
													"nodeType": "YulBlock",
													"src": "5306:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5363:16:12",
																"nodeType": "YulBlock",
																"src": "5363:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5372:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5372:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5375:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5375:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5365:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5365:6:12"
																			},
																			"nativeSrc": "5365:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5365:12:12"
																		},
																		"nativeSrc": "5365:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5365:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5329:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5329:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5354:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5354:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5336:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5336:17:12"
																				},
																				"nativeSrc": "5336:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5336:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5326:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5326:2:12"
																		},
																		"nativeSrc": "5326:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5319:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:12"
																},
																"nativeSrc": "5319:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5319:43:12"
															},
															"nativeSrc": "5316:63:12",
															"nodeType": "YulIf",
															"src": "5316:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5263:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5299:5:12",
														"nodeType": "YulTypedName",
														"src": "5299:5:12",
														"type": ""
													}
												],
												"src": "5263:122:12"
											},
											{
												"body": {
													"nativeSrc": "5443:87:12",
													"nodeType": "YulBlock",
													"src": "5443:87:12",
													"statements": [
														{
															"nativeSrc": "5453:29:12",
															"nodeType": "YulAssignment",
															"src": "5453:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5475:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5475:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5462:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5462:12:12"
																},
																"nativeSrc": "5462:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5462:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5453:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5453:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5518:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5518:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5491:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "5491:26:12"
																},
																"nativeSrc": "5491:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5491:33:12"
															},
															"nativeSrc": "5491:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5491:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5391:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5421:6:12",
														"nodeType": "YulTypedName",
														"src": "5421:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5429:3:12",
														"nodeType": "YulTypedName",
														"src": "5429:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5437:5:12",
														"nodeType": "YulTypedName",
														"src": "5437:5:12",
														"type": ""
													}
												],
												"src": "5391:139:12"
											},
											{
												"body": {
													"nativeSrc": "5602:263:12",
													"nodeType": "YulBlock",
													"src": "5602:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5648:83:12",
																"nodeType": "YulBlock",
																"src": "5648:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5650:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5650:77:12"
																			},
																			"nativeSrc": "5650:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5650:79:12"
																		},
																		"nativeSrc": "5650:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5650:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5623:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5623:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5619:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5619:3:12"
																		},
																		"nativeSrc": "5619:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5644:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:12"
																},
																"nativeSrc": "5615:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5615:32:12"
															},
															"nativeSrc": "5612:119:12",
															"nodeType": "YulIf",
															"src": "5612:119:12"
														},
														{
															"nativeSrc": "5741:117:12",
															"nodeType": "YulBlock",
															"src": "5741:117:12",
															"statements": [
																{
																	"nativeSrc": "5756:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5756:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5770:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5770:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5760:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5760:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5785:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5785:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5820:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5820:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5831:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5831:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5816:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5816:3:12"
																				},
																				"nativeSrc": "5816:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5816:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5840:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5840:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5795:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5795:20:12"
																		},
																		"nativeSrc": "5795:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5785:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5785:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5536:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5572:9:12",
														"nodeType": "YulTypedName",
														"src": "5572:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5583:7:12",
														"nodeType": "YulTypedName",
														"src": "5583:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5595:6:12",
														"nodeType": "YulTypedName",
														"src": "5595:6:12",
														"type": ""
													}
												],
												"src": "5536:329:12"
											},
											{
												"body": {
													"nativeSrc": "5936:53:12",
													"nodeType": "YulBlock",
													"src": "5936:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5953:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5976:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5976:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5958:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5958:17:12"
																		},
																		"nativeSrc": "5958:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5946:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:12"
																},
																"nativeSrc": "5946:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5946:37:12"
															},
															"nativeSrc": "5946:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5946:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5871:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:12",
														"nodeType": "YulTypedName",
														"src": "5924:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5931:3:12",
														"nodeType": "YulTypedName",
														"src": "5931:3:12",
														"type": ""
													}
												],
												"src": "5871:118:12"
											},
											{
												"body": {
													"nativeSrc": "6093:124:12",
													"nodeType": "YulBlock",
													"src": "6093:124:12",
													"statements": [
														{
															"nativeSrc": "6103:26:12",
															"nodeType": "YulAssignment",
															"src": "6103:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6115:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6115:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6126:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6126:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6111:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:12"
																},
																"nativeSrc": "6111:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6111:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6103:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6103:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6183:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6207:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6207:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:12"
																		},
																		"nativeSrc": "6192:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6139:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6139:43:12"
																},
																"nativeSrc": "6139:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6139:71:12"
															},
															"nativeSrc": "6139:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6139:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5995:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6065:9:12",
														"nodeType": "YulTypedName",
														"src": "6065:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6077:6:12",
														"nodeType": "YulTypedName",
														"src": "6077:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6088:4:12",
														"nodeType": "YulTypedName",
														"src": "6088:4:12",
														"type": ""
													}
												],
												"src": "5995:222:12"
											},
											{
												"body": {
													"nativeSrc": "6306:391:12",
													"nodeType": "YulBlock",
													"src": "6306:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6352:83:12",
																"nodeType": "YulBlock",
																"src": "6352:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6354:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6354:77:12"
																			},
																			"nativeSrc": "6354:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6354:79:12"
																		},
																		"nativeSrc": "6354:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6354:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6327:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6327:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6336:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6323:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:12"
																		},
																		"nativeSrc": "6323:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6348:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6319:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:12"
																},
																"nativeSrc": "6319:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6319:32:12"
															},
															"nativeSrc": "6316:119:12",
															"nodeType": "YulIf",
															"src": "6316:119:12"
														},
														{
															"nativeSrc": "6445:117:12",
															"nodeType": "YulBlock",
															"src": "6445:117:12",
															"statements": [
																{
																	"nativeSrc": "6460:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6460:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6474:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6464:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6464:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6489:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6489:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:12"
																				},
																				"nativeSrc": "6520:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6499:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6499:20:12"
																		},
																		"nativeSrc": "6499:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6489:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6489:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6572:118:12",
															"nodeType": "YulBlock",
															"src": "6572:118:12",
															"statements": [
																{
																	"nativeSrc": "6587:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6617:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6617:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6652:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6663:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6648:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:12"
																				},
																				"nativeSrc": "6648:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6672:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6627:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:12"
																		},
																		"nativeSrc": "6627:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6617:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6223:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6268:9:12",
														"nodeType": "YulTypedName",
														"src": "6268:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6279:7:12",
														"nodeType": "YulTypedName",
														"src": "6279:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6291:6:12",
														"nodeType": "YulTypedName",
														"src": "6291:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6299:6:12",
														"nodeType": "YulTypedName",
														"src": "6299:6:12",
														"type": ""
													}
												],
												"src": "6223:474:12"
											},
											{
												"body": {
													"nativeSrc": "6746:43:12",
													"nodeType": "YulBlock",
													"src": "6746:43:12",
													"statements": [
														{
															"nativeSrc": "6756:27:12",
															"nodeType": "YulAssignment",
															"src": "6756:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6771:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6771:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6778:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6778:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6767:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:12"
																},
																"nativeSrc": "6767:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6767:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6756:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6756:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6703:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6728:5:12",
														"nodeType": "YulTypedName",
														"src": "6728:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6738:7:12",
														"nodeType": "YulTypedName",
														"src": "6738:7:12",
														"type": ""
													}
												],
												"src": "6703:86:12"
											},
											{
												"body": {
													"nativeSrc": "6856:51:12",
													"nodeType": "YulBlock",
													"src": "6856:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6873:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6873:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6894:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6894:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6878:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "6878:15:12"
																		},
																		"nativeSrc": "6878:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6866:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:12"
																},
																"nativeSrc": "6866:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6866:35:12"
															},
															"nativeSrc": "6866:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6866:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6795:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6844:5:12",
														"nodeType": "YulTypedName",
														"src": "6844:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6851:3:12",
														"nodeType": "YulTypedName",
														"src": "6851:3:12",
														"type": ""
													}
												],
												"src": "6795:112:12"
											},
											{
												"body": {
													"nativeSrc": "7007:120:12",
													"nodeType": "YulBlock",
													"src": "7007:120:12",
													"statements": [
														{
															"nativeSrc": "7017:26:12",
															"nodeType": "YulAssignment",
															"src": "7017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7029:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7029:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7040:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7025:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:12"
																},
																"nativeSrc": "7025:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7017:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7093:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7106:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7117:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7117:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7102:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:12"
																		},
																		"nativeSrc": "7102:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7102:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7053:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "7053:39:12"
																},
																"nativeSrc": "7053:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7053:67:12"
															},
															"nativeSrc": "7053:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7053:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6913:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6979:9:12",
														"nodeType": "YulTypedName",
														"src": "6979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6991:6:12",
														"nodeType": "YulTypedName",
														"src": "6991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7002:4:12",
														"nodeType": "YulTypedName",
														"src": "7002:4:12",
														"type": ""
													}
												],
												"src": "6913:214:12"
											},
											{
												"body": {
													"nativeSrc": "7199:263:12",
													"nodeType": "YulBlock",
													"src": "7199:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7245:83:12",
																"nodeType": "YulBlock",
																"src": "7245:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7247:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7247:77:12"
																			},
																			"nativeSrc": "7247:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7247:79:12"
																		},
																		"nativeSrc": "7247:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7247:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7220:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7220:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7229:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7229:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7216:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:12"
																		},
																		"nativeSrc": "7216:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7241:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7212:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:12"
																},
																"nativeSrc": "7212:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7212:32:12"
															},
															"nativeSrc": "7209:119:12",
															"nodeType": "YulIf",
															"src": "7209:119:12"
														},
														{
															"nativeSrc": "7338:117:12",
															"nodeType": "YulBlock",
															"src": "7338:117:12",
															"statements": [
																{
																	"nativeSrc": "7353:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7353:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7367:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7367:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7357:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7357:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7382:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7382:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7417:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7428:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7413:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:12"
																				},
																				"nativeSrc": "7413:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7437:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7392:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7392:20:12"
																		},
																		"nativeSrc": "7392:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7392:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7382:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7382:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7133:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7169:9:12",
														"nodeType": "YulTypedName",
														"src": "7169:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7180:7:12",
														"nodeType": "YulTypedName",
														"src": "7180:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7192:6:12",
														"nodeType": "YulTypedName",
														"src": "7192:6:12",
														"type": ""
													}
												],
												"src": "7133:329:12"
											},
											{
												"body": {
													"nativeSrc": "7551:391:12",
													"nodeType": "YulBlock",
													"src": "7551:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7597:83:12",
																"nodeType": "YulBlock",
																"src": "7597:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7599:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7599:77:12"
																			},
																			"nativeSrc": "7599:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7599:79:12"
																		},
																		"nativeSrc": "7599:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7599:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7572:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7572:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7581:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7581:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7568:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7568:3:12"
																		},
																		"nativeSrc": "7568:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7568:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7593:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7593:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7564:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7564:3:12"
																},
																"nativeSrc": "7564:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7564:32:12"
															},
															"nativeSrc": "7561:119:12",
															"nodeType": "YulIf",
															"src": "7561:119:12"
														},
														{
															"nativeSrc": "7690:117:12",
															"nodeType": "YulBlock",
															"src": "7690:117:12",
															"statements": [
																{
																	"nativeSrc": "7705:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7705:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7719:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7719:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7709:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7709:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7734:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7734:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7769:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7769:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7780:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7780:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7765:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7765:3:12"
																				},
																				"nativeSrc": "7765:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7765:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7789:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7789:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7744:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7744:20:12"
																		},
																		"nativeSrc": "7744:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7744:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7734:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7734:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7817:118:12",
															"nodeType": "YulBlock",
															"src": "7817:118:12",
															"statements": [
																{
																	"nativeSrc": "7832:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7832:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7846:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7836:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7836:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7862:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7862:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7897:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7897:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7908:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7908:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7893:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7893:3:12"
																				},
																				"nativeSrc": "7893:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7893:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7917:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7917:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7872:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7872:20:12"
																		},
																		"nativeSrc": "7872:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7872:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7862:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7862:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7468:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7513:9:12",
														"nodeType": "YulTypedName",
														"src": "7513:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7524:7:12",
														"nodeType": "YulTypedName",
														"src": "7524:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7536:6:12",
														"nodeType": "YulTypedName",
														"src": "7536:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7544:6:12",
														"nodeType": "YulTypedName",
														"src": "7544:6:12",
														"type": ""
													}
												],
												"src": "7468:474:12"
											},
											{
												"body": {
													"nativeSrc": "7976:152:12",
													"nodeType": "YulBlock",
													"src": "7976:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7993:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7993:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7996:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7996:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7986:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:12"
																},
																"nativeSrc": "7986:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7986:88:12"
															},
															"nativeSrc": "7986:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7986:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8090:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8093:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8093:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8083:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8083:6:12"
																},
																"nativeSrc": "8083:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8083:15:12"
															},
															"nativeSrc": "8083:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8083:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8114:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8114:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8117:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8117:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8107:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:12"
																},
																"nativeSrc": "8107:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8107:15:12"
															},
															"nativeSrc": "8107:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8107:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7948:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7948:180:12"
											},
											{
												"body": {
													"nativeSrc": "8185:269:12",
													"nodeType": "YulBlock",
													"src": "8185:269:12",
													"statements": [
														{
															"nativeSrc": "8195:22:12",
															"nodeType": "YulAssignment",
															"src": "8195:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8209:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8209:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8215:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8215:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8205:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8205:3:12"
																},
																"nativeSrc": "8205:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8205:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8195:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:12"
																}
															]
														},
														{
															"nativeSrc": "8226:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8226:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8256:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8256:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8262:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8262:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8252:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:12"
																},
																"nativeSrc": "8252:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8252:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8230:18:12",
																	"nodeType": "YulTypedName",
																	"src": "8230:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8303:51:12",
																"nodeType": "YulBlock",
																"src": "8303:51:12",
																"statements": [
																	{
																		"nativeSrc": "8317:27:12",
																		"nodeType": "YulAssignment",
																		"src": "8317:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8331:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8331:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8339:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8339:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8327:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8327:3:12"
																			},
																			"nativeSrc": "8327:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8327:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8317:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8317:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8283:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8283:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8276:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8276:6:12"
																},
																"nativeSrc": "8276:26:12",
																"nodeType": "YulFunctionCall",
																"src": "8276:26:12"
															},
															"nativeSrc": "8273:81:12",
															"nodeType": "YulIf",
															"src": "8273:81:12"
														},
														{
															"body": {
																"nativeSrc": "8406:42:12",
																"nodeType": "YulBlock",
																"src": "8406:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8420:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8420:16:12"
																			},
																			"nativeSrc": "8420:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8420:18:12"
																		},
																		"nativeSrc": "8420:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8420:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8370:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8370:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8393:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8393:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8401:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8401:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8390:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8390:2:12"
																		},
																		"nativeSrc": "8390:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8367:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8367:2:12"
																},
																"nativeSrc": "8367:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8367:38:12"
															},
															"nativeSrc": "8364:84:12",
															"nodeType": "YulIf",
															"src": "8364:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8134:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8169:4:12",
														"nodeType": "YulTypedName",
														"src": "8169:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8178:6:12",
														"nodeType": "YulTypedName",
														"src": "8178:6:12",
														"type": ""
													}
												],
												"src": "8134:320:12"
											},
											{
												"body": {
													"nativeSrc": "8566:71:12",
													"nodeType": "YulBlock",
													"src": "8566:71:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8588:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8588:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8596:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8596:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8584:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8584:3:12"
																		},
																		"nativeSrc": "8584:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8584:14:12"
																	},
																	{
																		"hexValue": "63616e6e6f742073656e6420746f207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "8600:29:12",
																		"nodeType": "YulLiteral",
																		"src": "8600:29:12",
																		"type": "",
																		"value": "cannot send to zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8577:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8577:6:12"
																},
																"nativeSrc": "8577:53:12",
																"nodeType": "YulFunctionCall",
																"src": "8577:53:12"
															},
															"nativeSrc": "8577:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "8577:53:12"
														}
													]
												},
												"name": "store_literal_in_memory_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee",
												"nativeSrc": "8460:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8558:6:12",
														"nodeType": "YulTypedName",
														"src": "8558:6:12",
														"type": ""
													}
												],
												"src": "8460:177:12"
											},
											{
												"body": {
													"nativeSrc": "8789:220:12",
													"nodeType": "YulBlock",
													"src": "8789:220:12",
													"statements": [
														{
															"nativeSrc": "8799:74:12",
															"nodeType": "YulAssignment",
															"src": "8799:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8865:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8865:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8870:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8870:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8806:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "8806:58:12"
																},
																"nativeSrc": "8806:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8806:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8799:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8799:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8971:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8971:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee",
																	"nativeSrc": "8882:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "8882:88:12"
																},
																"nativeSrc": "8882:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8882:93:12"
															},
															"nativeSrc": "8882:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8882:93:12"
														},
														{
															"nativeSrc": "8984:19:12",
															"nodeType": "YulAssignment",
															"src": "8984:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8995:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8995:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9000:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9000:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8991:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8991:3:12"
																},
																"nativeSrc": "8991:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8991:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8984:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8984:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8643:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8777:3:12",
														"nodeType": "YulTypedName",
														"src": "8777:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8785:3:12",
														"nodeType": "YulTypedName",
														"src": "8785:3:12",
														"type": ""
													}
												],
												"src": "8643:366:12"
											},
											{
												"body": {
													"nativeSrc": "9186:248:12",
													"nodeType": "YulBlock",
													"src": "9186:248:12",
													"statements": [
														{
															"nativeSrc": "9196:26:12",
															"nodeType": "YulAssignment",
															"src": "9196:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9208:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9208:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9219:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9219:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9204:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9204:3:12"
																},
																"nativeSrc": "9204:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9204:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9196:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9196:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9243:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9243:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9254:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9254:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9239:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9239:3:12"
																		},
																		"nativeSrc": "9239:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9239:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9262:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9262:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9268:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9268:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9258:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9258:3:12"
																		},
																		"nativeSrc": "9258:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9258:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9232:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9232:6:12"
																},
																"nativeSrc": "9232:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9232:47:12"
															},
															"nativeSrc": "9232:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9232:47:12"
														},
														{
															"nativeSrc": "9288:139:12",
															"nodeType": "YulAssignment",
															"src": "9288:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9422:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9422:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9296:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9296:124:12"
																},
																"nativeSrc": "9296:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9296:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9288:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9288:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9015:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9166:9:12",
														"nodeType": "YulTypedName",
														"src": "9166:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9181:4:12",
														"nodeType": "YulTypedName",
														"src": "9181:4:12",
														"type": ""
													}
												],
												"src": "9015:419:12"
											},
											{
												"body": {
													"nativeSrc": "9546:72:12",
													"nodeType": "YulBlock",
													"src": "9546:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9568:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9568:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9576:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9576:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9564:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:12"
																		},
																		"nativeSrc": "9564:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9564:14:12"
																	},
																	{
																		"hexValue": "746f6b656e20616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "9580:30:12",
																		"nodeType": "YulLiteral",
																		"src": "9580:30:12",
																		"type": "",
																		"value": "token address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9557:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:12"
																},
																"nativeSrc": "9557:54:12",
																"nodeType": "YulFunctionCall",
																"src": "9557:54:12"
															},
															"nativeSrc": "9557:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "9557:54:12"
														}
													]
												},
												"name": "store_literal_in_memory_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4",
												"nativeSrc": "9440:178:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9538:6:12",
														"nodeType": "YulTypedName",
														"src": "9538:6:12",
														"type": ""
													}
												],
												"src": "9440:178:12"
											},
											{
												"body": {
													"nativeSrc": "9770:220:12",
													"nodeType": "YulBlock",
													"src": "9770:220:12",
													"statements": [
														{
															"nativeSrc": "9780:74:12",
															"nodeType": "YulAssignment",
															"src": "9780:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9846:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9846:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9851:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9851:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9787:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9787:58:12"
																},
																"nativeSrc": "9787:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9787:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9780:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9780:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9952:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9952:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4",
																	"nativeSrc": "9863:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9863:88:12"
																},
																"nativeSrc": "9863:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9863:93:12"
															},
															"nativeSrc": "9863:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9863:93:12"
														},
														{
															"nativeSrc": "9965:19:12",
															"nodeType": "YulAssignment",
															"src": "9965:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9976:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9976:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9981:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9972:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9972:3:12"
																},
																"nativeSrc": "9972:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9972:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9965:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9965:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9624:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9758:3:12",
														"nodeType": "YulTypedName",
														"src": "9758:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9766:3:12",
														"nodeType": "YulTypedName",
														"src": "9766:3:12",
														"type": ""
													}
												],
												"src": "9624:366:12"
											},
											{
												"body": {
													"nativeSrc": "10167:248:12",
													"nodeType": "YulBlock",
													"src": "10167:248:12",
													"statements": [
														{
															"nativeSrc": "10177:26:12",
															"nodeType": "YulAssignment",
															"src": "10177:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10189:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10189:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10200:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10200:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10185:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10185:3:12"
																},
																"nativeSrc": "10185:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10185:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10177:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10177:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10224:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10224:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10235:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10235:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10220:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10220:3:12"
																		},
																		"nativeSrc": "10220:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10220:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10243:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10243:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10249:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10249:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10239:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10239:3:12"
																		},
																		"nativeSrc": "10239:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10239:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10213:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10213:6:12"
																},
																"nativeSrc": "10213:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10213:47:12"
															},
															"nativeSrc": "10213:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10213:47:12"
														},
														{
															"nativeSrc": "10269:139:12",
															"nodeType": "YulAssignment",
															"src": "10269:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10403:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10403:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10277:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10277:124:12"
																},
																"nativeSrc": "10277:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10277:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10269:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10269:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9996:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10147:9:12",
														"nodeType": "YulTypedName",
														"src": "10147:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10162:4:12",
														"nodeType": "YulTypedName",
														"src": "10162:4:12",
														"type": ""
													}
												],
												"src": "9996:419:12"
											},
											{
												"body": {
													"nativeSrc": "10527:76:12",
													"nodeType": "YulBlock",
													"src": "10527:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10549:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10549:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10557:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10557:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10545:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10545:3:12"
																		},
																		"nativeSrc": "10545:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10545:14:12"
																	},
																	{
																		"hexValue": "616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "10561:34:12",
																		"nodeType": "YulLiteral",
																		"src": "10561:34:12",
																		"type": "",
																		"value": "amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10538:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10538:6:12"
																},
																"nativeSrc": "10538:58:12",
																"nodeType": "YulFunctionCall",
																"src": "10538:58:12"
															},
															"nativeSrc": "10538:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "10538:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad",
												"nativeSrc": "10421:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10519:6:12",
														"nodeType": "YulTypedName",
														"src": "10519:6:12",
														"type": ""
													}
												],
												"src": "10421:182:12"
											},
											{
												"body": {
													"nativeSrc": "10755:220:12",
													"nodeType": "YulBlock",
													"src": "10755:220:12",
													"statements": [
														{
															"nativeSrc": "10765:74:12",
															"nodeType": "YulAssignment",
															"src": "10765:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10831:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10831:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10836:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10836:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10772:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10772:58:12"
																},
																"nativeSrc": "10772:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10772:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10765:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10765:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10937:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10937:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad",
																	"nativeSrc": "10848:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10848:88:12"
																},
																"nativeSrc": "10848:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10848:93:12"
															},
															"nativeSrc": "10848:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10848:93:12"
														},
														{
															"nativeSrc": "10950:19:12",
															"nodeType": "YulAssignment",
															"src": "10950:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10961:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10961:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10966:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10966:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10957:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10957:3:12"
																},
																"nativeSrc": "10957:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10957:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10950:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10950:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10609:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10743:3:12",
														"nodeType": "YulTypedName",
														"src": "10743:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10751:3:12",
														"nodeType": "YulTypedName",
														"src": "10751:3:12",
														"type": ""
													}
												],
												"src": "10609:366:12"
											},
											{
												"body": {
													"nativeSrc": "11152:248:12",
													"nodeType": "YulBlock",
													"src": "11152:248:12",
													"statements": [
														{
															"nativeSrc": "11162:26:12",
															"nodeType": "YulAssignment",
															"src": "11162:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11174:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11174:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11185:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11185:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11170:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11170:3:12"
																},
																"nativeSrc": "11170:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11170:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11162:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11162:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11209:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11209:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11220:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11220:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11205:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11205:3:12"
																		},
																		"nativeSrc": "11205:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11205:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11228:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11228:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11234:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11234:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11224:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11224:3:12"
																		},
																		"nativeSrc": "11224:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11224:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11198:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11198:6:12"
																},
																"nativeSrc": "11198:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11198:47:12"
															},
															"nativeSrc": "11198:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11198:47:12"
														},
														{
															"nativeSrc": "11254:139:12",
															"nodeType": "YulAssignment",
															"src": "11254:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11388:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11388:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11262:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11262:124:12"
																},
																"nativeSrc": "11262:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11262:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11254:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11254:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10981:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11132:9:12",
														"nodeType": "YulTypedName",
														"src": "11132:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11147:4:12",
														"nodeType": "YulTypedName",
														"src": "11147:4:12",
														"type": ""
													}
												],
												"src": "10981:419:12"
											},
											{
												"body": {
													"nativeSrc": "11471:53:12",
													"nodeType": "YulBlock",
													"src": "11471:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11488:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11488:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11511:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11511:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11493:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "11493:17:12"
																		},
																		"nativeSrc": "11493:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11493:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11481:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11481:6:12"
																},
																"nativeSrc": "11481:37:12",
																"nodeType": "YulFunctionCall",
																"src": "11481:37:12"
															},
															"nativeSrc": "11481:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "11481:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11406:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11459:5:12",
														"nodeType": "YulTypedName",
														"src": "11459:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11466:3:12",
														"nodeType": "YulTypedName",
														"src": "11466:3:12",
														"type": ""
													}
												],
												"src": "11406:118:12"
											},
											{
												"body": {
													"nativeSrc": "11656:206:12",
													"nodeType": "YulBlock",
													"src": "11656:206:12",
													"statements": [
														{
															"nativeSrc": "11666:26:12",
															"nodeType": "YulAssignment",
															"src": "11666:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11678:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11678:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11689:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11689:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11674:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11674:3:12"
																},
																"nativeSrc": "11674:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11674:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11666:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11666:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11746:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11746:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11759:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11759:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11770:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11770:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11755:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11755:3:12"
																		},
																		"nativeSrc": "11755:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11755:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11702:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11702:43:12"
																},
																"nativeSrc": "11702:71:12",
																"nodeType": "YulFunctionCall",
																"src": "11702:71:12"
															},
															"nativeSrc": "11702:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "11702:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11827:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11827:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11840:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11840:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11851:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11851:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11836:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11836:3:12"
																		},
																		"nativeSrc": "11836:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11836:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11783:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11783:43:12"
																},
																"nativeSrc": "11783:72:12",
																"nodeType": "YulFunctionCall",
																"src": "11783:72:12"
															},
															"nativeSrc": "11783:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "11783:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11530:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11620:9:12",
														"nodeType": "YulTypedName",
														"src": "11620:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11632:6:12",
														"nodeType": "YulTypedName",
														"src": "11632:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11640:6:12",
														"nodeType": "YulTypedName",
														"src": "11640:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11651:4:12",
														"nodeType": "YulTypedName",
														"src": "11651:4:12",
														"type": ""
													}
												],
												"src": "11530:332:12"
											},
											{
												"body": {
													"nativeSrc": "11908:76:12",
													"nodeType": "YulBlock",
													"src": "11908:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11962:16:12",
																"nodeType": "YulBlock",
																"src": "11962:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11971:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11971:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11974:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11974:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11964:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11964:6:12"
																			},
																			"nativeSrc": "11964:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11964:12:12"
																		},
																		"nativeSrc": "11964:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11964:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11931:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11931:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11953:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "11953:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11938:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "11938:14:12"
																				},
																				"nativeSrc": "11938:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11938:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11928:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11928:2:12"
																		},
																		"nativeSrc": "11928:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11928:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11921:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11921:6:12"
																},
																"nativeSrc": "11921:40:12",
																"nodeType": "YulFunctionCall",
																"src": "11921:40:12"
															},
															"nativeSrc": "11918:60:12",
															"nodeType": "YulIf",
															"src": "11918:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11868:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11901:5:12",
														"nodeType": "YulTypedName",
														"src": "11901:5:12",
														"type": ""
													}
												],
												"src": "11868:116:12"
											},
											{
												"body": {
													"nativeSrc": "12050:77:12",
													"nodeType": "YulBlock",
													"src": "12050:77:12",
													"statements": [
														{
															"nativeSrc": "12060:22:12",
															"nodeType": "YulAssignment",
															"src": "12060:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12075:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12075:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12069:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12069:5:12"
																},
																"nativeSrc": "12069:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12069:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12060:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12060:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12115:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12115:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12091:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "12091:23:12"
																},
																"nativeSrc": "12091:30:12",
																"nodeType": "YulFunctionCall",
																"src": "12091:30:12"
															},
															"nativeSrc": "12091:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "12091:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11990:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12028:6:12",
														"nodeType": "YulTypedName",
														"src": "12028:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12036:3:12",
														"nodeType": "YulTypedName",
														"src": "12036:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12044:5:12",
														"nodeType": "YulTypedName",
														"src": "12044:5:12",
														"type": ""
													}
												],
												"src": "11990:137:12"
											},
											{
												"body": {
													"nativeSrc": "12207:271:12",
													"nodeType": "YulBlock",
													"src": "12207:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12253:83:12",
																"nodeType": "YulBlock",
																"src": "12253:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12255:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "12255:77:12"
																			},
																			"nativeSrc": "12255:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12255:79:12"
																		},
																		"nativeSrc": "12255:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12255:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12228:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12228:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12237:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12237:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12224:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12224:3:12"
																		},
																		"nativeSrc": "12224:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12224:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12249:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12249:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12220:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12220:3:12"
																},
																"nativeSrc": "12220:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12220:32:12"
															},
															"nativeSrc": "12217:119:12",
															"nodeType": "YulIf",
															"src": "12217:119:12"
														},
														{
															"nativeSrc": "12346:125:12",
															"nodeType": "YulBlock",
															"src": "12346:125:12",
															"statements": [
																{
																	"nativeSrc": "12361:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12361:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12375:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12375:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12365:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12365:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12390:71:12",
																	"nodeType": "YulAssignment",
																	"src": "12390:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12433:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12433:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12444:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12444:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12429:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12429:3:12"
																				},
																				"nativeSrc": "12429:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12429:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12453:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12453:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12400:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "12400:28:12"
																		},
																		"nativeSrc": "12400:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12400:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12390:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12390:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12133:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12177:9:12",
														"nodeType": "YulTypedName",
														"src": "12177:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12188:7:12",
														"nodeType": "YulTypedName",
														"src": "12188:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12200:6:12",
														"nodeType": "YulTypedName",
														"src": "12200:6:12",
														"type": ""
													}
												],
												"src": "12133:345:12"
											},
											{
												"body": {
													"nativeSrc": "12590:65:12",
													"nodeType": "YulBlock",
													"src": "12590:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12612:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12612:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12620:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12620:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12608:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12608:3:12"
																		},
																		"nativeSrc": "12608:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12608:14:12"
																	},
																	{
																		"hexValue": "4552433230207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "12624:23:12",
																		"nodeType": "YulLiteral",
																		"src": "12624:23:12",
																		"type": "",
																		"value": "ERC20 transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12601:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12601:6:12"
																},
																"nativeSrc": "12601:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12601:47:12"
															},
															"nativeSrc": "12601:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12601:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
												"nativeSrc": "12484:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12582:6:12",
														"nodeType": "YulTypedName",
														"src": "12582:6:12",
														"type": ""
													}
												],
												"src": "12484:171:12"
											},
											{
												"body": {
													"nativeSrc": "12807:220:12",
													"nodeType": "YulBlock",
													"src": "12807:220:12",
													"statements": [
														{
															"nativeSrc": "12817:74:12",
															"nodeType": "YulAssignment",
															"src": "12817:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12883:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12883:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12888:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12888:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12824:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12824:58:12"
																},
																"nativeSrc": "12824:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12824:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12817:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12817:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12989:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12989:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																	"nativeSrc": "12900:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12900:88:12"
																},
																"nativeSrc": "12900:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12900:93:12"
															},
															"nativeSrc": "12900:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12900:93:12"
														},
														{
															"nativeSrc": "13002:19:12",
															"nodeType": "YulAssignment",
															"src": "13002:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13013:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13013:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13018:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13018:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13009:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13009:3:12"
																},
																"nativeSrc": "13009:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13009:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13002:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13002:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12661:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12795:3:12",
														"nodeType": "YulTypedName",
														"src": "12795:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12803:3:12",
														"nodeType": "YulTypedName",
														"src": "12803:3:12",
														"type": ""
													}
												],
												"src": "12661:366:12"
											},
											{
												"body": {
													"nativeSrc": "13204:248:12",
													"nodeType": "YulBlock",
													"src": "13204:248:12",
													"statements": [
														{
															"nativeSrc": "13214:26:12",
															"nodeType": "YulAssignment",
															"src": "13214:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13226:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13226:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13237:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13237:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13222:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13222:3:12"
																},
																"nativeSrc": "13222:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13222:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13214:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13214:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13261:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13261:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13272:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13272:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13257:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13257:3:12"
																		},
																		"nativeSrc": "13257:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13257:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13280:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13280:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13286:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13286:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13276:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13276:3:12"
																		},
																		"nativeSrc": "13276:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13276:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13250:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13250:6:12"
																},
																"nativeSrc": "13250:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13250:47:12"
															},
															"nativeSrc": "13250:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13250:47:12"
														},
														{
															"nativeSrc": "13306:139:12",
															"nodeType": "YulAssignment",
															"src": "13306:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13440:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13440:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13314:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13314:124:12"
																},
																"nativeSrc": "13314:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13314:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13306:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13306:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13033:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13184:9:12",
														"nodeType": "YulTypedName",
														"src": "13184:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13199:4:12",
														"nodeType": "YulTypedName",
														"src": "13199:4:12",
														"type": ""
													}
												],
												"src": "13033:419:12"
											},
											{
												"body": {
													"nativeSrc": "13564:117:12",
													"nodeType": "YulBlock",
													"src": "13564:117:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13586:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13586:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13594:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13594:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13582:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13582:3:12"
																		},
																		"nativeSrc": "13582:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13582:14:12"
																	},
																	{
																		"hexValue": "63616e6e6f7420756e2d77686974656c69737420746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "13598:34:12",
																		"nodeType": "YulLiteral",
																		"src": "13598:34:12",
																		"type": "",
																		"value": "cannot un-whitelist the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13575:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13575:6:12"
																},
																"nativeSrc": "13575:58:12",
																"nodeType": "YulFunctionCall",
																"src": "13575:58:12"
															},
															"nativeSrc": "13575:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "13575:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13654:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13654:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13662:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13662:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13650:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13650:3:12"
																		},
																		"nativeSrc": "13650:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13650:15:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "13667:6:12",
																		"nodeType": "YulLiteral",
																		"src": "13667:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13643:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13643:6:12"
																},
																"nativeSrc": "13643:31:12",
																"nodeType": "YulFunctionCall",
																"src": "13643:31:12"
															},
															"nativeSrc": "13643:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "13643:31:12"
														}
													]
												},
												"name": "store_literal_in_memory_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181",
												"nativeSrc": "13458:223:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13556:6:12",
														"nodeType": "YulTypedName",
														"src": "13556:6:12",
														"type": ""
													}
												],
												"src": "13458:223:12"
											},
											{
												"body": {
													"nativeSrc": "13833:220:12",
													"nodeType": "YulBlock",
													"src": "13833:220:12",
													"statements": [
														{
															"nativeSrc": "13843:74:12",
															"nodeType": "YulAssignment",
															"src": "13843:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13909:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13909:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13914:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13914:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13850:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13850:58:12"
																},
																"nativeSrc": "13850:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13850:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13843:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13843:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14015:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14015:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181",
																	"nativeSrc": "13926:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13926:88:12"
																},
																"nativeSrc": "13926:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13926:93:12"
															},
															"nativeSrc": "13926:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13926:93:12"
														},
														{
															"nativeSrc": "14028:19:12",
															"nodeType": "YulAssignment",
															"src": "14028:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14039:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14039:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14044:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14044:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14035:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14035:3:12"
																},
																"nativeSrc": "14035:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14035:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14028:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14028:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13687:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13821:3:12",
														"nodeType": "YulTypedName",
														"src": "13821:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13829:3:12",
														"nodeType": "YulTypedName",
														"src": "13829:3:12",
														"type": ""
													}
												],
												"src": "13687:366:12"
											},
											{
												"body": {
													"nativeSrc": "14230:248:12",
													"nodeType": "YulBlock",
													"src": "14230:248:12",
													"statements": [
														{
															"nativeSrc": "14240:26:12",
															"nodeType": "YulAssignment",
															"src": "14240:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14252:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14252:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14263:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14263:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14248:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14248:3:12"
																},
																"nativeSrc": "14248:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14248:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14240:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14240:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14287:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14287:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14298:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14298:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14283:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14283:3:12"
																		},
																		"nativeSrc": "14283:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14283:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14306:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14306:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14312:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14302:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14302:3:12"
																		},
																		"nativeSrc": "14302:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14302:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14276:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14276:6:12"
																},
																"nativeSrc": "14276:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14276:47:12"
															},
															"nativeSrc": "14276:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14276:47:12"
														},
														{
															"nativeSrc": "14332:139:12",
															"nodeType": "YulAssignment",
															"src": "14332:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14466:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14466:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14340:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14340:124:12"
																},
																"nativeSrc": "14340:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14340:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14332:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14332:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14059:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14210:9:12",
														"nodeType": "YulTypedName",
														"src": "14210:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14225:4:12",
														"nodeType": "YulTypedName",
														"src": "14225:4:12",
														"type": ""
													}
												],
												"src": "14059:419:12"
											},
											{
												"body": {
													"nativeSrc": "14590:114:12",
													"nodeType": "YulBlock",
													"src": "14590:114:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14612:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14612:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14620:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14620:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14608:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14608:3:12"
																		},
																		"nativeSrc": "14608:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14608:14:12"
																	},
																	{
																		"hexValue": "63616e6e6f742077686974656c69737420746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "14624:34:12",
																		"nodeType": "YulLiteral",
																		"src": "14624:34:12",
																		"type": "",
																		"value": "cannot whitelist the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14601:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14601:6:12"
																},
																"nativeSrc": "14601:58:12",
																"nodeType": "YulFunctionCall",
																"src": "14601:58:12"
															},
															"nativeSrc": "14601:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "14601:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14680:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14680:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14688:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14688:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14676:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14676:3:12"
																		},
																		"nativeSrc": "14676:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14676:15:12"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "14693:3:12",
																		"nodeType": "YulLiteral",
																		"src": "14693:3:12",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14669:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14669:6:12"
																},
																"nativeSrc": "14669:28:12",
																"nodeType": "YulFunctionCall",
																"src": "14669:28:12"
															},
															"nativeSrc": "14669:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "14669:28:12"
														}
													]
												},
												"name": "store_literal_in_memory_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba",
												"nativeSrc": "14484:220:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14582:6:12",
														"nodeType": "YulTypedName",
														"src": "14582:6:12",
														"type": ""
													}
												],
												"src": "14484:220:12"
											},
											{
												"body": {
													"nativeSrc": "14856:220:12",
													"nodeType": "YulBlock",
													"src": "14856:220:12",
													"statements": [
														{
															"nativeSrc": "14866:74:12",
															"nodeType": "YulAssignment",
															"src": "14866:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14932:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14932:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14937:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14937:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14873:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14873:58:12"
																},
																"nativeSrc": "14873:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14873:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14866:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14866:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15038:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15038:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba",
																	"nativeSrc": "14949:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14949:88:12"
																},
																"nativeSrc": "14949:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14949:93:12"
															},
															"nativeSrc": "14949:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14949:93:12"
														},
														{
															"nativeSrc": "15051:19:12",
															"nodeType": "YulAssignment",
															"src": "15051:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15062:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15062:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15067:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15067:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15058:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15058:3:12"
																},
																"nativeSrc": "15058:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15058:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15051:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15051:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14710:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14844:3:12",
														"nodeType": "YulTypedName",
														"src": "14844:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14852:3:12",
														"nodeType": "YulTypedName",
														"src": "14852:3:12",
														"type": ""
													}
												],
												"src": "14710:366:12"
											},
											{
												"body": {
													"nativeSrc": "15253:248:12",
													"nodeType": "YulBlock",
													"src": "15253:248:12",
													"statements": [
														{
															"nativeSrc": "15263:26:12",
															"nodeType": "YulAssignment",
															"src": "15263:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15275:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15275:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15286:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15286:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15271:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15271:3:12"
																},
																"nativeSrc": "15271:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15271:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15263:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15263:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15310:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15310:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15321:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15321:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15306:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15306:3:12"
																		},
																		"nativeSrc": "15306:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15306:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15329:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15329:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15335:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15335:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15325:3:12"
																		},
																		"nativeSrc": "15325:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15325:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15299:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15299:6:12"
																},
																"nativeSrc": "15299:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15299:47:12"
															},
															"nativeSrc": "15299:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15299:47:12"
														},
														{
															"nativeSrc": "15355:139:12",
															"nodeType": "YulAssignment",
															"src": "15355:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15489:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15489:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15363:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15363:124:12"
																},
																"nativeSrc": "15363:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15363:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15355:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15355:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15082:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15233:9:12",
														"nodeType": "YulTypedName",
														"src": "15233:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15248:4:12",
														"nodeType": "YulTypedName",
														"src": "15248:4:12",
														"type": ""
													}
												],
												"src": "15082:419:12"
											},
											{
												"body": {
													"nativeSrc": "15613:73:12",
													"nodeType": "YulBlock",
													"src": "15613:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15635:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15635:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15643:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15643:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15631:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15631:3:12"
																		},
																		"nativeSrc": "15631:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15631:14:12"
																	},
																	{
																		"hexValue": "4d696e7465722063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "15647:31:12",
																		"nodeType": "YulLiteral",
																		"src": "15647:31:12",
																		"type": "",
																		"value": "Minter cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15624:6:12"
																},
																"nativeSrc": "15624:55:12",
																"nodeType": "YulFunctionCall",
																"src": "15624:55:12"
															},
															"nativeSrc": "15624:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "15624:55:12"
														}
													]
												},
												"name": "store_literal_in_memory_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613",
												"nativeSrc": "15507:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15605:6:12",
														"nodeType": "YulTypedName",
														"src": "15605:6:12",
														"type": ""
													}
												],
												"src": "15507:179:12"
											},
											{
												"body": {
													"nativeSrc": "15838:220:12",
													"nodeType": "YulBlock",
													"src": "15838:220:12",
													"statements": [
														{
															"nativeSrc": "15848:74:12",
															"nodeType": "YulAssignment",
															"src": "15848:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15914:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15914:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15919:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15919:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15855:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15855:58:12"
																},
																"nativeSrc": "15855:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15855:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15848:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15848:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16020:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16020:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613",
																	"nativeSrc": "15931:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15931:88:12"
																},
																"nativeSrc": "15931:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15931:93:12"
															},
															"nativeSrc": "15931:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15931:93:12"
														},
														{
															"nativeSrc": "16033:19:12",
															"nodeType": "YulAssignment",
															"src": "16033:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16044:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16044:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16049:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16049:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16040:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16040:3:12"
																},
																"nativeSrc": "16040:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16040:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16033:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16033:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15692:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15826:3:12",
														"nodeType": "YulTypedName",
														"src": "15826:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15834:3:12",
														"nodeType": "YulTypedName",
														"src": "15834:3:12",
														"type": ""
													}
												],
												"src": "15692:366:12"
											},
											{
												"body": {
													"nativeSrc": "16235:248:12",
													"nodeType": "YulBlock",
													"src": "16235:248:12",
													"statements": [
														{
															"nativeSrc": "16245:26:12",
															"nodeType": "YulAssignment",
															"src": "16245:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16257:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16257:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16268:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16268:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16253:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16253:3:12"
																},
																"nativeSrc": "16253:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16253:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16245:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16245:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16292:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16292:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16303:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16303:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16288:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16288:3:12"
																		},
																		"nativeSrc": "16288:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16288:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16311:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16311:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16317:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16317:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16307:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16307:3:12"
																		},
																		"nativeSrc": "16307:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16307:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16281:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16281:6:12"
																},
																"nativeSrc": "16281:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16281:47:12"
															},
															"nativeSrc": "16281:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16281:47:12"
														},
														{
															"nativeSrc": "16337:139:12",
															"nodeType": "YulAssignment",
															"src": "16337:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16471:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16471:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16345:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16345:124:12"
																},
																"nativeSrc": "16345:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16345:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16337:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16337:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16064:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16215:9:12",
														"nodeType": "YulTypedName",
														"src": "16215:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16230:4:12",
														"nodeType": "YulTypedName",
														"src": "16230:4:12",
														"type": ""
													}
												],
												"src": "16064:419:12"
											},
											{
												"body": {
													"nativeSrc": "16643:288:12",
													"nodeType": "YulBlock",
													"src": "16643:288:12",
													"statements": [
														{
															"nativeSrc": "16653:26:12",
															"nodeType": "YulAssignment",
															"src": "16653:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16665:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16665:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16676:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16676:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16661:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16661:3:12"
																},
																"nativeSrc": "16661:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16661:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16653:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16653:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16733:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16733:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16746:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16746:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16757:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16757:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16742:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16742:3:12"
																		},
																		"nativeSrc": "16742:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16742:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16689:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16689:43:12"
																},
																"nativeSrc": "16689:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16689:71:12"
															},
															"nativeSrc": "16689:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16689:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16814:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16814:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16827:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16827:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16838:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16838:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16823:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16823:3:12"
																		},
																		"nativeSrc": "16823:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16823:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16770:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16770:43:12"
																},
																"nativeSrc": "16770:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16770:72:12"
															},
															"nativeSrc": "16770:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16770:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16896:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16896:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16909:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16909:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16920:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16920:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16905:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16905:3:12"
																		},
																		"nativeSrc": "16905:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16905:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16852:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16852:43:12"
																},
																"nativeSrc": "16852:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16852:72:12"
															},
															"nativeSrc": "16852:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16852:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16489:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16599:9:12",
														"nodeType": "YulTypedName",
														"src": "16599:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16611:6:12",
														"nodeType": "YulTypedName",
														"src": "16611:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16619:6:12",
														"nodeType": "YulTypedName",
														"src": "16619:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16627:6:12",
														"nodeType": "YulTypedName",
														"src": "16627:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16638:4:12",
														"nodeType": "YulTypedName",
														"src": "16638:4:12",
														"type": ""
													}
												],
												"src": "16489:442:12"
											},
											{
												"body": {
													"nativeSrc": "17035:124:12",
													"nodeType": "YulBlock",
													"src": "17035:124:12",
													"statements": [
														{
															"nativeSrc": "17045:26:12",
															"nodeType": "YulAssignment",
															"src": "17045:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17057:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17057:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17068:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17068:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17053:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17053:3:12"
																},
																"nativeSrc": "17053:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17053:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17045:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17045:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17125:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17125:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17138:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17138:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17149:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17149:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17134:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17134:3:12"
																		},
																		"nativeSrc": "17134:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17134:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17081:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17081:43:12"
																},
																"nativeSrc": "17081:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17081:71:12"
															},
															"nativeSrc": "17081:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17081:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "16937:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17007:9:12",
														"nodeType": "YulTypedName",
														"src": "17007:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17019:6:12",
														"nodeType": "YulTypedName",
														"src": "17019:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17030:4:12",
														"nodeType": "YulTypedName",
														"src": "17030:4:12",
														"type": ""
													}
												],
												"src": "16937:222:12"
											},
											{
												"body": {
													"nativeSrc": "17291:206:12",
													"nodeType": "YulBlock",
													"src": "17291:206:12",
													"statements": [
														{
															"nativeSrc": "17301:26:12",
															"nodeType": "YulAssignment",
															"src": "17301:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17313:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17313:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17324:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17324:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17309:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17309:3:12"
																},
																"nativeSrc": "17309:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17309:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17301:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17301:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17381:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17381:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17394:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17394:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17405:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17405:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17390:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17390:3:12"
																		},
																		"nativeSrc": "17390:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17390:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17337:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17337:43:12"
																},
																"nativeSrc": "17337:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17337:71:12"
															},
															"nativeSrc": "17337:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17337:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17462:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17462:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17475:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17475:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17486:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17486:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17471:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17471:3:12"
																		},
																		"nativeSrc": "17471:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17471:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "17418:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17418:43:12"
																},
																"nativeSrc": "17418:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17418:72:12"
															},
															"nativeSrc": "17418:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17418:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "17165:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17255:9:12",
														"nodeType": "YulTypedName",
														"src": "17255:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17267:6:12",
														"nodeType": "YulTypedName",
														"src": "17267:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17275:6:12",
														"nodeType": "YulTypedName",
														"src": "17275:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17286:4:12",
														"nodeType": "YulTypedName",
														"src": "17286:4:12",
														"type": ""
													}
												],
												"src": "17165:332:12"
											},
											{
												"body": {
													"nativeSrc": "17609:127:12",
													"nodeType": "YulBlock",
													"src": "17609:127:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17631:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17631:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17639:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17639:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17627:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17627:3:12"
																		},
																		"nativeSrc": "17627:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17627:14:12"
																	},
																	{
																		"hexValue": "546f6b656e3a207472616e73666572207768696c652070617573656420286e6f",
																		"kind": "string",
																		"nativeSrc": "17643:34:12",
																		"nodeType": "YulLiteral",
																		"src": "17643:34:12",
																		"type": "",
																		"value": "Token: transfer while paused (no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17620:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17620:6:12"
																},
																"nativeSrc": "17620:58:12",
																"nodeType": "YulFunctionCall",
																"src": "17620:58:12"
															},
															"nativeSrc": "17620:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "17620:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17699:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17699:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17707:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17707:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17695:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17695:3:12"
																		},
																		"nativeSrc": "17695:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17695:15:12"
																	},
																	{
																		"hexValue": "742077686974656c697374656429",
																		"kind": "string",
																		"nativeSrc": "17712:16:12",
																		"nodeType": "YulLiteral",
																		"src": "17712:16:12",
																		"type": "",
																		"value": "t whitelisted)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17688:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17688:6:12"
																},
																"nativeSrc": "17688:41:12",
																"nodeType": "YulFunctionCall",
																"src": "17688:41:12"
															},
															"nativeSrc": "17688:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "17688:41:12"
														}
													]
												},
												"name": "store_literal_in_memory_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e",
												"nativeSrc": "17503:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17601:6:12",
														"nodeType": "YulTypedName",
														"src": "17601:6:12",
														"type": ""
													}
												],
												"src": "17503:233:12"
											},
											{
												"body": {
													"nativeSrc": "17888:220:12",
													"nodeType": "YulBlock",
													"src": "17888:220:12",
													"statements": [
														{
															"nativeSrc": "17898:74:12",
															"nodeType": "YulAssignment",
															"src": "17898:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17964:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17964:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17969:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17969:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17905:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17905:58:12"
																},
																"nativeSrc": "17905:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17905:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17898:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17898:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18070:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18070:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e",
																	"nativeSrc": "17981:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17981:88:12"
																},
																"nativeSrc": "17981:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17981:93:12"
															},
															"nativeSrc": "17981:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17981:93:12"
														},
														{
															"nativeSrc": "18083:19:12",
															"nodeType": "YulAssignment",
															"src": "18083:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18094:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18094:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18099:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18099:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18090:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18090:3:12"
																},
																"nativeSrc": "18090:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18090:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18083:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18083:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17742:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17876:3:12",
														"nodeType": "YulTypedName",
														"src": "17876:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17884:3:12",
														"nodeType": "YulTypedName",
														"src": "17884:3:12",
														"type": ""
													}
												],
												"src": "17742:366:12"
											},
											{
												"body": {
													"nativeSrc": "18285:248:12",
													"nodeType": "YulBlock",
													"src": "18285:248:12",
													"statements": [
														{
															"nativeSrc": "18295:26:12",
															"nodeType": "YulAssignment",
															"src": "18295:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18307:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18307:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18318:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18318:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18303:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18303:3:12"
																},
																"nativeSrc": "18303:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18303:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18295:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18295:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18342:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18342:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18353:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18353:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18338:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18338:3:12"
																		},
																		"nativeSrc": "18338:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18338:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18361:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18361:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18367:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18367:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18357:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18357:3:12"
																		},
																		"nativeSrc": "18357:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18357:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18331:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18331:6:12"
																},
																"nativeSrc": "18331:47:12",
																"nodeType": "YulFunctionCall",
																"src": "18331:47:12"
															},
															"nativeSrc": "18331:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "18331:47:12"
														},
														{
															"nativeSrc": "18387:139:12",
															"nodeType": "YulAssignment",
															"src": "18387:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18521:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18521:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18395:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "18395:124:12"
																},
																"nativeSrc": "18395:131:12",
																"nodeType": "YulFunctionCall",
																"src": "18395:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18387:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18387:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18114:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18265:9:12",
														"nodeType": "YulTypedName",
														"src": "18265:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18280:4:12",
														"nodeType": "YulTypedName",
														"src": "18280:4:12",
														"type": ""
													}
												],
												"src": "18114:419:12"
											},
											{
												"body": {
													"nativeSrc": "18645:64:12",
													"nodeType": "YulBlock",
													"src": "18645:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18667:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18667:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18675:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18675:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18663:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18663:3:12"
																		},
																		"nativeSrc": "18663:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18663:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "18679:22:12",
																		"nodeType": "YulLiteral",
																		"src": "18679:22:12",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18656:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18656:6:12"
																},
																"nativeSrc": "18656:46:12",
																"nodeType": "YulFunctionCall",
																"src": "18656:46:12"
															},
															"nativeSrc": "18656:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "18656:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "18539:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18637:6:12",
														"nodeType": "YulTypedName",
														"src": "18637:6:12",
														"type": ""
													}
												],
												"src": "18539:170:12"
											},
											{
												"body": {
													"nativeSrc": "18861:220:12",
													"nodeType": "YulBlock",
													"src": "18861:220:12",
													"statements": [
														{
															"nativeSrc": "18871:74:12",
															"nodeType": "YulAssignment",
															"src": "18871:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18937:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18937:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18942:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18942:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18878:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "18878:58:12"
																},
																"nativeSrc": "18878:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18878:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18871:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18871:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19043:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19043:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "18954:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "18954:88:12"
																},
																"nativeSrc": "18954:93:12",
																"nodeType": "YulFunctionCall",
																"src": "18954:93:12"
															},
															"nativeSrc": "18954:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "18954:93:12"
														},
														{
															"nativeSrc": "19056:19:12",
															"nodeType": "YulAssignment",
															"src": "19056:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19067:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19067:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19072:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19072:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19063:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19063:3:12"
																},
																"nativeSrc": "19063:12:12",
																"nodeType": "YulFunctionCall",
																"src": "19063:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19056:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19056:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18715:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18849:3:12",
														"nodeType": "YulTypedName",
														"src": "18849:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18857:3:12",
														"nodeType": "YulTypedName",
														"src": "18857:3:12",
														"type": ""
													}
												],
												"src": "18715:366:12"
											},
											{
												"body": {
													"nativeSrc": "19258:248:12",
													"nodeType": "YulBlock",
													"src": "19258:248:12",
													"statements": [
														{
															"nativeSrc": "19268:26:12",
															"nodeType": "YulAssignment",
															"src": "19268:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19280:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19280:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19291:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19291:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19276:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19276:3:12"
																},
																"nativeSrc": "19276:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19276:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19268:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19268:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19315:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19315:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19326:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19326:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19311:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19311:3:12"
																		},
																		"nativeSrc": "19311:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19311:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19334:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19334:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19340:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19340:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19330:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19330:3:12"
																		},
																		"nativeSrc": "19330:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19330:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19304:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19304:6:12"
																},
																"nativeSrc": "19304:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19304:47:12"
															},
															"nativeSrc": "19304:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19304:47:12"
														},
														{
															"nativeSrc": "19360:139:12",
															"nodeType": "YulAssignment",
															"src": "19360:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19494:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19494:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19368:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "19368:124:12"
																},
																"nativeSrc": "19368:131:12",
																"nodeType": "YulFunctionCall",
																"src": "19368:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19360:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19360:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19087:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19238:9:12",
														"nodeType": "YulTypedName",
														"src": "19238:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19253:4:12",
														"nodeType": "YulTypedName",
														"src": "19253:4:12",
														"type": ""
													}
												],
												"src": "19087:419:12"
											},
											{
												"body": {
													"nativeSrc": "19618:60:12",
													"nodeType": "YulBlock",
													"src": "19618:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19640:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "19640:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19648:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19648:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19636:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19636:3:12"
																		},
																		"nativeSrc": "19636:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19636:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "19652:18:12",
																		"nodeType": "YulLiteral",
																		"src": "19652:18:12",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19629:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19629:6:12"
																},
																"nativeSrc": "19629:42:12",
																"nodeType": "YulFunctionCall",
																"src": "19629:42:12"
															},
															"nativeSrc": "19629:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "19629:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "19512:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19610:6:12",
														"nodeType": "YulTypedName",
														"src": "19610:6:12",
														"type": ""
													}
												],
												"src": "19512:166:12"
											},
											{
												"body": {
													"nativeSrc": "19830:220:12",
													"nodeType": "YulBlock",
													"src": "19830:220:12",
													"statements": [
														{
															"nativeSrc": "19840:74:12",
															"nodeType": "YulAssignment",
															"src": "19840:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19906:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19906:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19911:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19911:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19847:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "19847:58:12"
																},
																"nativeSrc": "19847:67:12",
																"nodeType": "YulFunctionCall",
																"src": "19847:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19840:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19840:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20012:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20012:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "19923:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "19923:88:12"
																},
																"nativeSrc": "19923:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19923:93:12"
															},
															"nativeSrc": "19923:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "19923:93:12"
														},
														{
															"nativeSrc": "20025:19:12",
															"nodeType": "YulAssignment",
															"src": "20025:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20036:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20036:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20032:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20032:3:12"
																},
																"nativeSrc": "20032:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20032:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20025:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20025:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19684:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19818:3:12",
														"nodeType": "YulTypedName",
														"src": "19818:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19826:3:12",
														"nodeType": "YulTypedName",
														"src": "19826:3:12",
														"type": ""
													}
												],
												"src": "19684:366:12"
											},
											{
												"body": {
													"nativeSrc": "20227:248:12",
													"nodeType": "YulBlock",
													"src": "20227:248:12",
													"statements": [
														{
															"nativeSrc": "20237:26:12",
															"nodeType": "YulAssignment",
															"src": "20237:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20249:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20249:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20260:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20260:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20245:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20245:3:12"
																},
																"nativeSrc": "20245:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20245:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20237:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20237:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20284:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20284:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20295:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20295:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20280:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20280:3:12"
																		},
																		"nativeSrc": "20280:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20280:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20303:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20303:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20299:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20299:3:12"
																		},
																		"nativeSrc": "20299:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20299:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20273:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20273:6:12"
																},
																"nativeSrc": "20273:47:12",
																"nodeType": "YulFunctionCall",
																"src": "20273:47:12"
															},
															"nativeSrc": "20273:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "20273:47:12"
														},
														{
															"nativeSrc": "20329:139:12",
															"nodeType": "YulAssignment",
															"src": "20329:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20463:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20463:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20337:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "20337:124:12"
																},
																"nativeSrc": "20337:131:12",
																"nodeType": "YulFunctionCall",
																"src": "20337:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20329:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20329:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20056:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20207:9:12",
														"nodeType": "YulTypedName",
														"src": "20207:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20222:4:12",
														"nodeType": "YulTypedName",
														"src": "20222:4:12",
														"type": ""
													}
												],
												"src": "20056:419:12"
											},
											{
												"body": {
													"nativeSrc": "20607:206:12",
													"nodeType": "YulBlock",
													"src": "20607:206:12",
													"statements": [
														{
															"nativeSrc": "20617:26:12",
															"nodeType": "YulAssignment",
															"src": "20617:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20629:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20629:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20640:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20640:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20625:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20625:3:12"
																},
																"nativeSrc": "20625:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20625:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20617:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20617:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20697:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20697:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20710:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20710:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20721:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20721:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20706:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20706:3:12"
																		},
																		"nativeSrc": "20706:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20706:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20653:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20653:43:12"
																},
																"nativeSrc": "20653:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20653:71:12"
															},
															"nativeSrc": "20653:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20653:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20778:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20778:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20791:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20791:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20802:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20802:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20787:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20787:3:12"
																		},
																		"nativeSrc": "20787:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20787:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20734:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20734:43:12"
																},
																"nativeSrc": "20734:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20734:72:12"
															},
															"nativeSrc": "20734:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20734:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20481:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20571:9:12",
														"nodeType": "YulTypedName",
														"src": "20571:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20583:6:12",
														"nodeType": "YulTypedName",
														"src": "20583:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20591:6:12",
														"nodeType": "YulTypedName",
														"src": "20591:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20602:4:12",
														"nodeType": "YulTypedName",
														"src": "20602:4:12",
														"type": ""
													}
												],
												"src": "20481:332:12"
											},
											{
												"body": {
													"nativeSrc": "20847:152:12",
													"nodeType": "YulBlock",
													"src": "20847:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20864:1:12",
																		"nodeType": "YulLiteral",
																		"src": "20864:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20867:77:12",
																		"nodeType": "YulLiteral",
																		"src": "20867:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20857:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20857:6:12"
																},
																"nativeSrc": "20857:88:12",
																"nodeType": "YulFunctionCall",
																"src": "20857:88:12"
															},
															"nativeSrc": "20857:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "20857:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20961:1:12",
																		"nodeType": "YulLiteral",
																		"src": "20961:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20964:4:12",
																		"nodeType": "YulLiteral",
																		"src": "20964:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20954:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20954:6:12"
																},
																"nativeSrc": "20954:15:12",
																"nodeType": "YulFunctionCall",
																"src": "20954:15:12"
															},
															"nativeSrc": "20954:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "20954:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20985:1:12",
																		"nodeType": "YulLiteral",
																		"src": "20985:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20988:4:12",
																		"nodeType": "YulLiteral",
																		"src": "20988:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20978:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20978:6:12"
																},
																"nativeSrc": "20978:15:12",
																"nodeType": "YulFunctionCall",
																"src": "20978:15:12"
															},
															"nativeSrc": "20978:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "20978:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "20819:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "20819:180:12"
											},
											{
												"body": {
													"nativeSrc": "21049:147:12",
													"nodeType": "YulBlock",
													"src": "21049:147:12",
													"statements": [
														{
															"nativeSrc": "21059:25:12",
															"nodeType": "YulAssignment",
															"src": "21059:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21082:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21082:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21064:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "21064:17:12"
																},
																"nativeSrc": "21064:20:12",
																"nodeType": "YulFunctionCall",
																"src": "21064:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21059:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "21059:1:12"
																}
															]
														},
														{
															"nativeSrc": "21093:25:12",
															"nodeType": "YulAssignment",
															"src": "21093:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21116:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21116:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21098:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "21098:17:12"
																},
																"nativeSrc": "21098:20:12",
																"nodeType": "YulFunctionCall",
																"src": "21098:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21093:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "21093:1:12"
																}
															]
														},
														{
															"nativeSrc": "21127:16:12",
															"nodeType": "YulAssignment",
															"src": "21127:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21138:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21138:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21141:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21141:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21134:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21134:3:12"
																},
																"nativeSrc": "21134:9:12",
																"nodeType": "YulFunctionCall",
																"src": "21134:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21127:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21127:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21167:22:12",
																"nodeType": "YulBlock",
																"src": "21167:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21169:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "21169:16:12"
																			},
																			"nativeSrc": "21169:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "21169:18:12"
																		},
																		"nativeSrc": "21169:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "21169:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21159:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21159:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21162:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21162:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21156:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "21156:2:12"
																},
																"nativeSrc": "21156:10:12",
																"nodeType": "YulFunctionCall",
																"src": "21156:10:12"
															},
															"nativeSrc": "21153:36:12",
															"nodeType": "YulIf",
															"src": "21153:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21005:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21036:1:12",
														"nodeType": "YulTypedName",
														"src": "21036:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21039:1:12",
														"nodeType": "YulTypedName",
														"src": "21039:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21045:3:12",
														"nodeType": "YulTypedName",
														"src": "21045:3:12",
														"type": ""
													}
												],
												"src": "21005:191:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot send to zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"token address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot un-whitelist the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot whitelist the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minter cannot be zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token: transfer while paused (no\")\n\n        mstore(add(memPtr, 32), \"t whitelisted)\")\n\n    }\n\n    function abi_encode_t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1226": [
									{
										"length": 32,
										"start": 2424
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101c2575f3560e01c80635c975abb116100f7578063a9059cbb11610095578063dd62ed3e1161006f578063dd62ed3e146104f2578063e43252d714610522578063e63ab1e91461053e578063fca3b5aa1461055c576101c2565b8063a9059cbb14610488578063d5391393146104b8578063d547741f146104d6576101c2565b80638ab1d681116100d15780638ab1d6811461040057806391d148541461041c57806395d89b411461044c578063a217fddf1461046a576101c2565b80635c975abb146103a857806370a08231146103c65780638456cb59146103f6576101c2565b80632f2ff15d1161016457806336568abe1161013e57806336568abe146103365780633af32abf146103525780633f4ba83a1461038257806340c10f191461038c576101c2565b80632f2ff15d146102de578063313ce567146102fa578063355274ea14610318576101c2565b80631171bda9116101a05780631171bda91461024457806318160ddd1461026057806323b872dd1461027e578063248a9ca3146102ae576101c2565b806301ffc9a7146101c657806306fdde03146101f6578063095ea7b314610214575b5f80fd5b6101e060048036038101906101db9190611d01565b610578565b6040516101ed9190611d46565b60405180910390f35b6101fe6105f1565b60405161020b9190611de9565b60405180910390f35b61022e60048036038101906102299190611e96565b610681565b60405161023b9190611d46565b60405180910390f35b61025e60048036038101906102599190611ed4565b6106a3565b005b6102686108f7565b6040516102759190611f33565b60405180910390f35b61029860048036038101906102939190611ed4565b610900565b6040516102a59190611d46565b60405180910390f35b6102c860048036038101906102c39190611f7f565b61092e565b6040516102d59190611fb9565b60405180910390f35b6102f860048036038101906102f39190611fd2565b61094b565b005b61030261096d565b60405161030f919061202b565b60405180910390f35b610320610975565b60405161032d9190611f33565b60405180910390f35b610350600480360381019061034b9190611fd2565b61099c565b005b61036c60048036038101906103679190612044565b610a17565b6040516103799190611d46565b60405180910390f35b61038a610a69565b005b6103a660048036038101906103a19190611e96565b610a9e565b005b6103b0610ad7565b6040516103bd9190611d46565b60405180910390f35b6103e060048036038101906103db9190612044565b610aeb565b6040516103ed9190611f33565b60405180910390f35b6103fe610b31565b005b61041a60048036038101906104159190612044565b610b66565b005b61043660048036038101906104319190611fd2565b610ca4565b6040516104439190611d46565b60405180910390f35b610454610d08565b6040516104619190611de9565b60405180910390f35b610472610d98565b60405161047f9190611fb9565b60405180910390f35b6104a2600480360381019061049d9190611e96565b610d9e565b6040516104af9190611d46565b60405180910390f35b6104c0610dc0565b6040516104cd9190611fb9565b60405180910390f35b6104f060048036038101906104eb9190611fd2565b610de4565b005b61050c6004803603810190610507919061206f565b610e06565b6040516105199190611f33565b60405180910390f35b61053c60048036038101906105379190612044565b610e88565b005b610546610fc8565b6040516105539190611fb9565b60405180910390f35b61057660048036038101906105719190612044565b610fec565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105ea57506105e982611095565b5b9050919050565b606060048054610600906120da565b80601f016020809104026020016040519081016040528092919081815260200182805461062c906120da565b80156106775780601f1061064e57610100808354040283529160200191610677565b820191905f5260205f20905b81548152906001019060200180831161065a57829003601f168201915b5050505050905090565b5f8061068b6110fe565b9050610698818585611105565b600191505092915050565b5f801b6106af81611117565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361071d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071490612154565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361078b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610782906121bc565b60405180910390fd5b5f82116107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490612224565b60405180910390fd5b5f8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b8152600401610809929190612251565b6020604051808303815f875af1158015610825573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084991906122a2565b90508061088b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088290612317565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167faca8fb252cde442184e5f10e0f2e6e4029e8cd7717cae63559079610702436aa856040516108e89190611f33565b60405180910390a35050505050565b5f600354905090565b5f8061090a6110fe565b905061091785828561112b565b6109228585856111be565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b6109548261092e565b61095d81611117565b61096783836112ae565b50505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b6109a46110fe565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a08576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a128282611398565b505050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610a9381611117565b610a9b611482565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610ac881611117565b610ad283836114e2565b505050565b5f805f9054906101000a900460ff16905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b5b81611117565b610b63611561565b50565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b9081611117565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf5906123a5565b60405180910390fd5b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d5f604051610c989190611d46565b60405180910390a25050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060058054610d17906120da565b80601f0160208091040260200160405190810160405280929190818152602001828054610d43906120da565b8015610d8e5780601f10610d6557610100808354040283529160200191610d8e565b820191905f5260205f20905b815481529060010190602001808311610d7157829003601f168201915b5050505050905090565b5f801b81565b5f80610da86110fe565b9050610db58185856111be565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610ded8261092e565b610df681611117565b610e008383611398565b50505050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610eb281611117565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1790612433565b60405180910390fd5b600160075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d6001604051610fbc9190611d46565b60405180910390a25050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f801b610ff881611117565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611066576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105d9061249b565b60405180910390fd5b6110907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6836112ae565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b61111283838360016115c2565b505050565b611128816111236110fe565b611791565b50565b5f6111368484610e06565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156111b857818110156111a9578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111a0939291906124b9565b60405180910390fd5b6111b784848484035f6115c2565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361122e575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161122591906124ee565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129e575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161129591906124ee565b60405180910390fd5b6112a98383836117e2565b505050565b5f6112b98383610ca4565b61138e57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061132b6110fe565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611392565b5f90505b92915050565b5f6113a38383610ca4565b15611478575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506114156110fe565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061147c565b5f90505b92915050565b61148a611956565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6114cb6110fe565b6040516114d891906124ee565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611552575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161154991906124ee565b60405180910390fd5b61155d5f83836117e2565b5050565b61156961199f565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115ab6110fe565b6040516115b891906124ee565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611632575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161162991906124ee565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116a2575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161169991906124ee565b60405180910390fd5b8160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561178b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117829190611f33565b60405180910390a35b50505050565b61179b8282610ca4565b6117de5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117d5929190612507565b60405180910390fd5b5050565b6117ea610ad7565b15611946575f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f60075f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680156118f0575060075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b905082806118fb5750815b806119035750805b611942576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119399061259e565b60405180910390fd5b5050505b6119518383836119e9565b505050565b61195e610ad7565b61199d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199490612606565b60405180910390fd5b565b6119a7610ad7565b156119e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119de9061266e565b60405180910390fd5b565b6119f4838383611a8c565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a87575f611a30610975565b90505f611a3b6108f7565b905081811115611a845780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401611a7b92919061268c565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611adc578060035f828254611ad091906126e0565b92505081905550611bac565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611b66578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611b5d939291906124b9565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bf3578060035f8282540392505081905550611c3e565b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c9b9190611f33565b60405180910390a3505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ce081611cac565b8114611cea575f80fd5b50565b5f81359050611cfb81611cd7565b92915050565b5f60208284031215611d1657611d15611ca8565b5b5f611d2384828501611ced565b91505092915050565b5f8115159050919050565b611d4081611d2c565b82525050565b5f602082019050611d595f830184611d37565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d96578082015181840152602081019050611d7b565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611dbb82611d5f565b611dc58185611d69565b9350611dd5818560208601611d79565b611dde81611da1565b840191505092915050565b5f6020820190508181035f830152611e018184611db1565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e3282611e09565b9050919050565b611e4281611e28565b8114611e4c575f80fd5b50565b5f81359050611e5d81611e39565b92915050565b5f819050919050565b611e7581611e63565b8114611e7f575f80fd5b50565b5f81359050611e9081611e6c565b92915050565b5f8060408385031215611eac57611eab611ca8565b5b5f611eb985828601611e4f565b9250506020611eca85828601611e82565b9150509250929050565b5f805f60608486031215611eeb57611eea611ca8565b5b5f611ef886828701611e4f565b9350506020611f0986828701611e4f565b9250506040611f1a86828701611e82565b9150509250925092565b611f2d81611e63565b82525050565b5f602082019050611f465f830184611f24565b92915050565b5f819050919050565b611f5e81611f4c565b8114611f68575f80fd5b50565b5f81359050611f7981611f55565b92915050565b5f60208284031215611f9457611f93611ca8565b5b5f611fa184828501611f6b565b91505092915050565b611fb381611f4c565b82525050565b5f602082019050611fcc5f830184611faa565b92915050565b5f8060408385031215611fe857611fe7611ca8565b5b5f611ff585828601611f6b565b925050602061200685828601611e4f565b9150509250929050565b5f60ff82169050919050565b61202581612010565b82525050565b5f60208201905061203e5f83018461201c565b92915050565b5f6020828403121561205957612058611ca8565b5b5f61206684828501611e4f565b91505092915050565b5f806040838503121561208557612084611ca8565b5b5f61209285828601611e4f565b92505060206120a385828601611e4f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806120f157607f821691505b602082108103612104576121036120ad565b5b50919050565b7f63616e6e6f742073656e6420746f207a65726f206164647265737300000000005f82015250565b5f61213e601b83611d69565b91506121498261210a565b602082019050919050565b5f6020820190508181035f83015261216b81612132565b9050919050565b7f746f6b656e20616464726573732063616e6e6f74206265207a65726f000000005f82015250565b5f6121a6601c83611d69565b91506121b182612172565b602082019050919050565b5f6020820190508181035f8301526121d38161219a565b9050919050565b7f616d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61220e602083611d69565b9150612219826121da565b602082019050919050565b5f6020820190508181035f83015261223b81612202565b9050919050565b61224b81611e28565b82525050565b5f6040820190506122645f830185612242565b6122716020830184611f24565b9392505050565b61228181611d2c565b811461228b575f80fd5b50565b5f8151905061229c81612278565b92915050565b5f602082840312156122b7576122b6611ca8565b5b5f6122c48482850161228e565b91505092915050565b7f4552433230207472616e73666572206661696c656400000000000000000000005f82015250565b5f612301601583611d69565b915061230c826122cd565b602082019050919050565b5f6020820190508181035f83015261232e816122f5565b9050919050565b7f63616e6e6f7420756e2d77686974656c69737420746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f61238f602483611d69565b915061239a82612335565b604082019050919050565b5f6020820190508181035f8301526123bc81612383565b9050919050565b7f63616e6e6f742077686974656c69737420746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61241d602183611d69565b9150612428826123c3565b604082019050919050565b5f6020820190508181035f83015261244a81612411565b9050919050565b7f4d696e7465722063616e6e6f74206265207a65726f20616464726573730000005f82015250565b5f612485601d83611d69565b915061249082612451565b602082019050919050565b5f6020820190508181035f8301526124b281612479565b9050919050565b5f6060820190506124cc5f830186612242565b6124d96020830185611f24565b6124e66040830184611f24565b949350505050565b5f6020820190506125015f830184612242565b92915050565b5f60408201905061251a5f830185612242565b6125276020830184611faa565b9392505050565b7f546f6b656e3a207472616e73666572207768696c652070617573656420286e6f5f8201527f742077686974656c697374656429000000000000000000000000000000000000602082015250565b5f612588602e83611d69565b91506125938261252e565b604082019050919050565b5f6020820190508181035f8301526125b58161257c565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6125f0601483611d69565b91506125fb826125bc565b602082019050919050565b5f6020820190508181035f83015261261d816125e4565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612658601083611d69565b915061266382612624565b602082019050919050565b5f6020820190508181035f8301526126858161264c565b9050919050565b5f60408201905061269f5f830185611f24565b6126ac6020830184611f24565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126ea82611e63565b91506126f583611e63565b925082820190508082111561270d5761270c6126b3565b5b9291505056fea26469706673582212200d810c97f1b7ffd0da9d2ab8a995865f5abe91f4b69610611da3969683af136064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x55C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4D6 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x8AB1D681 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x46A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F6 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x38C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x318 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1171BDA9 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x1171BDA9 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2AE JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x214 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0xA69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH2 0xB31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0xD98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C0 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xE88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x546 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x576 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0xFEC JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5EA JUMPI POP PUSH2 0x5E9 DUP3 PUSH2 0x1095 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x600 SWAP1 PUSH2 0x20DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x62C SWAP1 PUSH2 0x20DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x677 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x64E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x677 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x68B PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP PUSH2 0x698 DUP2 DUP6 DUP6 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x6AF DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x714 SWAP1 PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP3 SWAP2 SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x22A2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xACA8FB252CDE442184E5F10E0F2E6E4029E8CD7717CAE63559079610702436AA DUP6 PUSH1 0x40 MLOAD PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x90A PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP PUSH2 0x917 DUP6 DUP3 DUP6 PUSH2 0x112B JUMP JUMPDEST PUSH2 0x922 DUP6 DUP6 DUP6 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x954 DUP3 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x95D DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x967 DUP4 DUP4 PUSH2 0x12AE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A4 PUSH2 0x10FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA12 DUP3 DUP3 PUSH2 0x1398 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xA93 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x1482 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xAC8 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xAD2 DUP4 DUP4 PUSH2 0x14E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB5B DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xB63 PUSH2 0x1561 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB90 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D PUSH0 PUSH1 0x40 MLOAD PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0xD17 SWAP1 PUSH2 0x20DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD43 SWAP1 PUSH2 0x20DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD8E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD8E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD71 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDA8 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP PUSH2 0xDB5 DUP2 DUP6 DUP6 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xDED DUP3 PUSH2 0x92E JUMP JUMPDEST PUSH2 0xDF6 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0xE00 DUP4 DUP4 PUSH2 0x1398 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xEB2 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF17 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0xFF8 DUP2 PUSH2 0x1117 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1066 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105D SWAP1 PUSH2 0x249B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1090 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x12AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1112 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1128 DUP2 PUSH2 0x1123 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x1791 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1136 DUP5 DUP5 PUSH2 0xE06 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x11B8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11A9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1225 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A9 DUP4 DUP4 DUP4 PUSH2 0x17E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B9 DUP4 DUP4 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0x138E JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x132B PUSH2 0x10FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1392 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13A3 DUP4 DUP4 PUSH2 0xCA4 JUMP JUMPDEST ISZERO PUSH2 0x1478 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1415 PUSH2 0x10FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x147C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x148A PUSH2 0x1956 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x14CB PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1552 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1549 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155D PUSH0 DUP4 DUP4 PUSH2 0x17E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1569 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x15AB PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B8 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1632 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1629 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1699 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x178B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x179B DUP3 DUP3 PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0x17DE JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D5 SWAP3 SWAP2 SWAP1 PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x17EA PUSH2 0xAD7 JUMP JUMPDEST ISZERO PUSH2 0x1946 JUMPI PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x18F0 JUMPI POP PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP DUP3 DUP1 PUSH2 0x18FB JUMPI POP DUP2 JUMPDEST DUP1 PUSH2 0x1903 JUMPI POP DUP1 JUMPDEST PUSH2 0x1942 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1939 SWAP1 PUSH2 0x259E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMPDEST PUSH2 0x1951 DUP4 DUP4 DUP4 PUSH2 0x19E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x195E PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x199D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1994 SWAP1 PUSH2 0x2606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19A7 PUSH2 0xAD7 JUMP JUMPDEST ISZERO PUSH2 0x19E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19DE SWAP1 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19F4 DUP4 DUP4 DUP4 PUSH2 0x1A8C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A87 JUMPI PUSH0 PUSH2 0x1A30 PUSH2 0x975 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A3B PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A84 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7B SWAP3 SWAP2 SWAP1 PUSH2 0x268C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ADC JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1AD0 SWAP2 SWAP1 PUSH2 0x26E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1B66 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BF3 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C3E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C9B SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE0 DUP2 PUSH2 0x1CAC JUMP JUMPDEST DUP2 EQ PUSH2 0x1CEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFB DUP2 PUSH2 0x1CD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D23 DUP5 DUP3 DUP6 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D40 DUP2 PUSH2 0x1D2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D59 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D96 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D7B JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBB DUP3 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x1DC5 DUP2 DUP6 PUSH2 0x1D69 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DD5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D79 JUMP JUMPDEST PUSH2 0x1DDE DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E01 DUP2 DUP5 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E32 DUP3 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E42 DUP2 PUSH2 0x1E28 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E75 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E90 DUP2 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAC JUMPI PUSH2 0x1EAB PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECA DUP6 DUP3 DUP7 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EEB JUMPI PUSH2 0x1EEA PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF8 DUP7 DUP3 DUP8 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F09 DUP7 DUP3 DUP8 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F1A DUP7 DUP3 DUP8 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1F2D DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F46 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F5E DUP2 PUSH2 0x1F4C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F68 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F79 DUP2 PUSH2 0x1F55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F94 JUMPI PUSH2 0x1F93 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FA1 DUP5 DUP3 DUP6 ADD PUSH2 0x1F6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FB3 DUP2 PUSH2 0x1F4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FCC PUSH0 DUP4 ADD DUP5 PUSH2 0x1FAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE8 JUMPI PUSH2 0x1FE7 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF5 DUP6 DUP3 DUP7 ADD PUSH2 0x1F6B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2006 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2025 DUP2 PUSH2 0x2010 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x203E PUSH0 DUP4 ADD DUP5 PUSH2 0x201C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2059 JUMPI PUSH2 0x2058 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2066 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH2 0x2084 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2092 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20F1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2104 JUMPI PUSH2 0x2103 PUSH2 0x20AD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F742073656E6420746F207A65726F20616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x213E PUSH1 0x1B DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2149 DUP3 PUSH2 0x210A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x216B DUP2 PUSH2 0x2132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F6B656E20616464726573732063616E6E6F74206265207A65726F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21A6 PUSH1 0x1C DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B1 DUP3 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D3 DUP2 PUSH2 0x219A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x220E PUSH1 0x20 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2219 DUP3 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x223B DUP2 PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x224B DUP2 PUSH2 0x1E28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2264 PUSH0 DUP4 ADD DUP6 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x2271 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2281 DUP2 PUSH2 0x1D2C JUMP JUMPDEST DUP2 EQ PUSH2 0x228B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x229C DUP2 PUSH2 0x2278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B7 JUMPI PUSH2 0x22B6 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C4 DUP5 DUP3 DUP6 ADD PUSH2 0x228E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2301 PUSH1 0x15 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x230C DUP3 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x232E DUP2 PUSH2 0x22F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F7420756E2D77686974656C69737420746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238F PUSH1 0x24 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x239A DUP3 PUSH2 0x2335 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23BC DUP2 PUSH2 0x2383 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F742077686974656C69737420746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x241D PUSH1 0x21 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2428 DUP3 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x244A DUP2 PUSH2 0x2411 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E7465722063616E6E6F74206265207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2485 PUSH1 0x1D DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2490 DUP3 PUSH2 0x2451 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24B2 DUP2 PUSH2 0x2479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24CC PUSH0 DUP4 ADD DUP7 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x24D9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x24E6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F24 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2501 PUSH0 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x251A PUSH0 DUP4 ADD DUP6 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x2527 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FAA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E3A207472616E73666572207768696C652070617573656420286E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x742077686974656C697374656429000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2588 PUSH1 0x2E DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2593 DUP3 PUSH2 0x252E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25B5 DUP2 PUSH2 0x257C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F0 PUSH1 0x14 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x25FB DUP3 PUSH2 0x25BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x261D DUP2 PUSH2 0x25E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2658 PUSH1 0x10 DUP4 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2663 DUP3 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2685 DUP2 PUSH2 0x264C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x269F PUSH0 DUP4 ADD DUP6 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x26AC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26EA DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP PUSH2 0x26F5 DUP4 PUSH2 0x1E63 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x270D JUMPI PUSH2 0x270C PUSH2 0x26B3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD DUP2 0xC SWAP8 CALL 0xB7 SELFDESTRUCT 0xD0 0xDA SWAP14 0x2A 0xB8 0xA9 SWAP6 DUP7 PUSH0 GAS 0xBE SWAP2 DELEGATECALL 0xB6 SWAP7 LT PUSH2 0x1DA3 SWAP7 SWAP7 DUP4 0xAF SGT PUSH1 0x64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "526:4600:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4625:499:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2803:97:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:81:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5304:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2716:116:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1874:77;;;:::i;:::-;;2498:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1711:73:11;;;:::i;:::-;;3316:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;589:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2948:242:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;658:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2111:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;1760:89:4:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;4625:499:11:-;2241:4:0;4738:18:11;;2473:16:0;2484:4;2473:10;:16::i;:::-;4790:1:11::1;4776:16;;:2;:16;;::::0;4768:56:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4859:1;4842:19;;:5;:19;;::::0;4834:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4921:1;4912:6;:10;4904:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4969:12;4991:5;4984:22;;;5007:2;5011:6;4984:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4969:49;;5036:7;5028:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5106:2;5084:33;;5099:5;5084:33;;;5110:6;5084:33;;;;;;:::i;:::-;;;;;;;;4758:366;4625:499:::0;;;;:::o;2803:97:4:-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;2688:82:4:-;2737:5;2761:2;2754:9;;2688:82;:::o;923:81:6:-;967:7;993:4;986:11;;923:81;:::o;5304:245:0:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;2716:116:11:-;2779:4;2802:14;:23;2817:7;2802:23;;;;;;;;;;;;;;;;;;;;;;;;;2795:30;;2716:116;;;:::o;1874:77::-;696:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1934:10:11::1;:8;:10::i;:::-;1874:77:::0;:::o;2498:107::-;627:24;2473:16:0;2484:4;2473:10;:16::i;:::-;2581:17:11::1;2587:2;2591:6;2581:5;:17::i;:::-;2498:107:::0;;;:::o;1615:84:3:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2933:116:4:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;1711:73:11:-;696:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1769:8:11::1;:6;:8::i;:::-;1711:73:::0;:::o;3316:266::-;696:24;2473:16:0;2484:4;2473:10;:16::i;:::-;3444:1:11::1;3425:21;;:7;:21;;::::0;3417:70:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3523:5;3497:14;:23;3512:7;3497:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3560:7;3543:32;;;3569:5;3543:32;;;;;;:::i;:::-;;;;;;;;3316:266:::0;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;1962:93:4:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;3244:178:4:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;589:62:11:-;627:24;589:62;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;3455:140:4:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2948:242:11:-;696:24;2473:16:0;2484:4;2473:10;:16::i;:::-;3057:1:11::1;3038:21;;:7;:21;;::::0;3030:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3133:4;3107:14;:23;3122:7;3107:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3169:7;3152:31;;;3178:4;3152:31;;;;;;:::i;:::-;;;;;;;;2948:242:::0;;:::o;658:62::-;696:24;658:62;:::o;2111:193::-;2241:4:0;2164:18:11;;2473:16:0;2484:4;2473:10;:16::i;:::-;2220:1:11::1;2202:20;;:6;:20;;::::0;2194:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2266:31;627:24;2290:6;2266:10;:31::i;:::-;;2111:193:::0;;:::o;730:146:9:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8630:128:4:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;10319:476:4:-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;6708:317::-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;2433:117:3:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;7362:208:4:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2186:115:3:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;9605:432:4:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;3710:542:11:-;3838:8;:6;:8::i;:::-;3834:372;;;3862:14;3895:1;3879:18;;:4;:18;;;3862:35;;3911:14;3942:1;3928:16;;:2;:16;;;3911:33;;3958:26;3987:14;:20;4002:4;3987:20;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;;4011:14;:18;4026:2;4011:18;;;;;;;;;;;;;;;;;;;;;;;;;3987:42;3958:71;;4068:9;:22;;;;4081:9;4068:22;:47;;;;4094:21;4068:47;4043:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;3848:358;;;3834:372;4215:30;4229:4;4235:2;4239:5;4215:13;:30::i;:::-;3710:542;;;:::o;1945:106:3:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;1767:::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;1036:371:6:-;1130:30;1144:4;1150:2;1154:5;1130:13;:30::i;:::-;1191:1;1175:18;;:4;:18;;;1171:230;;1209:17;1229:5;:3;:5::i;:::-;1209:25;;1248:14;1265:13;:11;:13::i;:::-;1248:30;;1305:9;1296:6;:18;1292:99;;;1358:6;1366:9;1341:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1292:99;1195:206;;1171:230;1036:371;;;:::o;5912:1107:4:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:619::-;4280:6;4288;4296;4345:2;4333:9;4324:7;4320:23;4316:32;4313:119;;;4351:79;;:::i;:::-;4313:119;4471:1;4496:53;4541:7;4532:6;4521:9;4517:22;4496:53;:::i;:::-;4486:63;;4442:117;4598:2;4624:53;4669:7;4660:6;4649:9;4645:22;4624:53;:::i;:::-;4614:63;;4569:118;4726:2;4752:53;4797:7;4788:6;4777:9;4773:22;4752:53;:::i;:::-;4742:63;;4697:118;4203:619;;;;;:::o;4828:118::-;4915:24;4933:5;4915:24;:::i;:::-;4910:3;4903:37;4828:118;;:::o;4952:222::-;5045:4;5083:2;5072:9;5068:18;5060:26;;5096:71;5164:1;5153:9;5149:17;5140:6;5096:71;:::i;:::-;4952:222;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:474::-;7536:6;7544;7593:2;7581:9;7572:7;7568:23;7564:32;7561:119;;;7599:79;;:::i;:::-;7561:119;7719:1;7744:53;7789:7;7780:6;7769:9;7765:22;7744:53;:::i;:::-;7734:63;;7690:117;7846:2;7872:53;7917:7;7908:6;7897:9;7893:22;7872:53;:::i;:::-;7862:63;;7817:118;7468:474;;;;;:::o;7948:180::-;7996:77;7993:1;7986:88;8093:4;8090:1;8083:15;8117:4;8114:1;8107:15;8134:320;8178:6;8215:1;8209:4;8205:12;8195:22;;8262:1;8256:4;8252:12;8283:18;8273:81;;8339:4;8331:6;8327:17;8317:27;;8273:81;8401:2;8393:6;8390:14;8370:18;8367:38;8364:84;;8420:18;;:::i;:::-;8364:84;8185:269;8134:320;;;:::o;8460:177::-;8600:29;8596:1;8588:6;8584:14;8577:53;8460:177;:::o;8643:366::-;8785:3;8806:67;8870:2;8865:3;8806:67;:::i;:::-;8799:74;;8882:93;8971:3;8882:93;:::i;:::-;9000:2;8995:3;8991:12;8984:19;;8643:366;;;:::o;9015:419::-;9181:4;9219:2;9208:9;9204:18;9196:26;;9268:9;9262:4;9258:20;9254:1;9243:9;9239:17;9232:47;9296:131;9422:4;9296:131;:::i;:::-;9288:139;;9015:419;;;:::o;9440:178::-;9580:30;9576:1;9568:6;9564:14;9557:54;9440:178;:::o;9624:366::-;9766:3;9787:67;9851:2;9846:3;9787:67;:::i;:::-;9780:74;;9863:93;9952:3;9863:93;:::i;:::-;9981:2;9976:3;9972:12;9965:19;;9624:366;;;:::o;9996:419::-;10162:4;10200:2;10189:9;10185:18;10177:26;;10249:9;10243:4;10239:20;10235:1;10224:9;10220:17;10213:47;10277:131;10403:4;10277:131;:::i;:::-;10269:139;;9996:419;;;:::o;10421:182::-;10561:34;10557:1;10549:6;10545:14;10538:58;10421:182;:::o;10609:366::-;10751:3;10772:67;10836:2;10831:3;10772:67;:::i;:::-;10765:74;;10848:93;10937:3;10848:93;:::i;:::-;10966:2;10961:3;10957:12;10950:19;;10609:366;;;:::o;10981:419::-;11147:4;11185:2;11174:9;11170:18;11162:26;;11234:9;11228:4;11224:20;11220:1;11209:9;11205:17;11198:47;11262:131;11388:4;11262:131;:::i;:::-;11254:139;;10981:419;;;:::o;11406:118::-;11493:24;11511:5;11493:24;:::i;:::-;11488:3;11481:37;11406:118;;:::o;11530:332::-;11651:4;11689:2;11678:9;11674:18;11666:26;;11702:71;11770:1;11759:9;11755:17;11746:6;11702:71;:::i;:::-;11783:72;11851:2;11840:9;11836:18;11827:6;11783:72;:::i;:::-;11530:332;;;;;:::o;11868:116::-;11938:21;11953:5;11938:21;:::i;:::-;11931:5;11928:32;11918:60;;11974:1;11971;11964:12;11918:60;11868:116;:::o;11990:137::-;12044:5;12075:6;12069:13;12060:22;;12091:30;12115:5;12091:30;:::i;:::-;11990:137;;;;:::o;12133:345::-;12200:6;12249:2;12237:9;12228:7;12224:23;12220:32;12217:119;;;12255:79;;:::i;:::-;12217:119;12375:1;12400:61;12453:7;12444:6;12433:9;12429:22;12400:61;:::i;:::-;12390:71;;12346:125;12133:345;;;;:::o;12484:171::-;12624:23;12620:1;12612:6;12608:14;12601:47;12484:171;:::o;12661:366::-;12803:3;12824:67;12888:2;12883:3;12824:67;:::i;:::-;12817:74;;12900:93;12989:3;12900:93;:::i;:::-;13018:2;13013:3;13009:12;13002:19;;12661:366;;;:::o;13033:419::-;13199:4;13237:2;13226:9;13222:18;13214:26;;13286:9;13280:4;13276:20;13272:1;13261:9;13257:17;13250:47;13314:131;13440:4;13314:131;:::i;:::-;13306:139;;13033:419;;;:::o;13458:223::-;13598:34;13594:1;13586:6;13582:14;13575:58;13667:6;13662:2;13654:6;13650:15;13643:31;13458:223;:::o;13687:366::-;13829:3;13850:67;13914:2;13909:3;13850:67;:::i;:::-;13843:74;;13926:93;14015:3;13926:93;:::i;:::-;14044:2;14039:3;14035:12;14028:19;;13687:366;;;:::o;14059:419::-;14225:4;14263:2;14252:9;14248:18;14240:26;;14312:9;14306:4;14302:20;14298:1;14287:9;14283:17;14276:47;14340:131;14466:4;14340:131;:::i;:::-;14332:139;;14059:419;;;:::o;14484:220::-;14624:34;14620:1;14612:6;14608:14;14601:58;14693:3;14688:2;14680:6;14676:15;14669:28;14484:220;:::o;14710:366::-;14852:3;14873:67;14937:2;14932:3;14873:67;:::i;:::-;14866:74;;14949:93;15038:3;14949:93;:::i;:::-;15067:2;15062:3;15058:12;15051:19;;14710:366;;;:::o;15082:419::-;15248:4;15286:2;15275:9;15271:18;15263:26;;15335:9;15329:4;15325:20;15321:1;15310:9;15306:17;15299:47;15363:131;15489:4;15363:131;:::i;:::-;15355:139;;15082:419;;;:::o;15507:179::-;15647:31;15643:1;15635:6;15631:14;15624:55;15507:179;:::o;15692:366::-;15834:3;15855:67;15919:2;15914:3;15855:67;:::i;:::-;15848:74;;15931:93;16020:3;15931:93;:::i;:::-;16049:2;16044:3;16040:12;16033:19;;15692:366;;;:::o;16064:419::-;16230:4;16268:2;16257:9;16253:18;16245:26;;16317:9;16311:4;16307:20;16303:1;16292:9;16288:17;16281:47;16345:131;16471:4;16345:131;:::i;:::-;16337:139;;16064:419;;;:::o;16489:442::-;16638:4;16676:2;16665:9;16661:18;16653:26;;16689:71;16757:1;16746:9;16742:17;16733:6;16689:71;:::i;:::-;16770:72;16838:2;16827:9;16823:18;16814:6;16770:72;:::i;:::-;16852;16920:2;16909:9;16905:18;16896:6;16852:72;:::i;:::-;16489:442;;;;;;:::o;16937:222::-;17030:4;17068:2;17057:9;17053:18;17045:26;;17081:71;17149:1;17138:9;17134:17;17125:6;17081:71;:::i;:::-;16937:222;;;;:::o;17165:332::-;17286:4;17324:2;17313:9;17309:18;17301:26;;17337:71;17405:1;17394:9;17390:17;17381:6;17337:71;:::i;:::-;17418:72;17486:2;17475:9;17471:18;17462:6;17418:72;:::i;:::-;17165:332;;;;;:::o;17503:233::-;17643:34;17639:1;17631:6;17627:14;17620:58;17712:16;17707:2;17699:6;17695:15;17688:41;17503:233;:::o;17742:366::-;17884:3;17905:67;17969:2;17964:3;17905:67;:::i;:::-;17898:74;;17981:93;18070:3;17981:93;:::i;:::-;18099:2;18094:3;18090:12;18083:19;;17742:366;;;:::o;18114:419::-;18280:4;18318:2;18307:9;18303:18;18295:26;;18367:9;18361:4;18357:20;18353:1;18342:9;18338:17;18331:47;18395:131;18521:4;18395:131;:::i;:::-;18387:139;;18114:419;;;:::o;18539:170::-;18679:22;18675:1;18667:6;18663:14;18656:46;18539:170;:::o;18715:366::-;18857:3;18878:67;18942:2;18937:3;18878:67;:::i;:::-;18871:74;;18954:93;19043:3;18954:93;:::i;:::-;19072:2;19067:3;19063:12;19056:19;;18715:366;;;:::o;19087:419::-;19253:4;19291:2;19280:9;19276:18;19268:26;;19340:9;19334:4;19330:20;19326:1;19315:9;19311:17;19304:47;19368:131;19494:4;19368:131;:::i;:::-;19360:139;;19087:419;;;:::o;19512:166::-;19652:18;19648:1;19640:6;19636:14;19629:42;19512:166;:::o;19684:366::-;19826:3;19847:67;19911:2;19906:3;19847:67;:::i;:::-;19840:74;;19923:93;20012:3;19923:93;:::i;:::-;20041:2;20036:3;20032:12;20025:19;;19684:366;;;:::o;20056:419::-;20222:4;20260:2;20249:9;20245:18;20237:26;;20309:9;20303:4;20299:20;20295:1;20284:9;20280:17;20273:47;20337:131;20463:4;20337:131;:::i;:::-;20329:139;;20056:419;;;:::o;20481:332::-;20602:4;20640:2;20629:9;20625:18;20617:26;;20653:71;20721:1;20710:9;20706:17;20697:6;20653:71;:::i;:::-;20734:72;20802:2;20791:9;20787:18;20778:6;20734:72;:::i;:::-;20481:332;;;;;:::o;20819:180::-;20867:77;20864:1;20857:88;20964:4;20961:1;20954:15;20988:4;20985:1;20978:15;21005:191;21045:3;21064:20;21082:1;21064:20;:::i;:::-;21059:25;;21098:20;21116:1;21098:20;:::i;:::-;21093:25;;21141:1;21138;21134:9;21127:16;;21162:3;21159:1;21156:10;21153:36;;;21169:18;;:::i;:::-;21153:36;21005:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2011400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "441",
								"MINTER_ROLE()": "392",
								"PAUSER_ROLE()": "413",
								"addToWhitelist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2897",
								"cap()": "infinite",
								"decimals()": "406",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"isWhitelisted(address)": "2937",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2519",
								"recoverERC20(address,address,uint256)": "infinite",
								"removeFromWhitelist(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setMinter(address)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1250,
									"end": 1593,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1426,
									"end": 1429,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1400,
									"end": 1404,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1406,
									"end": 1412,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 756,
									"end": 760,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 756,
									"end": 765,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 752,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 6,
									"value": "392E1E2700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 788,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 788,
									"end": 806,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 752,
									"end": 817,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 716,
									"end": 844,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1441,
									"end": 1478,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 2241,
									"end": 2245,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1452,
									"end": 1470,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1452,
									"end": 1470,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1472,
									"end": 1477,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1451,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1441,
									"end": 1451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1441,
									"end": 1451,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1478,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1441,
									"end": 1478,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1478,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1478,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1441,
									"end": 1478,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1478,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1488,
									"end": 1519,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 696,
									"end": 720,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 1512,
									"end": 1518,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1488,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1488,
									"end": 1498,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1488,
									"end": 1498,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1488,
									"end": 1519,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1488,
									"end": 1519,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1488,
									"end": 1519,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1488,
									"end": 1519,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1488,
									"end": 1519,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1488,
									"end": 1519,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1568,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 720,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 696,
									"end": 720,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1542,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1542,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1542,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1568,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1568,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1568,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1568,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1529,
									"end": 1568,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1578,
									"end": 1586,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1578,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1578,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1578,
									"end": 1584,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1578,
									"end": 1586,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1578,
									"end": 1586,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1578,
									"end": 1586,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1578,
									"end": 1586,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1578,
									"end": 1586,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1250,
									"end": 1593,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5674,
									"end": 5921,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 5674,
									"end": 5921,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5757,
									"end": 5782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5785,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 5798,
									"end": 5802,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5785,
									"end": 5797,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 5785,
									"end": 5797,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5785,
									"end": 5797,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 5785,
									"end": 5803,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5785,
									"end": 5803,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 5785,
									"end": 5803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5785,
									"end": 5803,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 5785,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5757,
									"end": 5803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5757,
									"end": 5803,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5838,
									"end": 5847,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5819,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5820,
									"end": 5824,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5813,
									"end": 5825,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5835,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5813,
									"end": 5835,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5847,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5847,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5847,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5813,
									"end": 5847,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5904,
									"end": 5913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5885,
									"end": 5902,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5879,
									"end": 5883,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5862,
									"end": 5914,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 5747,
									"end": 5921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5674,
									"end": 5921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5674,
									"end": 5921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5674,
									"end": 5921,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2186,
									"end": 2301,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2186,
									"end": 2301,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1239,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1239,
									"end": 1256,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1239,
									"end": 1256,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1239,
									"end": 1258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2255,
									"end": 2259,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2245,
									"end": 2252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2245,
									"end": 2252,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
								},
								{
									"begin": 2281,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2281,
									"end": 2291,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 2281,
									"end": 2291,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2281,
									"end": 2291,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2281,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2281,
									"end": 2293,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2281,
									"end": 2293,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2281,
									"end": 2293,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2281,
									"end": 2293,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 2274,
									"end": 2294,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 3
								},
								{
									"begin": 2186,
									"end": 2301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3786,
									"end": 3906,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 3786,
									"end": 3906,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3851,
									"end": 3858,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3877,
									"end": 3883,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3884,
									"end": 3888,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3877,
									"end": 3889,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3899,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3877,
									"end": 3899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3877,
									"end": 3899,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3870,
									"end": 3899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3870,
									"end": 3899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3786,
									"end": 3906,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3786,
									"end": 3906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3786,
									"end": 3906,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3786,
									"end": 3906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1837,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1837,
									"end": 1843,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1837,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1837,
									"end": 1843,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1837,
									"end": 1845,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1837,
									"end": 1845,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1837,
									"end": 1845,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1837,
									"end": 1845,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1837,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1836,
									"end": 1845,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1828,
									"end": 1866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1767,
									"end": 1873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1615,
									"end": 1699,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1615,
									"end": 1699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1678,
									"end": 1692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1678,
									"end": 1692,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1615,
									"end": 1699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1615,
									"end": 1699,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3163,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3037,
									"end": 3163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3081,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3114,
									"end": 3156,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3107,
									"end": 3112,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3103,
									"end": 3157,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3092,
									"end": 3157,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3092,
									"end": 3157,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3163,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3163,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3265,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3169,
									"end": 3265,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3206,
									"end": 3213,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3235,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 3253,
									"end": 3258,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3235,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3235,
									"end": 3259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3235,
									"end": 3259,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 3235,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3224,
									"end": 3259,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3224,
									"end": 3259,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3265,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3265,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3265,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 3362,
									"end": 3367,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3344,
									"end": 3368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3337,
									"end": 3342,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3369,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3383,
									"end": 3384,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3381,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3373,
									"end": 3385,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3271,
									"end": 3393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3456,
									"end": 3461,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3487,
									"end": 3493,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3494,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3494,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3494,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 3530,
									"end": 3535,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 3503,
									"end": 3536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3674,
									"end": 3680,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3682,
									"end": 3688,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3690,
									"end": 3696,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3698,
									"end": 3704,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3706,
									"end": 3712,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3758,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 3743,
									"end": 3752,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3734,
									"end": 3741,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3730,
									"end": 3753,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3726,
									"end": 3759,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3723,
									"end": 3843,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3723,
									"end": 3843,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 3723,
									"end": 3843,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3762,
									"end": 3841,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 3762,
									"end": 3841,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 3762,
									"end": 3841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3762,
									"end": 3841,
									"name": "tag",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 3762,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3723,
									"end": 3843,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 3723,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3903,
									"end": 3904,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3892,
									"end": 3901,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3905,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3882,
									"end": 3906,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3933,
									"end": 3951,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3925,
									"end": 3931,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3922,
									"end": 3952,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3919,
									"end": 4036,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3919,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 3919,
									"end": 4036,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3955,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 3955,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3955,
									"end": 4034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3955,
									"end": 4034,
									"name": "tag",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 3955,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3919,
									"end": 4036,
									"name": "tag",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 3919,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4060,
									"end": 4134,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 4126,
									"end": 4133,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4117,
									"end": 4123,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4106,
									"end": 4115,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4102,
									"end": 4124,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4060,
									"end": 4134,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 4060,
									"end": 4134,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4060,
									"end": 4134,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 4060,
									"end": 4134,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4050,
									"end": 4134,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 4050,
									"end": 4134,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3853,
									"end": 4144,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4204,
									"end": 4206,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4193,
									"end": 4202,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4189,
									"end": 4207,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4183,
									"end": 4208,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4235,
									"end": 4253,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4227,
									"end": 4233,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4224,
									"end": 4254,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4221,
									"end": 4338,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4221,
									"end": 4338,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 4221,
									"end": 4338,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4336,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 4257,
									"end": 4336,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 4257,
									"end": 4336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4336,
									"name": "tag",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 4257,
									"end": 4336,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4221,
									"end": 4338,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 4221,
									"end": 4338,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4362,
									"end": 4436,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 4428,
									"end": 4435,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4419,
									"end": 4425,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4408,
									"end": 4417,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4362,
									"end": 4436,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 4362,
									"end": 4436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4362,
									"end": 4436,
									"name": "tag",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 4362,
									"end": 4436,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4352,
									"end": 4436,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4352,
									"end": 4436,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4154,
									"end": 4446,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4485,
									"end": 4487,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4511,
									"end": 4575,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 4567,
									"end": 4574,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4558,
									"end": 4564,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4547,
									"end": 4556,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4543,
									"end": 4565,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4511,
									"end": 4575,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 4511,
									"end": 4575,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4511,
									"end": 4575,
									"name": "tag",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 4511,
									"end": 4575,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4501,
									"end": 4575,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4501,
									"end": 4575,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4456,
									"end": 4585,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4624,
									"end": 4626,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 4650,
									"end": 4714,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 4706,
									"end": 4713,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4697,
									"end": 4703,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4686,
									"end": 4695,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4682,
									"end": 4704,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4650,
									"end": 4714,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 4650,
									"end": 4714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4650,
									"end": 4714,
									"name": "tag",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 4650,
									"end": 4714,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4640,
									"end": 4714,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4640,
									"end": 4714,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4595,
									"end": 4724,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4763,
									"end": 4766,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4790,
									"end": 4854,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 4846,
									"end": 4853,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4837,
									"end": 4843,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4826,
									"end": 4835,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4822,
									"end": 4844,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4790,
									"end": 4854,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 4790,
									"end": 4854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4790,
									"end": 4854,
									"name": "tag",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 4790,
									"end": 4854,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4780,
									"end": 4854,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4780,
									"end": 4854,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4734,
									"end": 4864,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 4871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4877,
									"end": 4976,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 4877,
									"end": 4976,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4929,
									"end": 4935,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4963,
									"end": 4968,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4957,
									"end": 4969,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4947,
									"end": 4969,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4947,
									"end": 4969,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4877,
									"end": 4976,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4877,
									"end": 4976,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4877,
									"end": 4976,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4877,
									"end": 4976,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4982,
									"end": 5162,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 4982,
									"end": 5162,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5030,
									"end": 5107,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5020,
									"end": 5108,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5127,
									"end": 5131,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 5124,
									"end": 5125,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 5117,
									"end": 5132,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5151,
									"end": 5155,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 5148,
									"end": 5149,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5141,
									"end": 5156,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 5168,
									"end": 5488,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 5168,
									"end": 5488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5212,
									"end": 5218,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5249,
									"end": 5250,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 5243,
									"end": 5247,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5239,
									"end": 5251,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5251,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5251,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5296,
									"end": 5297,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5290,
									"end": 5294,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5286,
									"end": 5298,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5317,
									"end": 5335,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5307,
									"end": 5388,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "160"
								},
								{
									"begin": 5307,
									"end": 5388,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5373,
									"end": 5377,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 5365,
									"end": 5371,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5361,
									"end": 5378,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5351,
									"end": 5378,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5351,
									"end": 5378,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5307,
									"end": 5388,
									"name": "tag",
									"source": 12,
									"value": "160"
								},
								{
									"begin": 5307,
									"end": 5388,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5435,
									"end": 5437,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5427,
									"end": 5433,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5424,
									"end": 5438,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5404,
									"end": 5422,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5401,
									"end": 5439,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 5398,
									"end": 5482,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 5398,
									"end": 5482,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5454,
									"end": 5472,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 5454,
									"end": 5472,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 5454,
									"end": 5472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5454,
									"end": 5472,
									"name": "tag",
									"source": 12,
									"value": "162"
								},
								{
									"begin": 5454,
									"end": 5472,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5398,
									"end": 5482,
									"name": "tag",
									"source": 12,
									"value": "161"
								},
								{
									"begin": 5398,
									"end": 5482,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5219,
									"end": 5488,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5168,
									"end": 5488,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5168,
									"end": 5488,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5168,
									"end": 5488,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5168,
									"end": 5488,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5494,
									"end": 5635,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 5494,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5543,
									"end": 5547,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5566,
									"end": 5569,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5558,
									"end": 5569,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5558,
									"end": 5569,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5589,
									"end": 5592,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5586,
									"end": 5587,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5579,
									"end": 5593,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5623,
									"end": 5627,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5620,
									"end": 5621,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5610,
									"end": 5628,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 5602,
									"end": 5628,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5602,
									"end": 5628,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5494,
									"end": 5635,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5494,
									"end": 5635,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5494,
									"end": 5635,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5494,
									"end": 5635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5734,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 5641,
									"end": 5734,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5678,
									"end": 5684,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5725,
									"end": 5727,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5720,
									"end": 5722,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5713,
									"end": 5718,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5709,
									"end": 5723,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5705,
									"end": 5728,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 5695,
									"end": 5728,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5695,
									"end": 5728,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5734,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5734,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5734,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5734,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5740,
									"end": 5847,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 5740,
									"end": 5847,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5784,
									"end": 5792,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5834,
									"end": 5839,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5828,
									"end": 5832,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5824,
									"end": 5840,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 5803,
									"end": 5840,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5803,
									"end": 5840,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5740,
									"end": 5847,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5740,
									"end": 5847,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5740,
									"end": 5847,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5740,
									"end": 5847,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5740,
									"end": 5847,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5853,
									"end": 6246,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 5853,
									"end": 6246,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5922,
									"end": 5928,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5972,
									"end": 5973,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5960,
									"end": 5970,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5956,
									"end": 5974,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5995,
									"end": 6092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 6025,
									"end": 6091,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6014,
									"end": 6023,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5995,
									"end": 6092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 5995,
									"end": 6092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5995,
									"end": 6092,
									"name": "tag",
									"source": 12,
									"value": "167"
								},
								{
									"begin": 5995,
									"end": 6092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6113,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 6143,
									"end": 6151,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6132,
									"end": 6141,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6113,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 6113,
									"end": 6152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6113,
									"end": 6152,
									"name": "tag",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 6113,
									"end": 6152,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6101,
									"end": 6152,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 6101,
									"end": 6152,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6185,
									"end": 6189,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6181,
									"end": 6190,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6174,
									"end": 6179,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6170,
									"end": 6191,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6161,
									"end": 6191,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 6161,
									"end": 6191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6234,
									"end": 6238,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6224,
									"end": 6232,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6220,
									"end": 6239,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6213,
									"end": 6218,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6210,
									"end": 6240,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 6200,
									"end": 6240,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6200,
									"end": 6240,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5929,
									"end": 6246,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5929,
									"end": 6246,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5853,
									"end": 6246,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5853,
									"end": 6246,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5853,
									"end": 6246,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5853,
									"end": 6246,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5853,
									"end": 6246,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5853,
									"end": 6246,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6252,
									"end": 6312,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 6252,
									"end": 6312,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6280,
									"end": 6283,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6301,
									"end": 6306,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6294,
									"end": 6306,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6294,
									"end": 6306,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6252,
									"end": 6312,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6252,
									"end": 6312,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6252,
									"end": 6312,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6252,
									"end": 6312,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6318,
									"end": 6460,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 6318,
									"end": 6460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6368,
									"end": 6377,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6401,
									"end": 6454,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 6419,
									"end": 6453,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 6428,
									"end": 6452,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 6446,
									"end": 6451,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6428,
									"end": 6452,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 6428,
									"end": 6452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6428,
									"end": 6452,
									"name": "tag",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 6428,
									"end": 6452,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6419,
									"end": 6453,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 6419,
									"end": 6453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6419,
									"end": 6453,
									"name": "tag",
									"source": 12,
									"value": "172"
								},
								{
									"begin": 6419,
									"end": 6453,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6401,
									"end": 6454,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 6401,
									"end": 6454,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6401,
									"end": 6454,
									"name": "tag",
									"source": 12,
									"value": "171"
								},
								{
									"begin": 6401,
									"end": 6454,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6388,
									"end": 6454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6388,
									"end": 6454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6318,
									"end": 6460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6318,
									"end": 6460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6318,
									"end": 6460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6318,
									"end": 6460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6466,
									"end": 6541,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 6466,
									"end": 6541,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6509,
									"end": 6512,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6530,
									"end": 6535,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6523,
									"end": 6535,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6523,
									"end": 6535,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6466,
									"end": 6541,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6466,
									"end": 6541,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6466,
									"end": 6541,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6466,
									"end": 6541,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6547,
									"end": 6816,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 6547,
									"end": 6816,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6657,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 6688,
									"end": 6695,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6657,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 6657,
									"end": 6696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6657,
									"end": 6696,
									"name": "tag",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 6657,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6718,
									"end": 6809,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 6767,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "178"
								},
								{
									"begin": 6791,
									"end": 6807,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6767,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 6767,
									"end": 6808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6767,
									"end": 6808,
									"name": "tag",
									"source": 12,
									"value": "178"
								},
								{
									"begin": 6767,
									"end": 6808,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6759,
									"end": 6765,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6752,
									"end": 6756,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6746,
									"end": 6757,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 6718,
									"end": 6809,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 6718,
									"end": 6809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6718,
									"end": 6809,
									"name": "tag",
									"source": 12,
									"value": "177"
								},
								{
									"begin": 6718,
									"end": 6809,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6712,
									"end": 6716,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6705,
									"end": 6810,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6623,
									"end": 6816,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6547,
									"end": 6816,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6547,
									"end": 6816,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6547,
									"end": 6816,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6547,
									"end": 6816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6822,
									"end": 6895,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 6822,
									"end": 6895,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6867,
									"end": 6870,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6822,
									"end": 6895,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6822,
									"end": 6895,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6901,
									"end": 7090,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 6901,
									"end": 7090,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6978,
									"end": 7010,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 6978,
									"end": 7010,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 6978,
									"end": 7010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6978,
									"end": 7010,
									"name": "tag",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 6978,
									"end": 7010,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7019,
									"end": 7084,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 7077,
									"end": 7083,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7069,
									"end": 7075,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7063,
									"end": 7067,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7019,
									"end": 7084,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 7019,
									"end": 7084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7019,
									"end": 7084,
									"name": "tag",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 7019,
									"end": 7084,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6954,
									"end": 7090,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6901,
									"end": 7090,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6901,
									"end": 7090,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6901,
									"end": 7090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7096,
									"end": 7282,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 7096,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7156,
									"end": 7276,
									"name": "tag",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 7156,
									"end": 7276,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7173,
									"end": 7176,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7166,
									"end": 7171,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7163,
									"end": 7177,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7156,
									"end": 7276,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7156,
									"end": 7276,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 7156,
									"end": 7276,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7227,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 7264,
									"end": 7265,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7257,
									"end": 7262,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7227,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 7227,
									"end": 7266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7227,
									"end": 7266,
									"name": "tag",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 7227,
									"end": 7266,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7200,
									"end": 7201,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7193,
									"end": 7198,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7189,
									"end": 7202,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7180,
									"end": 7202,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7180,
									"end": 7202,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7156,
									"end": 7276,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 7156,
									"end": 7276,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7156,
									"end": 7276,
									"name": "tag",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 7156,
									"end": 7276,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7096,
									"end": 7282,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7096,
									"end": 7282,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7096,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7831,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 7288,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7389,
									"end": 7391,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7384,
									"end": 7387,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7392,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7378,
									"end": 7824,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7378,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 7378,
									"end": 7824,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7423,
									"end": 7461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "190"
								},
								{
									"begin": 7455,
									"end": 7460,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7423,
									"end": 7461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 7423,
									"end": 7461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7423,
									"end": 7461,
									"name": "tag",
									"source": 12,
									"value": "190"
								},
								{
									"begin": 7423,
									"end": 7461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7507,
									"end": 7536,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 7525,
									"end": 7535,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7507,
									"end": 7536,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 7507,
									"end": 7536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7507,
									"end": 7536,
									"name": "tag",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 7507,
									"end": 7536,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7497,
									"end": 7505,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7493,
									"end": 7537,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7690,
									"end": 7692,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7678,
									"end": 7688,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7675,
									"end": 7693,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7721,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7721,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 7672,
									"end": 7721,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7711,
									"end": 7719,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7696,
									"end": 7719,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7696,
									"end": 7719,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7721,
									"name": "tag",
									"source": 12,
									"value": "192"
								},
								{
									"begin": 7672,
									"end": 7721,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7734,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 7790,
									"end": 7812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 7808,
									"end": 7811,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7790,
									"end": 7812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 7790,
									"end": 7812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7790,
									"end": 7812,
									"name": "tag",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 7790,
									"end": 7812,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7780,
									"end": 7788,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7763,
									"end": 7774,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7734,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 7734,
									"end": 7814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7734,
									"end": 7814,
									"name": "tag",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 7734,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7393,
									"end": 7824,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7393,
									"end": 7824,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7378,
									"end": 7824,
									"name": "tag",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 7378,
									"end": 7824,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7831,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7831,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7831,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7837,
									"end": 7954,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 7837,
									"end": 7954,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7891,
									"end": 7899,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7941,
									"end": 7946,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7935,
									"end": 7939,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7931,
									"end": 7947,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 7910,
									"end": 7947,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7910,
									"end": 7947,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7837,
									"end": 7954,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7837,
									"end": 7954,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7837,
									"end": 7954,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7837,
									"end": 7954,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7837,
									"end": 7954,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 8129,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 7960,
									"end": 8129,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8004,
									"end": 8010,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8037,
									"end": 8088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 8085,
									"end": 8086,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8081,
									"end": 8087,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8073,
									"end": 8078,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8070,
									"end": 8071,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 8066,
									"end": 8079,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8037,
									"end": 8088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 8037,
									"end": 8088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8037,
									"end": 8088,
									"name": "tag",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 8037,
									"end": 8088,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8033,
									"end": 8089,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8118,
									"end": 8122,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 8112,
									"end": 8116,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8108,
									"end": 8123,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8098,
									"end": 8123,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8098,
									"end": 8123,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8011,
									"end": 8129,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 8129,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 8129,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 8129,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 8129,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 8129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8134,
									"end": 8429,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 8134,
									"end": 8429,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8210,
									"end": 8214,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8356,
									"end": 8385,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 8381,
									"end": 8384,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8375,
									"end": 8379,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8356,
									"end": 8385,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 8356,
									"end": 8385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8356,
									"end": 8385,
									"name": "tag",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 8356,
									"end": 8385,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8348,
									"end": 8385,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8348,
									"end": 8385,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8418,
									"end": 8421,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8415,
									"end": 8416,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8411,
									"end": 8422,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8405,
									"end": 8409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8402,
									"end": 8423,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 8394,
									"end": 8423,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8394,
									"end": 8423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8134,
									"end": 8429,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8134,
									"end": 8429,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8134,
									"end": 8429,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8134,
									"end": 8429,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8134,
									"end": 8429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8434,
									"end": 9829,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 8434,
									"end": 9829,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8551,
									"end": 8588,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 8584,
									"end": 8587,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8551,
									"end": 8588,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 8551,
									"end": 8588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8551,
									"end": 8588,
									"name": "tag",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 8551,
									"end": 8588,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8653,
									"end": 8671,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8645,
									"end": 8651,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8642,
									"end": 8672,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8639,
									"end": 8695,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8639,
									"end": 8695,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 8639,
									"end": 8695,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8675,
									"end": 8693,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 8675,
									"end": 8693,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 8675,
									"end": 8693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8675,
									"end": 8693,
									"name": "tag",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 8675,
									"end": 8693,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8639,
									"end": 8695,
									"name": "tag",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 8639,
									"end": 8695,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8719,
									"end": 8757,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 8751,
									"end": 8755,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8745,
									"end": 8756,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 8719,
									"end": 8757,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 8719,
									"end": 8757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8719,
									"end": 8757,
									"name": "tag",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 8719,
									"end": 8757,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8804,
									"end": 8871,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 8864,
									"end": 8870,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8856,
									"end": 8862,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8850,
									"end": 8854,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8804,
									"end": 8871,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 8804,
									"end": 8871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8804,
									"end": 8871,
									"name": "tag",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 8804,
									"end": 8871,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8898,
									"end": 8899,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8922,
									"end": 8926,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8909,
									"end": 8926,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8909,
									"end": 8926,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8954,
									"end": 8956,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8946,
									"end": 8952,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8943,
									"end": 8957,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8971,
									"end": 8972,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8966,
									"end": 9584,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8966,
									"end": 9584,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 8966,
									"end": 9584,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "207"
								},
								{
									"begin": 8966,
									"end": 9584,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9628,
									"end": 9629,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9645,
									"end": 9651,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9642,
									"end": 9719,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9642,
									"end": 9719,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 9642,
									"end": 9719,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9689,
									"end": 9692,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 9685,
									"end": 9704,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9679,
									"end": 9705,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9670,
									"end": 9705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9670,
									"end": 9705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9642,
									"end": 9719,
									"name": "tag",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 9642,
									"end": 9719,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9745,
									"end": 9812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "209"
								},
								{
									"begin": 9805,
									"end": 9811,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9798,
									"end": 9803,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9745,
									"end": 9812,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 9745,
									"end": 9812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9745,
									"end": 9812,
									"name": "tag",
									"source": 12,
									"value": "209"
								},
								{
									"begin": 9745,
									"end": 9812,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9739,
									"end": 9743,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9732,
									"end": 9813,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 9601,
									"end": 9823,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8936,
									"end": 9823,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 8936,
									"end": 9823,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8966,
									"end": 9584,
									"name": "tag",
									"source": 12,
									"value": "207"
								},
								{
									"begin": 8966,
									"end": 9584,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9018,
									"end": 9022,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 9014,
									"end": 9023,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 9006,
									"end": 9012,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9002,
									"end": 9024,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 9052,
									"end": 9089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 9084,
									"end": 9088,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9052,
									"end": 9089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 9052,
									"end": 9089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9052,
									"end": 9089,
									"name": "tag",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 9052,
									"end": 9089,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9111,
									"end": 9112,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9125,
									"end": 9333,
									"name": "tag",
									"source": 12,
									"value": "211"
								},
								{
									"begin": 9125,
									"end": 9333,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9139,
									"end": 9146,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9136,
									"end": 9137,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9133,
									"end": 9147,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 9125,
									"end": 9333,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9125,
									"end": 9333,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "213"
								},
								{
									"begin": 9125,
									"end": 9333,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9218,
									"end": 9227,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9213,
									"end": 9216,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 9209,
									"end": 9228,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9203,
									"end": 9229,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9195,
									"end": 9201,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9188,
									"end": 9230,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 9269,
									"end": 9270,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 9261,
									"end": 9267,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9257,
									"end": 9271,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9247,
									"end": 9271,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9247,
									"end": 9271,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9316,
									"end": 9318,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9305,
									"end": 9314,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9301,
									"end": 9319,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9288,
									"end": 9319,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 9288,
									"end": 9319,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9162,
									"end": 9166,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9159,
									"end": 9160,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9155,
									"end": 9167,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9150,
									"end": 9167,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9150,
									"end": 9167,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9125,
									"end": 9333,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "211"
								},
								{
									"begin": 9125,
									"end": 9333,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9125,
									"end": 9333,
									"name": "tag",
									"source": 12,
									"value": "213"
								},
								{
									"begin": 9125,
									"end": 9333,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9361,
									"end": 9367,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9352,
									"end": 9359,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9349,
									"end": 9368,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 9346,
									"end": 9525,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9346,
									"end": 9525,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 9346,
									"end": 9525,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9419,
									"end": 9428,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9414,
									"end": 9417,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 9410,
									"end": 9429,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9404,
									"end": 9430,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9462,
									"end": 9510,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "215"
								},
								{
									"begin": 9504,
									"end": 9508,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 9496,
									"end": 9502,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 9492,
									"end": 9509,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 9481,
									"end": 9490,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9462,
									"end": 9510,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 9462,
									"end": 9510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9462,
									"end": 9510,
									"name": "tag",
									"source": 12,
									"value": "215"
								},
								{
									"begin": 9462,
									"end": 9510,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9454,
									"end": 9460,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9447,
									"end": 9511,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 9369,
									"end": 9525,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9346,
									"end": 9525,
									"name": "tag",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 9346,
									"end": 9525,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9571,
									"end": 9572,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 9567,
									"end": 9568,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 9559,
									"end": 9565,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 9555,
									"end": 9569,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 9551,
									"end": 9573,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9545,
									"end": 9549,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 9538,
									"end": 9574,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8973,
									"end": 9584,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8973,
									"end": 9584,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8973,
									"end": 9584,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8936,
									"end": 9823,
									"name": "tag",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 8936,
									"end": 9823,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8936,
									"end": 9823,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8526,
									"end": 9829,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8526,
									"end": 9829,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8526,
									"end": 9829,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8434,
									"end": 9829,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8434,
									"end": 9829,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8434,
									"end": 9829,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9835,
									"end": 9920,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 9835,
									"end": 9920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9880,
									"end": 9887,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9909,
									"end": 9914,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9898,
									"end": 9914,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9898,
									"end": 9914,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9835,
									"end": 9920,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9835,
									"end": 9920,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9835,
									"end": 9920,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9835,
									"end": 9920,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9926,
									"end": 10084,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 9926,
									"end": 10084,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9984,
									"end": 9993,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10017,
									"end": 10078,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 10035,
									"end": 10077,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 10044,
									"end": 10076,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "220"
								},
								{
									"begin": 10070,
									"end": 10075,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10044,
									"end": 10076,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 10044,
									"end": 10076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10044,
									"end": 10076,
									"name": "tag",
									"source": 12,
									"value": "220"
								},
								{
									"begin": 10044,
									"end": 10076,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10035,
									"end": 10077,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 10035,
									"end": 10077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10035,
									"end": 10077,
									"name": "tag",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 10035,
									"end": 10077,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10017,
									"end": 10078,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 10017,
									"end": 10078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10017,
									"end": 10078,
									"name": "tag",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 10017,
									"end": 10078,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10004,
									"end": 10078,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10004,
									"end": 10078,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9926,
									"end": 10084,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9926,
									"end": 10084,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9926,
									"end": 10084,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9926,
									"end": 10084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10090,
									"end": 10237,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 10090,
									"end": 10237,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10185,
									"end": 10230,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "222"
								},
								{
									"begin": 10224,
									"end": 10229,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10185,
									"end": 10230,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 10185,
									"end": 10230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10185,
									"end": 10230,
									"name": "tag",
									"source": 12,
									"value": "222"
								},
								{
									"begin": 10185,
									"end": 10230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10180,
									"end": 10183,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10173,
									"end": 10231,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 10090,
									"end": 10237,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10090,
									"end": 10237,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10090,
									"end": 10237,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10243,
									"end": 10481,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 10243,
									"end": 10481,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10344,
									"end": 10348,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10382,
									"end": 10384,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10371,
									"end": 10380,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10367,
									"end": 10385,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10359,
									"end": 10385,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10359,
									"end": 10385,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10395,
									"end": 10474,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 10471,
									"end": 10472,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10460,
									"end": 10469,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10456,
									"end": 10473,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10447,
									"end": 10453,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10395,
									"end": 10474,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 10395,
									"end": 10474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10395,
									"end": 10474,
									"name": "tag",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 10395,
									"end": 10474,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10243,
									"end": 10481,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10243,
									"end": 10481,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10243,
									"end": 10481,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10243,
									"end": 10481,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10243,
									"end": 10481,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10487,
									"end": 10605,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 10487,
									"end": 10605,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10574,
									"end": 10598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 10592,
									"end": 10597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10574,
									"end": 10598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 10574,
									"end": 10598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10574,
									"end": 10598,
									"name": "tag",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 10574,
									"end": 10598,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10569,
									"end": 10572,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10562,
									"end": 10599,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 10487,
									"end": 10605,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10487,
									"end": 10605,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10487,
									"end": 10605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10611,
									"end": 10833,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 10611,
									"end": 10833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10704,
									"end": 10708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10742,
									"end": 10744,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10731,
									"end": 10740,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10727,
									"end": 10745,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10719,
									"end": 10745,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10719,
									"end": 10745,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10755,
									"end": 10826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 10823,
									"end": 10824,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10812,
									"end": 10821,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10808,
									"end": 10825,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10799,
									"end": 10805,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10755,
									"end": 10826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 10755,
									"end": 10826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10755,
									"end": 10826,
									"name": "tag",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 10755,
									"end": 10826,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10611,
									"end": 10833,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10611,
									"end": 10833,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10611,
									"end": 10833,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10611,
									"end": 10833,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10611,
									"end": 10833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10839,
									"end": 11008,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 10839,
									"end": 11008,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10923,
									"end": 10934,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10957,
									"end": 10963,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10952,
									"end": 10955,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10945,
									"end": 10964,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 10997,
									"end": 11001,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10992,
									"end": 10995,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10988,
									"end": 11002,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10973,
									"end": 11002,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10973,
									"end": 11002,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10839,
									"end": 11008,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10839,
									"end": 11008,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10839,
									"end": 11008,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10839,
									"end": 11008,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10839,
									"end": 11008,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11014,
									"end": 11180,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 11014,
									"end": 11180,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11154,
									"end": 11172,
									"name": "PUSH",
									"source": 12,
									"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
								},
								{
									"begin": 11150,
									"end": 11151,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11142,
									"end": 11148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11138,
									"end": 11152,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11131,
									"end": 11173,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 11014,
									"end": 11180,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11014,
									"end": 11180,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11186,
									"end": 11552,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 11186,
									"end": 11552,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11328,
									"end": 11331,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11349,
									"end": 11416,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "232"
								},
								{
									"begin": 11413,
									"end": 11415,
									"name": "PUSH",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 11408,
									"end": 11411,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11349,
									"end": 11416,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 11349,
									"end": 11416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11349,
									"end": 11416,
									"name": "tag",
									"source": 12,
									"value": "232"
								},
								{
									"begin": 11349,
									"end": 11416,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11342,
									"end": 11416,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11342,
									"end": 11416,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11425,
									"end": 11518,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "233"
								},
								{
									"begin": 11514,
									"end": 11517,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11425,
									"end": 11518,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 11425,
									"end": 11518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11425,
									"end": 11518,
									"name": "tag",
									"source": 12,
									"value": "233"
								},
								{
									"begin": 11425,
									"end": 11518,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11543,
									"end": 11545,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 11538,
									"end": 11541,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11534,
									"end": 11546,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11527,
									"end": 11546,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11527,
									"end": 11546,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11186,
									"end": 11552,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11186,
									"end": 11552,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11186,
									"end": 11552,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11186,
									"end": 11552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11558,
									"end": 11977,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 11558,
									"end": 11977,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11724,
									"end": 11728,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11762,
									"end": 11764,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 11751,
									"end": 11760,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11747,
									"end": 11765,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11739,
									"end": 11765,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11739,
									"end": 11765,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11811,
									"end": 11820,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11805,
									"end": 11809,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11801,
									"end": 11821,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 11797,
									"end": 11798,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11786,
									"end": 11795,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11782,
									"end": 11799,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11775,
									"end": 11822,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 11839,
									"end": 11970,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "235"
								},
								{
									"begin": 11965,
									"end": 11969,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11839,
									"end": 11970,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 11839,
									"end": 11970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11839,
									"end": 11970,
									"name": "tag",
									"source": 12,
									"value": "235"
								},
								{
									"begin": 11839,
									"end": 11970,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11831,
									"end": 11970,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11831,
									"end": 11970,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11558,
									"end": 11977,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11558,
									"end": 11977,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11558,
									"end": 11977,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11558,
									"end": 11977,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1226"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 5126,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d810c97f1b7ffd0da9d2ab8a995865f5abe91f4b69610611da3969683af136064736f6c63430008180033",
									".code": [
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "E43252D7"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "E63AB1E9"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "FCA3B5AA"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "8AB1D681"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "8AB1D681"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "3AF32ABF"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "355274EA"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "1171BDA9"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "1171BDA9"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 526,
											"end": 5126,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4625,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4625,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 2716,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2716,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2716,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1874,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2498,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 2498,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1711,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3316,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 3316,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 589,
											"end": 651,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 589,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 589,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 589,
											"end": 651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 651,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 589,
											"end": 651,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 589,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 589,
											"end": 651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 651,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 2948,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2948,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 658,
											"end": 720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 658,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 658,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 658,
											"end": 720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 720,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 658,
											"end": 720,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 658,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 658,
											"end": 720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 720,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 2111,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2111,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4738,
											"end": 4756,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4738,
											"end": 4756,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4776,
											"end": 4792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4778,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4776,
											"end": 4792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4792,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 4768,
											"end": 4824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 4768,
											"end": 4824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4861,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4842,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4842,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 4861,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4842,
											"end": 4861,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 4834,
											"end": 4894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 4834,
											"end": 4894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4921,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4918,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4912,
											"end": 4922,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 4904,
											"end": 4959,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 4904,
											"end": 4959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 4981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4984,
											"end": 5006,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 5007,
											"end": 5009,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5017,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 4984,
											"end": 5018,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 5018,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4984,
											"end": 5018,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4984,
											"end": 5018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5036,
											"end": 5043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5028,
											"end": 5069,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5028,
											"end": 5069,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5106,
											"end": 5108,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5099,
											"end": 5104,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "ACA8FB252CDE442184E5F10E0F2E6E4029E8CD7717CAE63559079610702436AA"
										},
										{
											"begin": 5110,
											"end": 5116,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5084,
											"end": 5117,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5117,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4758,
											"end": 5124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 997,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "1226"
										},
										{
											"begin": 986,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 986,
											"end": 997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2779,
											"end": 2783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2816,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2824,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2802,
											"end": 2825,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1934,
											"end": 1942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1934,
											"end": 1944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1934,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1934,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 1951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 627,
											"end": 651,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2587,
											"end": 2589,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2581,
											"end": 2598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2581,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 1769,
											"end": 1775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 1769,
											"end": 1777,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1777,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 1769,
											"end": 1777,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1711,
											"end": 1784,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1711,
											"end": 1784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3432,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3446,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3417,
											"end": 3487,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3417,
											"end": 3487,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3523,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3519,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3560,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D"
										},
										{
											"begin": 3569,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3543,
											"end": 3575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3575,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 589,
											"end": 651,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 589,
											"end": 651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 627,
											"end": 651,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 589,
											"end": 651,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 589,
											"end": 651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3057,
											"end": 3058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3038,
											"end": 3059,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3038,
											"end": 3045,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3038,
											"end": 3059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3038,
											"end": 3059,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3038,
											"end": 3059,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 3030,
											"end": 3097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 3030,
											"end": 3097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3107,
											"end": 3121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3129,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F93F9A76C1BF3444D22400A00CB9FE990E6ABE9DBB333FDA48859CFEE864543D"
										},
										{
											"begin": 3178,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3152,
											"end": 3183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3183,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 658,
											"end": 720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 658,
											"end": 720,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 658,
											"end": 720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2202,
											"end": 2208,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2202,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2202,
											"end": 2222,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2194,
											"end": 2256,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2194,
											"end": 2256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2266,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 627,
											"end": 651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2290,
											"end": 2296,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2266,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2266,
											"end": 2297,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2266,
											"end": 2297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 2266,
											"end": 2297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2266,
											"end": 2297,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2111,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2252,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 4252,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 3710,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 3838,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3846,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3838,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 4206,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3834,
											"end": 4206,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3876,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3896,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 3883,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3897,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3911,
											"end": 3925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3943,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3944,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3928,
											"end": 3944,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3930,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3944,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3928,
											"end": 3944,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3944,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3911,
											"end": 3944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3911,
											"end": 3944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3958,
											"end": 3984,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4001,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4029,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4029,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3987,
											"end": 4029,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4029,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3987,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3958,
											"end": 4029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3958,
											"end": 4029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4077,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4115,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4068,
											"end": 4115,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4115,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4094,
											"end": 4115,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4115,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4068,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4043,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4043,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 4206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 4206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 4206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 4206,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3834,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4215,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4229,
											"end": 4233,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4235,
											"end": 4237,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4215,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4215,
											"end": 4245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4215,
											"end": 4245,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4215,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3710,
											"end": 4252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3710,
											"end": 4252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3710,
											"end": 4252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3710,
											"end": 4252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 1144,
											"end": 1148,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 1130,
											"end": 1160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1179,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1171,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 1171,
											"end": 1401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 1229,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1229,
											"end": 1234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1265,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1278,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 1265,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1248,
											"end": 1278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1314,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1364,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 1341,
											"end": 1376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1171,
											"end": 1401,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 1171,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4822,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 4203,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4294,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4347,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4333,
											"end": 4342,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4324,
											"end": 4331,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4320,
											"end": 4343,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4348,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4432,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 4313,
											"end": 4432,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 4351,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 4351,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4430,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 4351,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4432,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 4313,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 4541,
											"end": 4548,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4521,
											"end": 4530,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4517,
											"end": 4539,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4496,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4496,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4496,
											"end": 4549,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 4496,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4486,
											"end": 4549,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4486,
											"end": 4549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4442,
											"end": 4559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4600,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4624,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 4669,
											"end": 4676,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4649,
											"end": 4658,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4645,
											"end": 4667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4624,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4677,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 4624,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4677,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4726,
											"end": 4728,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4752,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 4797,
											"end": 4804,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4777,
											"end": 4786,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4773,
											"end": 4795,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4752,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 4752,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4752,
											"end": 4805,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 4752,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4742,
											"end": 4805,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4742,
											"end": 4805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4697,
											"end": 4815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4822,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4822,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4822,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4828,
											"end": 4946,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 4828,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4915,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 4933,
											"end": 4938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4915,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 4915,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4915,
											"end": 4939,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 4915,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4910,
											"end": 4913,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 4940,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4828,
											"end": 4946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4828,
											"end": 4946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4828,
											"end": 4946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 5174,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4952,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5045,
											"end": 5049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5083,
											"end": 5085,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5072,
											"end": 5081,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5068,
											"end": 5086,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5086,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5096,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 5164,
											"end": 5165,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5162,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5096,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 5096,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5096,
											"end": 5167,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 5096,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 5174,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 5174,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 5174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 5174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5217,
											"end": 5224,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5180,
											"end": 5257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 5336,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5326,
											"end": 5361,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 5491,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5642,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5650,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5838,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5795,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5741,
											"end": 5858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 5958,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5946,
											"end": 5983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6192,
											"end": 6209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 6139,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6327,
											"end": 6334,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6323,
											"end": 6346,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6351,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 6354,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6474,
											"end": 6475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 6499,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6445,
											"end": 6562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6771,
											"end": 6776,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 6894,
											"end": 6899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 6878,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6873,
											"end": 6876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6866,
											"end": 6901,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 7053,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6913,
											"end": 7127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7238,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7220,
											"end": 7227,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7212,
											"end": 7244,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 7247,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 7392,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7338,
											"end": 7455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7536,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7595,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7572,
											"end": 7579,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7568,
											"end": 7591,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7564,
											"end": 7596,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 7599,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7719,
											"end": 7720,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7769,
											"end": 7778,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7765,
											"end": 7787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 7744,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7846,
											"end": 7848,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 7917,
											"end": 7924,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7893,
											"end": 7915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 7872,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7817,
											"end": 7935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7996,
											"end": 8073,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7993,
											"end": 7994,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8074,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8093,
											"end": 8097,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8083,
											"end": 8098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8117,
											"end": 8121,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8114,
											"end": 8115,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8107,
											"end": 8122,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8205,
											"end": 8217,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8256,
											"end": 8260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8252,
											"end": 8264,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8343,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8401,
											"end": 8403,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8404,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8405,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 8420,
											"end": 8438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8185,
											"end": 8454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8637,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 8460,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8600,
											"end": 8629,
											"name": "PUSH",
											"source": 12,
											"value": "63616E6E6F742073656E6420746F207A65726F20616464726573730000000000"
										},
										{
											"begin": 8596,
											"end": 8597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8594,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8577,
											"end": 8630,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8643,
											"end": 9009,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8643,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8785,
											"end": 8788,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 8870,
											"end": 8872,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 8865,
											"end": 8868,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8806,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 8806,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8806,
											"end": 8873,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 8806,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8799,
											"end": 8873,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8799,
											"end": 8873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8882,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 8971,
											"end": 8974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8882,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 8882,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8882,
											"end": 8975,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 8882,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9000,
											"end": 9002,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8995,
											"end": 8998,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8991,
											"end": 9003,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8984,
											"end": 9003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8984,
											"end": 9003,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8643,
											"end": 9009,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8643,
											"end": 9009,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8643,
											"end": 9009,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8643,
											"end": 9009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9434,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 9015,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9219,
											"end": 9221,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9208,
											"end": 9217,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9196,
											"end": 9222,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9196,
											"end": 9222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9277,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9258,
											"end": 9278,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9254,
											"end": 9255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9243,
											"end": 9252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9239,
											"end": 9256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9232,
											"end": 9279,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9296,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 9422,
											"end": 9426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9296,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 9296,
											"end": 9427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9296,
											"end": 9427,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 9296,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9288,
											"end": 9427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9288,
											"end": 9427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9434,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9618,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 9440,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9580,
											"end": 9610,
											"name": "PUSH",
											"source": 12,
											"value": "746F6B656E20616464726573732063616E6E6F74206265207A65726F00000000"
										},
										{
											"begin": 9576,
											"end": 9577,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9574,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9557,
											"end": 9611,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9990,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 9624,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9766,
											"end": 9769,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9787,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 9851,
											"end": 9853,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 9846,
											"end": 9849,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9787,
											"end": 9854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9854,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 9787,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9780,
											"end": 9854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9780,
											"end": 9854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 9952,
											"end": 9955,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 9863,
											"end": 9956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9863,
											"end": 9956,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 9863,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9981,
											"end": 9983,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9976,
											"end": 9979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9965,
											"end": 9984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9965,
											"end": 9984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10415,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 9996,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10162,
											"end": 10166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10200,
											"end": 10202,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10189,
											"end": 10198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10203,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10249,
											"end": 10258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10243,
											"end": 10247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10239,
											"end": 10259,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10235,
											"end": 10236,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10224,
											"end": 10233,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10220,
											"end": 10237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10260,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10277,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 10403,
											"end": 10407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10277,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 10277,
											"end": 10408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10277,
											"end": 10408,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 10277,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10269,
											"end": 10408,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10269,
											"end": 10408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10415,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9996,
											"end": 10415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10421,
											"end": 10603,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 10421,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10561,
											"end": 10595,
											"name": "PUSH",
											"source": 12,
											"value": "616D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 10557,
											"end": 10558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10545,
											"end": 10559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10538,
											"end": 10596,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10421,
											"end": 10603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10421,
											"end": 10603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10975,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 10609,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 10836,
											"end": 10838,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10831,
											"end": 10834,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10772,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 10772,
											"end": 10839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10772,
											"end": 10839,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 10772,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10765,
											"end": 10839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10765,
											"end": 10839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10848,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 10937,
											"end": 10940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10848,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 10848,
											"end": 10941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10848,
											"end": 10941,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 10848,
											"end": 10941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10966,
											"end": 10968,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10961,
											"end": 10964,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10957,
											"end": 10969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10950,
											"end": 10969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10950,
											"end": 10969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10975,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10609,
											"end": 10975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10981,
											"end": 11400,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 10981,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11185,
											"end": 11187,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11174,
											"end": 11183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11170,
											"end": 11188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11162,
											"end": 11188,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11162,
											"end": 11188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11234,
											"end": 11243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11228,
											"end": 11232,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11224,
											"end": 11244,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11220,
											"end": 11221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11209,
											"end": 11218,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11205,
											"end": 11222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11198,
											"end": 11245,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11262,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 11388,
											"end": 11392,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11262,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 11262,
											"end": 11393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11262,
											"end": 11393,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 11262,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11254,
											"end": 11393,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11254,
											"end": 11393,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10981,
											"end": 11400,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10981,
											"end": 11400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10981,
											"end": 11400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10981,
											"end": 11400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11406,
											"end": 11524,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 11406,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 11511,
											"end": 11516,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 11493,
											"end": 11517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11517,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 11493,
											"end": 11517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11481,
											"end": 11518,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11406,
											"end": 11524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11406,
											"end": 11524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11406,
											"end": 11524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11862,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 11530,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11651,
											"end": 11655,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11691,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11678,
											"end": 11687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11692,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11666,
											"end": 11692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11666,
											"end": 11692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11702,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 11770,
											"end": 11771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11759,
											"end": 11768,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11755,
											"end": 11772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11752,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11702,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 11702,
											"end": 11773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11702,
											"end": 11773,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 11702,
											"end": 11773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11783,
											"end": 11855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 11851,
											"end": 11853,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11840,
											"end": 11849,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11836,
											"end": 11854,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11827,
											"end": 11833,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11783,
											"end": 11855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 11783,
											"end": 11855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11783,
											"end": 11855,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 11783,
											"end": 11855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11862,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11862,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11868,
											"end": 11984,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 11868,
											"end": 11984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 11953,
											"end": 11958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 11938,
											"end": 11959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11959,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 11938,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11931,
											"end": 11936,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11928,
											"end": 11960,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11918,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 11918,
											"end": 11978,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 11975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11972,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 11976,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11918,
											"end": 11978,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 11918,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11868,
											"end": 11984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11868,
											"end": 11984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11990,
											"end": 12127,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 11990,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12044,
											"end": 12049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12069,
											"end": 12082,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 12115,
											"end": 12120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 12091,
											"end": 12121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11990,
											"end": 12127,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11990,
											"end": 12127,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11990,
											"end": 12127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11990,
											"end": 12127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11990,
											"end": 12127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12133,
											"end": 12478,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 12133,
											"end": 12478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12200,
											"end": 12206,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12249,
											"end": 12251,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12237,
											"end": 12246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12228,
											"end": 12235,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12224,
											"end": 12247,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12220,
											"end": 12252,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12336,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 12217,
											"end": 12336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12255,
											"end": 12334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 12255,
											"end": 12334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 12255,
											"end": 12334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12255,
											"end": 12334,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 12255,
											"end": 12334,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12336,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 12217,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12375,
											"end": 12376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12400,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 12453,
											"end": 12460,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12444,
											"end": 12450,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12451,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12400,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 12400,
											"end": 12461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12400,
											"end": 12461,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 12400,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12390,
											"end": 12461,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12390,
											"end": 12461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12346,
											"end": 12471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12133,
											"end": 12478,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12133,
											"end": 12478,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12133,
											"end": 12478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12133,
											"end": 12478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12133,
											"end": 12478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12484,
											"end": 12655,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12484,
											"end": 12655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12647,
											"name": "PUSH",
											"source": 12,
											"value": "4552433230207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 12620,
											"end": 12621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12612,
											"end": 12618,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12608,
											"end": 12622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12601,
											"end": 12648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12484,
											"end": 12655,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12484,
											"end": 12655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12661,
											"end": 13027,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 12661,
											"end": 13027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 12806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12824,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 12888,
											"end": 12890,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 12883,
											"end": 12886,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12824,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12824,
											"end": 12891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12824,
											"end": 12891,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 12824,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12817,
											"end": 12891,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12817,
											"end": 12891,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12900,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 12989,
											"end": 12992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12900,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12900,
											"end": 12993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12900,
											"end": 12993,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 12900,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13018,
											"end": 13020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13013,
											"end": 13016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13009,
											"end": 13021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13002,
											"end": 13021,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13002,
											"end": 13021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12661,
											"end": 13027,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12661,
											"end": 13027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12661,
											"end": 13027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12661,
											"end": 13027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13033,
											"end": 13452,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 13033,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13237,
											"end": 13239,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13226,
											"end": 13235,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13222,
											"end": 13240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13214,
											"end": 13240,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13214,
											"end": 13240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13286,
											"end": 13295,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13280,
											"end": 13284,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13276,
											"end": 13296,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13272,
											"end": 13273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13261,
											"end": 13270,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13257,
											"end": 13274,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13250,
											"end": 13297,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13314,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 13440,
											"end": 13444,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13314,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 13314,
											"end": 13445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13314,
											"end": 13445,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 13314,
											"end": 13445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13306,
											"end": 13445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13306,
											"end": 13445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13033,
											"end": 13452,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13033,
											"end": 13452,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13033,
											"end": 13452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13033,
											"end": 13452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13458,
											"end": 13681,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 13458,
											"end": 13681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13598,
											"end": 13632,
											"name": "PUSH",
											"source": 12,
											"value": "63616E6E6F7420756E2D77686974656C69737420746865207A65726F20616464"
										},
										{
											"begin": 13594,
											"end": 13595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13586,
											"end": 13592,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13596,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13575,
											"end": 13633,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13667,
											"end": 13673,
											"name": "PUSH",
											"source": 12,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13662,
											"end": 13664,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13654,
											"end": 13660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13650,
											"end": 13665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13643,
											"end": 13674,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13458,
											"end": 13681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13458,
											"end": 13681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 14053,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 13687,
											"end": 14053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13829,
											"end": 13832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13850,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 13914,
											"end": 13916,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13909,
											"end": 13912,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13850,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 13850,
											"end": 13917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13850,
											"end": 13917,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 13850,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13843,
											"end": 13917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13843,
											"end": 13917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13926,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 14015,
											"end": 14018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13926,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 13926,
											"end": 14019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13926,
											"end": 14019,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 13926,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14044,
											"end": 14046,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14039,
											"end": 14042,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14035,
											"end": 14047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 14053,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 14053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 14053,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 14053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14478,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 14059,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14225,
											"end": 14229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14263,
											"end": 14265,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14252,
											"end": 14261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14240,
											"end": 14266,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14240,
											"end": 14266,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14312,
											"end": 14321,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14306,
											"end": 14310,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14302,
											"end": 14322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14298,
											"end": 14299,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14287,
											"end": 14296,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14283,
											"end": 14300,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14276,
											"end": 14323,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14340,
											"end": 14471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 14466,
											"end": 14470,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14340,
											"end": 14471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 14340,
											"end": 14471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14340,
											"end": 14471,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 14340,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14332,
											"end": 14471,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14332,
											"end": 14471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14478,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14704,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 14484,
											"end": 14704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14624,
											"end": 14658,
											"name": "PUSH",
											"source": 12,
											"value": "63616E6E6F742077686974656C69737420746865207A65726F20616464726573"
										},
										{
											"begin": 14620,
											"end": 14621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14612,
											"end": 14618,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14608,
											"end": 14622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14601,
											"end": 14659,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 14696,
											"name": "PUSH",
											"source": 12,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14688,
											"end": 14690,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14680,
											"end": 14686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14676,
											"end": 14691,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14669,
											"end": 14697,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15076,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 14710,
											"end": 15076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14852,
											"end": 14855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14873,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 14937,
											"end": 14939,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 14932,
											"end": 14935,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14873,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 14873,
											"end": 14940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14873,
											"end": 14940,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 14873,
											"end": 14940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14866,
											"end": 14940,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14866,
											"end": 14940,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14949,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 15038,
											"end": 15041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14949,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 14949,
											"end": 15042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14949,
											"end": 15042,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 14949,
											"end": 15042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15067,
											"end": 15069,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15062,
											"end": 15065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15070,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15051,
											"end": 15070,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15051,
											"end": 15070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15076,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15082,
											"end": 15501,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 15082,
											"end": 15501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15248,
											"end": 15252,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 15288,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15275,
											"end": 15284,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15263,
											"end": 15289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15263,
											"end": 15289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15335,
											"end": 15344,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15329,
											"end": 15333,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15325,
											"end": 15345,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15310,
											"end": 15319,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15306,
											"end": 15323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15363,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 15489,
											"end": 15493,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15363,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 15363,
											"end": 15494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15363,
											"end": 15494,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 15363,
											"end": 15494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15355,
											"end": 15494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15355,
											"end": 15494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15082,
											"end": 15501,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15082,
											"end": 15501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15082,
											"end": 15501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15082,
											"end": 15501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15507,
											"end": 15686,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 15507,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15647,
											"end": 15678,
											"name": "PUSH",
											"source": 12,
											"value": "4D696E7465722063616E6E6F74206265207A65726F2061646472657373000000"
										},
										{
											"begin": 15643,
											"end": 15644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15635,
											"end": 15641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15631,
											"end": 15645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15679,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15507,
											"end": 15686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15507,
											"end": 15686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15834,
											"end": 15837,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15855,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 15919,
											"end": 15921,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 15914,
											"end": 15917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15855,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 15855,
											"end": 15922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15855,
											"end": 15922,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 15855,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15922,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15931,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 16020,
											"end": 16023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15931,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 15931,
											"end": 16024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15931,
											"end": 16024,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 15931,
											"end": 16024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16049,
											"end": 16051,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16044,
											"end": 16047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16040,
											"end": 16052,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16033,
											"end": 16052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16033,
											"end": 16052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15692,
											"end": 16058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16230,
											"end": 16234,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16268,
											"end": 16270,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16257,
											"end": 16266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16253,
											"end": 16271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16245,
											"end": 16271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16245,
											"end": 16271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16317,
											"end": 16326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16311,
											"end": 16315,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16303,
											"end": 16304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16292,
											"end": 16301,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16288,
											"end": 16305,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16281,
											"end": 16328,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16471,
											"end": 16475,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 16345,
											"end": 16476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16476,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16345,
											"end": 16476,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16337,
											"end": 16476,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16337,
											"end": 16476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16064,
											"end": 16483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16931,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 16489,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16638,
											"end": 16642,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16676,
											"end": 16678,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16665,
											"end": 16674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16661,
											"end": 16679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16653,
											"end": 16679,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16653,
											"end": 16679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 16757,
											"end": 16758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16746,
											"end": 16755,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16742,
											"end": 16759,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16733,
											"end": 16739,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 16689,
											"end": 16760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16689,
											"end": 16760,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 16689,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16770,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 16838,
											"end": 16840,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16827,
											"end": 16836,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16823,
											"end": 16841,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16814,
											"end": 16820,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16770,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 16770,
											"end": 16842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16770,
											"end": 16842,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 16770,
											"end": 16842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16852,
											"end": 16924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 16920,
											"end": 16922,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16909,
											"end": 16918,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16905,
											"end": 16923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16896,
											"end": 16902,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16852,
											"end": 16924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 16852,
											"end": 16924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16852,
											"end": 16924,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 16852,
											"end": 16924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16931,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16931,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16937,
											"end": 17159,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 16937,
											"end": 17159,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17034,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17070,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17057,
											"end": 17066,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17053,
											"end": 17071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17045,
											"end": 17071,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17045,
											"end": 17071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17081,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 17149,
											"end": 17150,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17147,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17134,
											"end": 17151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17125,
											"end": 17131,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17081,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 17081,
											"end": 17152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17081,
											"end": 17152,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 17081,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16937,
											"end": 17159,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16937,
											"end": 17159,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16937,
											"end": 17159,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16937,
											"end": 17159,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16937,
											"end": 17159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17165,
											"end": 17497,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 17165,
											"end": 17497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17286,
											"end": 17290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17324,
											"end": 17326,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17313,
											"end": 17322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17309,
											"end": 17327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17301,
											"end": 17327,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17301,
											"end": 17327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17337,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 17405,
											"end": 17406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17394,
											"end": 17403,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17390,
											"end": 17407,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17337,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 17337,
											"end": 17408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17337,
											"end": 17408,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 17337,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17418,
											"end": 17490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 17486,
											"end": 17488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17475,
											"end": 17484,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17471,
											"end": 17489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17462,
											"end": 17468,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17418,
											"end": 17490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 17418,
											"end": 17490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17418,
											"end": 17490,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 17418,
											"end": 17490,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17165,
											"end": 17497,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17165,
											"end": 17497,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17165,
											"end": 17497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17165,
											"end": 17497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17165,
											"end": 17497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17165,
											"end": 17497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17503,
											"end": 17736,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 17503,
											"end": 17736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17643,
											"end": 17677,
											"name": "PUSH",
											"source": 12,
											"value": "546F6B656E3A207472616E73666572207768696C652070617573656420286E6F"
										},
										{
											"begin": 17639,
											"end": 17640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17631,
											"end": 17637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17627,
											"end": 17641,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17620,
											"end": 17678,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17712,
											"end": 17728,
											"name": "PUSH",
											"source": 12,
											"value": "742077686974656C697374656429000000000000000000000000000000000000"
										},
										{
											"begin": 17707,
											"end": 17709,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17699,
											"end": 17705,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17688,
											"end": 17729,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17503,
											"end": 17736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17503,
											"end": 17736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 18108,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 17742,
											"end": 18108,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17884,
											"end": 17887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17905,
											"end": 17972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 17969,
											"end": 17971,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 17964,
											"end": 17967,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17905,
											"end": 17972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 17905,
											"end": 17972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17905,
											"end": 17972,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 17905,
											"end": 17972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17898,
											"end": 17972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17898,
											"end": 17972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17981,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 18070,
											"end": 18073,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17981,
											"end": 18074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 17981,
											"end": 18074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17981,
											"end": 18074,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 17981,
											"end": 18074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18099,
											"end": 18101,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18094,
											"end": 18097,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18090,
											"end": 18102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18083,
											"end": 18102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18083,
											"end": 18102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 18108,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 18108,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 18108,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 18108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18114,
											"end": 18533,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 18114,
											"end": 18533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18280,
											"end": 18284,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18318,
											"end": 18320,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18307,
											"end": 18316,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18303,
											"end": 18321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18295,
											"end": 18321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18295,
											"end": 18321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18367,
											"end": 18376,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18361,
											"end": 18365,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18357,
											"end": 18377,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18353,
											"end": 18354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18342,
											"end": 18351,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18338,
											"end": 18355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18331,
											"end": 18378,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18395,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 18521,
											"end": 18525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18395,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 18395,
											"end": 18526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18395,
											"end": 18526,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 18395,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18387,
											"end": 18526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18387,
											"end": 18526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18114,
											"end": 18533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18114,
											"end": 18533,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18114,
											"end": 18533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18114,
											"end": 18533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18539,
											"end": 18709,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 18539,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18701,
											"name": "PUSH",
											"source": 12,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 18675,
											"end": 18676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18667,
											"end": 18673,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 18677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18656,
											"end": 18702,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18539,
											"end": 18709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18539,
											"end": 18709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18857,
											"end": 18860,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18878,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 18942,
											"end": 18944,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 18937,
											"end": 18940,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18878,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 18878,
											"end": 18945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18878,
											"end": 18945,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 18878,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18871,
											"end": 18945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18871,
											"end": 18945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18954,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 19043,
											"end": 19046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18954,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 18954,
											"end": 19047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18954,
											"end": 19047,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 18954,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19072,
											"end": 19074,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19067,
											"end": 19070,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19063,
											"end": 19075,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19056,
											"end": 19075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19056,
											"end": 19075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18715,
											"end": 19081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19253,
											"end": 19257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19291,
											"end": 19293,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19280,
											"end": 19289,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19276,
											"end": 19294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19268,
											"end": 19294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19268,
											"end": 19294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19340,
											"end": 19349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19334,
											"end": 19338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19330,
											"end": 19350,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19326,
											"end": 19327,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19315,
											"end": 19324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19311,
											"end": 19328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19304,
											"end": 19351,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19368,
											"end": 19499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 19494,
											"end": 19498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19368,
											"end": 19499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 19368,
											"end": 19499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19368,
											"end": 19499,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 19368,
											"end": 19499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19360,
											"end": 19499,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19360,
											"end": 19499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19087,
											"end": 19506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19512,
											"end": 19678,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 19512,
											"end": 19678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19652,
											"end": 19670,
											"name": "PUSH",
											"source": 12,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 19648,
											"end": 19649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19640,
											"end": 19646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19636,
											"end": 19650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19629,
											"end": 19671,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19512,
											"end": 19678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19512,
											"end": 19678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19684,
											"end": 20050,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 19684,
											"end": 20050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19826,
											"end": 19829,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19847,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 19911,
											"end": 19913,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 19906,
											"end": 19909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19847,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 19847,
											"end": 19914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19847,
											"end": 19914,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 19847,
											"end": 19914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19840,
											"end": 19914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19840,
											"end": 19914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19923,
											"end": 20016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 20012,
											"end": 20015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19923,
											"end": 20016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 19923,
											"end": 20016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19923,
											"end": 20016,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 19923,
											"end": 20016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20041,
											"end": 20043,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20036,
											"end": 20039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20032,
											"end": 20044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20025,
											"end": 20044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20025,
											"end": 20044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19684,
											"end": 20050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19684,
											"end": 20050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19684,
											"end": 20050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19684,
											"end": 20050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20056,
											"end": 20475,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 20056,
											"end": 20475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20222,
											"end": 20226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20260,
											"end": 20262,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20249,
											"end": 20258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20245,
											"end": 20263,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20237,
											"end": 20263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20237,
											"end": 20263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20309,
											"end": 20318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20303,
											"end": 20307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20299,
											"end": 20319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20295,
											"end": 20296,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20284,
											"end": 20293,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20280,
											"end": 20297,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20273,
											"end": 20320,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20337,
											"end": 20468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 20463,
											"end": 20467,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20337,
											"end": 20468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 20337,
											"end": 20468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20337,
											"end": 20468,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 20337,
											"end": 20468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20329,
											"end": 20468,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20329,
											"end": 20468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20056,
											"end": 20475,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20056,
											"end": 20475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20056,
											"end": 20475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20056,
											"end": 20475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20481,
											"end": 20813,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 20481,
											"end": 20813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 20606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20640,
											"end": 20642,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20629,
											"end": 20638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20625,
											"end": 20643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20617,
											"end": 20643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20617,
											"end": 20643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20653,
											"end": 20724,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 20721,
											"end": 20722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20710,
											"end": 20719,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20706,
											"end": 20723,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20697,
											"end": 20703,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20653,
											"end": 20724,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 20653,
											"end": 20724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20653,
											"end": 20724,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 20653,
											"end": 20724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20734,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 20802,
											"end": 20804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20791,
											"end": 20800,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20787,
											"end": 20805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20778,
											"end": 20784,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20734,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 20734,
											"end": 20806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20734,
											"end": 20806,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 20734,
											"end": 20806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20481,
											"end": 20813,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20481,
											"end": 20813,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20481,
											"end": 20813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20481,
											"end": 20813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20481,
											"end": 20813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20481,
											"end": 20813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20819,
											"end": 20999,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 20819,
											"end": 20999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20867,
											"end": 20944,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20864,
											"end": 20865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20857,
											"end": 20945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20964,
											"end": 20968,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 20961,
											"end": 20962,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20954,
											"end": 20969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20988,
											"end": 20992,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20985,
											"end": 20986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20978,
											"end": 20993,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21005,
											"end": 21196,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 21005,
											"end": 21196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21045,
											"end": 21048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21064,
											"end": 21084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 21082,
											"end": 21083,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21064,
											"end": 21084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 21064,
											"end": 21084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21064,
											"end": 21084,
											"name": "tag",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 21064,
											"end": 21084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21059,
											"end": 21084,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21059,
											"end": 21084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21098,
											"end": 21118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 21116,
											"end": 21117,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21098,
											"end": 21118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 21098,
											"end": 21118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21098,
											"end": 21118,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 21098,
											"end": 21118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21093,
											"end": 21118,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21093,
											"end": 21118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21141,
											"end": 21142,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21138,
											"end": 21139,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21134,
											"end": 21143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21127,
											"end": 21143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21127,
											"end": 21143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21162,
											"end": 21165,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21159,
											"end": 21160,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21156,
											"end": 21166,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 21153,
											"end": 21189,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21153,
											"end": 21189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 21153,
											"end": 21189,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21169,
											"end": 21187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 21169,
											"end": 21187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 21169,
											"end": 21187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21169,
											"end": 21187,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 21169,
											"end": 21187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21153,
											"end": 21189,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 21153,
											"end": 21189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21005,
											"end": 21196,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21005,
											"end": 21196,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21005,
											"end": 21196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21005,
											"end": 21196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21005,
											"end": 21196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ub.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"addToWhitelist(address)": "e43252d7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isWhitelisted(address)": "3af32abf",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"recoverERC20(address,address,uint256)": "1171bda9",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setMinter(address)": "fca3b5aa",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"WhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"ERC20Recovered(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to recover.\",\"to\":\"The address to receive the recovered tokens.\",\"token\":\"The address of the ERC20 token contract.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addToWhitelist(address)\":{\"params\":{\"account\":\"The address to add to the whitelist.\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"params\":{\"admin\":\"The address to be set as the default admin of the token.\",\"cap\":\"The maximum total supply of the token (e.g., for 1 million tokens with 18 decimals, pass 1000000 * 10**18).\",\"name\":\"The name of the token.\",\"pauser\":\"The address to be set as the pauser\",\"symbol\":\"The symbol of the token.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isWhitelisted(address)\":{\"params\":{\"account\":\"The address to check.\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address that will receive the minted tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeFromWhitelist(address)\":{\"params\":{\"account\":\"The address to remove from the whitelist.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setMinter(address)\":{\"params\":{\"minter\":\"The address to be granted the MINTER_ROLE.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"Unibase Token Contract\",\"version\":1},\"userdoc\":{\"events\":{\"ERC20Recovered(address,address,uint256)\":{\"notice\":\"Recover ERC20 tokens mistakenly sent to this contract.\"}},\"kind\":\"user\",\"methods\":{\"addToWhitelist(address)\":{\"notice\":\"Adds an address to the whitelist.\"},\"constructor\":{\"notice\":\"Initializes the contract.\"},\"isWhitelisted(address)\":{\"notice\":\"Returns true if the account is whitelisted.\"},\"mint(address,uint256)\":{\"notice\":\"Allows the minter to mint new tokens, up to the cap.\"},\"pause()\":{\"notice\":\"Allows the pause controller address to pause all token transfers for non-whitelisted addresses.\"},\"removeFromWhitelist(address)\":{\"notice\":\"Removes an address from the whitelist.\"},\"setMinter(address)\":{\"notice\":\"Set the minter address by granting MINTER_ROLE to the specified address.\"},\"unpause()\":{\"notice\":\"Allows the pause controller address to unpause the token transfers.\"}},\"notice\":\"Implements an ERC20 token with a cap, pausability, ownership, and a whitelist feature.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ub.sol\":\"Unibase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0xf1c07010528cdb891c75866dd44cf5cd856573457127ec38a522ca748407a340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://266a5704d812997c9e057e50787694ca29c1a3ddd76962af1061c11ed424c7e2\",\"dweb:/ipfs/QmaVTZBgUEWFo4ePF6v7NwoRSLbYBdLQ5XbRkgGFBfPpxa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/ub.sol\":{\"keccak256\":\"0x81bd7393e88ec1afad4080105b5d2a8cde8b7c75ca92282069a20140d7775ede\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://812917444580b4a0141e15035385177390a12ee5d6a41e6b849d1eda304c6713\",\"dweb:/ipfs/QmW6DgbKyNe8C7tXXpouTFoTQNUJmjwEkqNAnPHPYGGyNd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 534,
								"contract": "contracts/ub.sol:Unibase",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 647,
								"contract": "contracts/ub.sol:Unibase",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 653,
								"contract": "contracts/ub.sol:Unibase",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 655,
								"contract": "contracts/ub.sol:Unibase",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 657,
								"contract": "contracts/ub.sol:Unibase",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 659,
								"contract": "contracts/ub.sol:Unibase",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/ub.sol:Unibase",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 1440,
								"contract": "contracts/ub.sol:Unibase",
								"label": "_isWhitelisted",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "contracts/ub.sol:Unibase",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "contracts/ub.sol:Unibase",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ERC20Recovered(address,address,uint256)": {
								"notice": "Recover ERC20 tokens mistakenly sent to this contract."
							}
						},
						"kind": "user",
						"methods": {
							"addToWhitelist(address)": {
								"notice": "Adds an address to the whitelist."
							},
							"constructor": {
								"notice": "Initializes the contract."
							},
							"isWhitelisted(address)": {
								"notice": "Returns true if the account is whitelisted."
							},
							"mint(address,uint256)": {
								"notice": "Allows the minter to mint new tokens, up to the cap."
							},
							"pause()": {
								"notice": "Allows the pause controller address to pause all token transfers for non-whitelisted addresses."
							},
							"removeFromWhitelist(address)": {
								"notice": "Removes an address from the whitelist."
							},
							"setMinter(address)": {
								"notice": "Set the minter address by granting MINTER_ROLE to the specified address."
							},
							"unpause()": {
								"notice": "Allows the pause controller address to unpause the token transfers."
							}
						},
						"notice": "Implements an ERC20 token with a cap, pausability, ownership, and a whitelist feature.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1372
						],
						"ERC165": [
							1396
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1408
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1373,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1372,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1397,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1408,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1396,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1372,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1396,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1396,
								1408,
								379,
								1372
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1395
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1395,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1354,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1354,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							516
						],
						"IERC20Errors": [
							421
						],
						"IERC721Errors": [
							469
						]
					},
					"id": 517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 382,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 421,
							"linearizedBaseContracts": [
								421
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 391,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 396,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 401,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 410,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 415,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 420,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 517,
							"src": "280:1764:2",
							"usedErrors": [
								391,
								396,
								401,
								410,
								415,
								420
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 422,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 469,
							"linearizedBaseContracts": [
								469
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 427,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 432,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 441,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 446,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 451,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 458,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 463,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 468,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 517,
							"src": "2190:2092:2",
							"usedErrors": [
								427,
								432,
								441,
								446,
								451,
								458,
								463,
								468
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 470,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 516,
							"linearizedBaseContracts": [
								516
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 481,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 486,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 491,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 498,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 503,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 508,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 515,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 517,
							"src": "4430:2107:2",
							"usedErrors": [
								481,
								486,
								491,
								498,
								503,
								508,
								515
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1372
						],
						"Pausable": [
							624
						]
					},
					"id": 625,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 625,
							"sourceUnit": 1373,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 521,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1372,
										"src": "632:7:3"
									},
									"id": 522,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 520,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 624,
							"linearizedBaseContracts": [
								624,
								1372
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 527,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 532,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 534,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 624,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 533,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 538,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 543,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 624,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 546,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 549,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 551,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 554,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 557,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 559,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 565,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 534,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 564,
												"id": 566,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 624,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 573,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 624,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 624,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 597,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 602,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 601,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 595,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 594,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 551,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 624,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 613,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 618,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 617,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 610,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 559,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 624,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 625,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								527,
								532
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1372
						],
						"ERC20": [
							1139
						],
						"IERC20": [
							1217
						],
						"IERC20Errors": [
							421
						],
						"IERC20Metadata": [
							1342
						]
					},
					"id": 1140,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 626,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 628,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 1218,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 627,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1217,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 630,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 1343,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 629,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1342,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 632,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 1373,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 631,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1372,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 517,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 421,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 636,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1372,
										"src": "1133:7:4"
									},
									"id": 637,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 638,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1217,
										"src": "1142:6:4"
									},
									"id": 639,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 640,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1342,
										"src": "1150:14:4"
									},
									"id": 641,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 642,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "1166:12:4"
									},
									"id": 643,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 635,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1139,
							"linearizedBaseContracts": [
								1139,
								421,
								1342,
								1217,
								1372
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 647,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 646,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 644,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 645,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 653,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 652,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 648,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 651,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 649,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 650,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 655,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 654,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 657,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 656,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 659,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 658,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "1638:57:4",
										"statements": [
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1648:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 668,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1656:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:4"
											},
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 671,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "1671:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 672,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "1681:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:4"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 676,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1594:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 661,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1615:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:4"
									},
									"scope": 1139,
									"src": "1582:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1329
									],
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "1820:29:4",
										"statements": [
											{
												"expression": {
													"id": 682,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "1837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 681,
												"id": 683,
												"nodeType": "Return",
												"src": "1830:12:4"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1805:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:4"
									},
									"scope": 1139,
									"src": "1760:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "2024:31:4",
										"statements": [
											{
												"expression": {
													"id": 691,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 659,
													"src": "2041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 690,
												"id": 692,
												"nodeType": "Return",
												"src": "2034:14:4"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2009:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:4"
									},
									"scope": 1139,
									"src": "1962:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1341
									],
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "2744:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 699,
												"id": 701,
												"nodeType": "Return",
												"src": "2754:9:4"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2737:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 697,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:4"
									},
									"scope": 1139,
									"src": "2688:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1166
									],
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "2864:36:4",
										"statements": [
											{
												"expression": {
													"id": 709,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 655,
													"src": "2881:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 708,
												"id": 710,
												"nodeType": "Return",
												"src": "2874:19:4"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:4",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "2855:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:4"
									},
									"scope": 1139,
									"src": "2803:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1174
									],
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "3007:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 720,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "3024:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 722,
													"indexExpression": {
														"id": 721,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "3034:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 719,
												"id": 723,
												"nodeType": "Return",
												"src": "3017:25:4"
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:4",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "2952:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:4"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "2998:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:4"
									},
									"scope": 1139,
									"src": "2933:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1184
									],
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "3319:103:4",
										"statements": [
											{
												"assignments": [
													736
												],
												"declarations": [
													{
														"constant": false,
														"id": 736,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "3329:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 735,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 737,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "3345:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 741,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "3377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "3384:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "3388:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "3367:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 734,
												"id": 747,
												"nodeType": "Return",
												"src": "3404:11:4"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3262:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3274:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3313:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:4"
									},
									"scope": 1139,
									"src": "3244:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1194
									],
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "3544:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 759,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "3561:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 761,
														"indexExpression": {
															"id": 760,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3573:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 763,
													"indexExpression": {
														"id": 762,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "3580:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 758,
												"id": 764,
												"nodeType": "Return",
												"src": "3554:34:4"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:4",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "3474:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "3489:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "3535:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:4"
									},
									"scope": 1139,
									"src": "3455:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1204
									],
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "3981:107:4",
										"statements": [
											{
												"assignments": [
													777
												],
												"declarations": [
													{
														"constant": false,
														"id": 777,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "3991:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 776,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 778,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "4007:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4038:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "4054:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 781,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1090
														],
														"referencedDeclaration": 1030,
														"src": "4029:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 775,
												"id": 788,
												"nodeType": "Return",
												"src": "4070:11:4"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3919:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3936:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:4"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3975:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:4"
									},
									"scope": 1139,
									"src": "3902:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1216
									],
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "4773:151:4",
										"statements": [
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "4783:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 802,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 804,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "4801:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "4839:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "4845:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "4854:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "4823:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 814,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "4880:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "4886:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "4890:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "4870:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 801,
												"id": 820,
												"nodeType": "Return",
												"src": "4906:11:4"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4702:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4716:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4728:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4767:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:4"
									},
									"scope": 1139,
									"src": "4680:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "5366:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "5380:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 833,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "5376:86:4",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "5400:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 839,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 838,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "5421:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 844,
															"nodeType": "RevertStatement",
															"src": "5414:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 847,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "5475:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 848,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "5471:86:4",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "5493:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 854,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 853,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "5514:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 859,
															"nodeType": "RevertStatement",
															"src": "5507:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "5580:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "5584:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "5566:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:4"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "5342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:4"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:4"
									},
									"scope": 1139,
									"src": "5297:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "5987:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 879,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "6001:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 880,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "6175:362:4",
													"statements": [
														{
															"assignments": [
																891
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 891,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 916,
																	"src": "6189:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 895,
															"initialValue": {
																"baseExpression": {
																	"id": 892,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "6211:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 894,
																"indexExpression": {
																	"id": 893,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "6221:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 896,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "6244:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 897,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "6258:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 906,
															"nodeType": "IfStatement",
															"src": "6240:115:4",
															"trueBody": {
																"id": 905,
																"nodeType": "Block",
																"src": "6265:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 900,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 872,
																					"src": "6315:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 901,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 891,
																					"src": "6321:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 902,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 876,
																					"src": "6334:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 899,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "6290:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 904,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:4"
																	}
																]
															}
														},
														{
															"id": 915,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 907,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "6475:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 909,
																			"indexExpression": {
																				"id": 908,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "6485:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 910,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 891,
																				"src": "6493:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 911,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 876,
																				"src": "6507:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 914,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:4"
																}
															]
														}
													]
												},
												"id": 917,
												"nodeType": "IfStatement",
												"src": "5997:540:4",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "6021:148:4",
													"statements": [
														{
															"expression": {
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 885,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "6137:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 886,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "6153:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "6551:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 919,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 937,
													"nodeType": "Block",
													"src": "6766:206:4",
													"statements": [
														{
															"id": 936,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 930,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "6925:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 932,
																			"indexExpression": {
																				"id": 931,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 874,
																				"src": "6935:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 933,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 876,
																			"src": "6942:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 935,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:4"
																}
															]
														}
													]
												},
												"id": 938,
												"nodeType": "IfStatement",
												"src": "6547:425:4",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "6569:191:4",
													"statements": [
														{
															"id": 928,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 924,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "6714:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 925,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 876,
																			"src": "6730:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 927,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 940,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "6996:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "7002:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "7006:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 939,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "6987:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "EmitStatement",
												"src": "6982:30:4"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5929:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5943:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5955:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:4"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:4"
									},
									"scope": 1139,
									"src": "5912:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "7418:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 954,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "7432:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 955,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "IfStatement",
												"src": "7428:91:4",
												"trueBody": {
													"id": 967,
													"nodeType": "Block",
													"src": "7455:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 961,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 960,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "7476:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 966,
															"nodeType": "RevertStatement",
															"src": "7469:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 970,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "7548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "7557:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 969,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:4"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "7377:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "7394:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:4"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:4"
									},
									"scope": 1139,
									"src": "7362:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "7944:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 987,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "7958:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 988,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1001,
												"nodeType": "IfStatement",
												"src": "7954:89:4",
												"trueBody": {
													"id": 1000,
													"nodeType": "Block",
													"src": "7981:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 994,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 993,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "8002:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 999,
															"nodeType": "RevertStatement",
															"src": "7995:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "8060:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "8081:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "8052:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:4"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "7903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "7920:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:4"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:4"
									},
									"scope": 1139,
									"src": "7888:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "8704:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1023,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "8723:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1024,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "8730:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "8739:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1022,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1090
														],
														"referencedDeclaration": 1090,
														"src": "8714:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:4"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "8648:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "8663:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "8680:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:4"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:4"
									},
									"scope": 1139,
									"src": "8630:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "9703:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "9717:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1056,
												"nodeType": "IfStatement",
												"src": "9713:89:4",
												"trueBody": {
													"id": 1055,
													"nodeType": "Block",
													"src": "9738:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1049,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1048,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "9759:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1054,
															"nodeType": "RevertStatement",
															"src": "9752:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1057,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "9815:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1058,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1071,
												"nodeType": "IfStatement",
												"src": "9811:90:4",
												"trueBody": {
													"id": 1070,
													"nodeType": "Block",
													"src": "9838:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1064,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1063,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "9859:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1069,
															"nodeType": "RevertStatement",
															"src": "9852:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1072,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "9910:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1075,
															"indexExpression": {
																"id": 1073,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "9922:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1076,
														"indexExpression": {
															"id": 1074,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "9929:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1077,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "9940:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:4"
											},
											{
												"condition": {
													"id": 1080,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1039,
													"src": "9959:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1088,
												"nodeType": "IfStatement",
												"src": "9955:76:4",
												"trueBody": {
													"id": 1087,
													"nodeType": "Block",
													"src": "9970:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1082,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "9998:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1083,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "10005:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1084,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "10014:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1081,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "9989:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1086,
															"nodeType": "EmitStatement",
															"src": "9984:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "9623:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "9638:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "9655:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "9670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:4"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:4"
									},
									"scope": 1139,
									"src": "9605:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "10408:387:4",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "10418:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"arguments": [
														{
															"id": 1103,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "10455:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "10462:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1102,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "10445:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1107,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "10484:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1109,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1108,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "10480:309:4",
												"trueBody": {
													"id": 1135,
													"nodeType": "Block",
													"src": "10522:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "10540:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1115,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "10559:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1124,
															"nodeType": "IfStatement",
															"src": "10536:130:4",
															"trueBody": {
																"id": 1123,
																"nodeType": "Block",
																"src": "10566:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1118,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1095,
																					"src": "10618:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1119,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "10627:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1120,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1097,
																					"src": "10645:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1117,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 410,
																				"src": "10591:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1122,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:4"
																	}
																]
															}
														},
														{
															"id": 1134,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1126,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "10716:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1127,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1095,
																				"src": "10723:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1128,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "10732:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1129,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1097,
																					"src": "10751:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1125,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1030,
																				1090
																			],
																			"referencedDeclaration": 1090,
																			"src": "10707:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1133,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:4",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "10344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "10359:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "10376:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:4"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:4"
									},
									"scope": 1139,
									"src": "10319:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1140,
							"src": "1106:9691:4",
							"usedErrors": [
								391,
								396,
								401,
								410,
								415,
								420
							],
							"usedEvents": [
								1151,
								1160
							]
						}
					],
					"src": "105:10693:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1217
						]
					},
					"id": 1218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1141,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1142,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1217,
							"linearizedBaseContracts": [
								1217
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1151,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1160,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 1217,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 1217,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 1217,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 1217,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 1217,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 1217,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1218,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1151,
								1160
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
					"exportedSymbols": {
						"ERC20": [
							1139
						],
						"ERC20Capped": [
							1316
						]
					},
					"id": 1317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1219,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1317,
							"sourceUnit": 1140,
							"src": "148:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1220,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1139,
										"src": "156:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1223,
										"name": "ERC20",
										"nameLocations": [
											"296:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1139,
										"src": "296:5:6"
									},
									"id": 1224,
									"nodeType": "InheritanceSpecifier",
									"src": "296:5:6"
								}
							],
							"canonicalName": "ERC20Capped",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1222,
								"nodeType": "StructuredDocumentation",
								"src": "185:77:6",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens."
							},
							"fullyImplemented": true,
							"id": 1316,
							"linearizedBaseContracts": [
								1316,
								1139,
								421,
								1342,
								1217,
								1372
							],
							"name": "ERC20Capped",
							"nameLocation": "281:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1226,
									"mutability": "immutable",
									"name": "_cap",
									"nameLocation": "334:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1316,
									"src": "308:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1225,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "308:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "345:59:6",
										"text": " @dev Total supply cap has been exceeded."
									},
									"errorSelector": "9e79f854",
									"id": 1233,
									"name": "ERC20ExceededCap",
									"nameLocation": "415:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "increasedSupply",
												"nameLocation": "440:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "432:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "465:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "457:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:38:6"
									},
									"src": "409:61:6"
								},
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "476:60:6",
										"text": " @dev The supplied cap is not a valid cap."
									},
									"errorSelector": "392e1e27",
									"id": 1238,
									"name": "ERC20InvalidCap",
									"nameLocation": "547:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "571:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "563:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:13:6"
									},
									"src": "541:35:6"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "742:102:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1244,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "756:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "764:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "756:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"nodeType": "IfStatement",
												"src": "752:65:6",
												"trueBody": {
													"id": 1251,
													"nodeType": "Block",
													"src": "767:50:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1247,
																	"name": "ERC20InvalidCap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "788:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "788:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1250,
															"nodeType": "RevertStatement",
															"src": "781:25:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1253,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "826:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1254,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "833:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "826:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "826:11:6"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "582:129:6",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 1258,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "736:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:14:6"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:0:6"
									},
									"scope": 1316,
									"src": "716:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "976:28:6",
										"statements": [
											{
												"expression": {
													"id": 1264,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1226,
													"src": "993:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1265,
												"nodeType": "Return",
												"src": "986:11:6"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "850:68:6",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "932:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:6"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "967:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:9:6"
									},
									"scope": 1316,
									"src": "923:81:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										946
									],
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "1120:287:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1281,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "1144:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1282,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "1150:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "1154:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1278,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1130:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Capped_$1316_$",
																"typeString": "type(contract super ERC20Capped)"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1136:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "1130:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "1130:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1286,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "1175:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1191:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1183:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1287,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1183:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1183:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1175:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "1171:230:6",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "1195:206:6",
													"statements": [
														{
															"assignments": [
																1293
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1293,
																	"mutability": "mutable",
																	"name": "maxSupply",
																	"nameLocation": "1217:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1312,
																	"src": "1209:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1292,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1209:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1296,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1294,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "1229:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1229:5:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1209:25:6"
														},
														{
															"assignments": [
																1298
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1298,
																	"mutability": "mutable",
																	"name": "supply",
																	"nameLocation": "1256:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1312,
																	"src": "1248:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1297,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1248:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1301,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1299,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "1265:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1265:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1248:30:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1302,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "1296:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1303,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "1305:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1296:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1311,
															"nodeType": "IfStatement",
															"src": "1292:99:6",
															"trueBody": {
																"id": 1310,
																"nodeType": "Block",
																"src": "1316:75:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1306,
																					"name": "supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1298,
																					"src": "1358:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1307,
																					"name": "maxSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1293,
																					"src": "1366:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1305,
																				"name": "ERC20ExceededCap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "1341:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256) pure"
																				}
																			},
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1341:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1309,
																		"nodeType": "RevertStatement",
																		"src": "1334:42:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "1010:21:6",
										"text": "@inheritdoc ERC20"
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1045:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1276,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1111:8:6"
									},
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1061:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1053:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1075:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1067:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1087:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1079:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:41:6"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:0:6"
									},
									"scope": 1316,
									"src": "1036:371:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1317,
							"src": "263:1146:6",
							"usedErrors": [
								391,
								396,
								401,
								410,
								415,
								420,
								1233,
								1238
							],
							"usedEvents": [
								1151,
								1160
							]
						}
					],
					"src": "122:1288:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1217
						],
						"IERC20Metadata": [
							1342
						]
					},
					"id": 1343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1318,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1343,
							"sourceUnit": 1218,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1319,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1217,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1322,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1217,
										"src": "306:6:7"
									},
									"id": 1323,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1321,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1342,
							"linearizedBaseContracts": [
								1342,
								1217
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1326,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 1342,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1342,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1338,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 1342,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1343,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								1151,
								1160
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1372
						]
					},
					"id": 1373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1344,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1345,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1372,
							"linearizedBaseContracts": [
								1372
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1350,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1352,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1372,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1359,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1358,
												"id": 1361,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1372,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1367,
												"id": 1369,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1372,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1373,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1396
						],
						"IERC165": [
							1408
						]
					},
					"id": 1397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1374,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1376,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1397,
							"sourceUnit": 1409,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1375,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1408,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1378,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1408,
										"src": "688:7:9"
									},
									"id": 1379,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1377,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1396,
							"linearizedBaseContracts": [
								1396,
								1408
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "812:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1387,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "829:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1389,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1408,
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1408_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1408_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1388,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1408",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1393,
												"nodeType": "Return",
												"src": "822:47:9"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:9",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "757:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:9"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "806:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:9"
									},
									"scope": 1396,
									"src": "730:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1397,
							"src": "660:218:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1408
						]
					},
					"id": 1409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1398,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1399,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1408,
							"linearizedBaseContracts": [
								1408
							],
							"name": "IERC165",
							"nameLocation": "433:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "819:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1401,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:10"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "862:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:10"
									},
									"scope": 1408,
									"src": "792:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1409,
							"src": "423:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:10"
				},
				"id": 10
			},
			"contracts/ub.sol": {
				"ast": {
					"absolutePath": "contracts/ub.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"ERC20": [
							1139
						],
						"ERC20Capped": [
							1316
						],
						"IERC20": [
							1217
						],
						"Pausable": [
							624
						],
						"Unibase": [
							1757
						]
					},
					"id": 1758,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1413,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1758,
							"sourceUnit": 1140,
							"src": "71:76:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1411,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1139,
										"src": "79:5:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1412,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1217,
										"src": "86:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"id": 1415,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1758,
							"sourceUnit": 1317,
							"src": "148:91:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1414,
										"name": "ERC20Capped",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1316,
										"src": "156:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1758,
							"sourceUnit": 297,
							"src": "240:79:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1416,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 296,
										"src": "248:13:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1758,
							"sourceUnit": 625,
							"src": "320:71:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1418,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 624,
										"src": "328:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1421,
										"name": "Pausable",
										"nameLocations": [
											"546:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 624,
										"src": "546:8:11"
									},
									"id": 1422,
									"nodeType": "InheritanceSpecifier",
									"src": "546:8:11"
								},
								{
									"baseName": {
										"id": 1423,
										"name": "ERC20Capped",
										"nameLocations": [
											"556:11:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1316,
										"src": "556:11:11"
									},
									"id": 1424,
									"nodeType": "InheritanceSpecifier",
									"src": "556:11:11"
								},
								{
									"baseName": {
										"id": 1425,
										"name": "AccessControl",
										"nameLocations": [
											"569:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "569:13:11"
									},
									"id": 1426,
									"nodeType": "InheritanceSpecifier",
									"src": "569:13:11"
								}
							],
							"canonicalName": "Unibase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "393:133:11",
								"text": "@title Unibase Token Contract\n @notice Implements an ERC20 token with a cap, pausability, ownership, and a whitelist feature."
							},
							"fullyImplemented": true,
							"id": 1757,
							"linearizedBaseContracts": [
								1757,
								296,
								1396,
								1408,
								379,
								1316,
								1139,
								421,
								1342,
								1217,
								624,
								1372
							],
							"name": "Unibase",
							"nameLocation": "535:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1431,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "613:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "589:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1427,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "589:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1429,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "637:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1428,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "627:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1430,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "627:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1436,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "682:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "658:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1432,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1434,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "706:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1433,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "696:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1435,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "696:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1440,
									"mutability": "mutable",
									"name": "_isWhitelisted",
									"nameLocation": "760:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "727:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1439,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1437,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "735:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "727:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1438,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "746:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
									"id": 1446,
									"name": "WhitelistUpdated",
									"nameLocation": "787:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "820:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "804:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"indexed": false,
												"mutability": "mutable",
												"name": "isWhitelisted",
												"nameLocation": "834:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "829:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:45:11"
									},
									"src": "781:68:11"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "1431:162:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1468,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1452:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1469,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "1472:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1467,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1441:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "1441:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1473,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "1499:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1474,
															"name": "pauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "1512:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1472,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1488:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "1488:31:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1478,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "1543:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1479,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "1556:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1477,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1529:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "1529:39:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1482,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "1578:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1578:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "1578:8:11"
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "855:390:11",
										"text": "@notice Initializes the contract.\n @param name The name of the token.\n @param symbol The symbol of the token.\n @param cap The maximum total supply of the token (e.g., for 1 million tokens with 18 decimals, pass 1000000 * 10**18).\n @param admin The address to be set as the default admin of the token.\n @param pauser The address to be set as the pauser"
									},
									"id": 1486,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1460,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1449,
													"src": "1400:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1461,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1451,
													"src": "1406:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1462,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1459,
												"name": "ERC20",
												"nameLocations": [
													"1394:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1139,
												"src": "1394:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1394:19:11"
										},
										{
											"arguments": [
												{
													"id": 1464,
													"name": "cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1453,
													"src": "1426:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1465,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1463,
												"name": "ERC20Capped",
												"nameLocations": [
													"1414:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1316,
												"src": "1414:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1414:16:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1285:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1271:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1271:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1313:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1299:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1299:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "1337:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1329:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1358:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1350:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "pauser",
												"nameLocation": "1381:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1373:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:132:11"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:0:11"
									},
									"scope": 1757,
									"src": "1250:343:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "1759:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1493,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "1769:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "1769:8:11"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "1599:107:11",
										"text": "@notice Allows the pause controller address to pause all token transfers for non-whitelisted addresses."
									},
									"functionSelector": "8456cb59",
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1490,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1436,
													"src": "1746:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1491,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1489,
												"name": "onlyRole",
												"nameLocations": [
													"1737:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1737:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1737:21:11"
										}
									],
									"name": "pause",
									"nameLocation": "1720:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1725:2:11"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1759:0:11"
									},
									"scope": 1757,
									"src": "1711:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "1924:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1504,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "1934:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1934:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "1934:10:11"
											}
										]
									},
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "1790:79:11",
										"text": "@notice Allows the pause controller address to unpause the token transfers."
									},
									"functionSelector": "3f4ba83a",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1501,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1436,
													"src": "1911:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1502,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1500,
												"name": "onlyRole",
												"nameLocations": [
													"1902:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1902:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:21:11"
										}
									],
									"name": "unpause",
									"nameLocation": "1883:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1890:2:11"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1924:0:11"
									},
									"scope": 1757,
									"src": "1874:77:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "2184:120:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1518,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "2202:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2220:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2212:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2212:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2212:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2202:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e7465722063616e6e6f74206265207a65726f2061646472657373",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2224:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613",
																"typeString": "literal_string \"Minter cannot be zero address\""
															},
															"value": "Minter cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_097c33ed61e1f94ac2454b0b2c2292099f556a05ecf9feb7515d62e08b457613",
																"typeString": "literal_string \"Minter cannot be zero address\""
															}
														],
														"id": 1517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2194:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2194:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "2194:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1528,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2277:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1529,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "2290:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1527,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2266:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2266:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "2266:31:11"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1957:149:11",
										"text": "@notice Set the minter address by granting MINTER_ROLE to the specified address.\n @param minter The address to be granted the MINTER_ROLE."
									},
									"functionSelector": "fca3b5aa",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1514,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "2164:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1515,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1513,
												"name": "onlyRole",
												"nameLocations": [
													"2155:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2155:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2155:28:11"
										}
									],
									"name": "setMinter",
									"nameLocation": "2120:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "2138:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "2130:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:16:11"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2184:0:11"
									},
									"scope": 1757,
									"src": "2111:193:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "2571:34:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1545,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "2587:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1546,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "2591:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1544,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "2581:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "2581:17:11"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "2310:183:11",
										"text": "@notice Allows the minter to mint new tokens, up to the cap.\n @param to The address that will receive the minted tokens.\n @param amount The amount of tokens to mint."
									},
									"functionSelector": "40c10f19",
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1541,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1431,
													"src": "2558:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1540,
												"name": "onlyRole",
												"nameLocations": [
													"2549:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2549:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2549:21:11"
										}
									],
									"name": "mint",
									"nameLocation": "2507:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2520:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "2512:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2532:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "2524:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2511:28:11"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2571:0:11"
									},
									"scope": 1757,
									"src": "2498:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "2785:47:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1558,
														"name": "_isWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "2802:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1560,
													"indexExpression": {
														"id": 1559,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "2817:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2802:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1561,
												"nodeType": "Return",
												"src": "2795:30:11"
											}
										]
									},
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "2611:100:11",
										"text": "@notice Returns true if the account is whitelisted.\n @param account The address to check."
									},
									"functionSelector": "3af32abf",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "2725:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2739:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:17:11"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2779:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2779:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:6:11"
									},
									"scope": 1757,
									"src": "2716:116:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "3020:170:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1573,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "3038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3057:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3049:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1574,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3049:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3049:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3038:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742077686974656c69737420746865207a65726f2061646472657373",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3061:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba",
																"typeString": "literal_string \"cannot whitelist the zero address\""
															},
															"value": "cannot whitelist the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71306ed2aa3bde4f64dc04740cc6d07e72321175f874c24bbe2631f5b3e283ba",
																"typeString": "literal_string \"cannot whitelist the zero address\""
															}
														],
														"id": 1572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3030:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3030:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "3030:67:11"
											},
											{
												"expression": {
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1582,
															"name": "_isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "3107:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1584,
														"indexExpression": {
															"id": 1583,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "3122:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3107:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3133:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3107:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1587,
												"nodeType": "ExpressionStatement",
												"src": "3107:30:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1589,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "3169:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3178:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1588,
														"name": "WhitelistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "3152:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3152:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "EmitStatement",
												"src": "3147:36:11"
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "2838:105:11",
										"text": "@notice Adds an address to the whitelist.\n @param account The address to add to the whitelist."
									},
									"functionSelector": "e43252d7",
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1569,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1436,
													"src": "3007:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1570,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1568,
												"name": "onlyRole",
												"nameLocations": [
													"2998:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2998:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2998:21:11"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "2957:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2980:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "2972:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2971:17:11"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3020:0:11"
									},
									"scope": 1757,
									"src": "2948:242:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "3407:175:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1604,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "3425:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3444:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3436:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1605,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3436:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3436:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3425:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f7420756e2d77686974656c69737420746865207a65726f2061646472657373",
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3448:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181",
																"typeString": "literal_string \"cannot un-whitelist the zero address\""
															},
															"value": "cannot un-whitelist the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71b13fcdb18bd2f7607f4a89867d6c8749991cc87be9ce6a16510b41b12fb181",
																"typeString": "literal_string \"cannot un-whitelist the zero address\""
															}
														],
														"id": 1603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3417:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3417:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "3417:70:11"
											},
											{
												"expression": {
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1613,
															"name": "_isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "3497:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1615,
														"indexExpression": {
															"id": 1614,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "3512:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3497:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3523:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3497:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "3497:31:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1620,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "3560:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3569:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1619,
														"name": "WhitelistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "3543:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3543:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1623,
												"nodeType": "EmitStatement",
												"src": "3538:37:11"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "3196:115:11",
										"text": "@notice Removes an address from the whitelist.\n @param account The address to remove from the whitelist."
									},
									"functionSelector": "8ab1d681",
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1600,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1436,
													"src": "3394:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1601,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1599,
												"name": "onlyRole",
												"nameLocations": [
													"3385:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "3385:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3385:21:11"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "3325:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3362:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3354:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3344:31:11"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3407:0:11"
									},
									"scope": 1757,
									"src": "3316:266:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1315
									],
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "3824:428:11",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1636,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "3838:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3838:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "3834:372:11",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "3848:358:11",
													"statements": [
														{
															"assignments": [
																1639
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1639,
																	"mutability": "mutable",
																	"name": "isMinting",
																	"nameLocation": "3867:9:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1675,
																	"src": "3862:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1638,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3862:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1646,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1640,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1628,
																	"src": "3879:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3895:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3887:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1641,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3887:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3887:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3879:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3862:35:11"
														},
														{
															"assignments": [
																1648
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1648,
																	"mutability": "mutable",
																	"name": "isBurning",
																	"nameLocation": "3916:9:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1675,
																	"src": "3911:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1647,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3911:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1655,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1649,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "3928:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3942:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3934:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1650,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3934:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3934:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3928:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3911:33:11"
														},
														{
															"assignments": [
																1657
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1657,
																	"mutability": "mutable",
																	"name": "isWhitelistedTransfer",
																	"nameLocation": "3963:21:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1675,
																	"src": "3958:26:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1656,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3958:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1665,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1658,
																		"name": "_isWhitelisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "3987:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1660,
																	"indexExpression": {
																		"id": 1659,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "4002:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3987:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1661,
																		"name": "_isWhitelisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "4011:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1663,
																	"indexExpression": {
																		"id": 1662,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "4026:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4011:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3987:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3958:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1667,
																				"name": "isMinting",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "4068:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"id": 1668,
																				"name": "isBurning",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1648,
																				"src": "4081:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "4068:22:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"id": 1670,
																			"name": "isWhitelistedTransfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "4094:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4068:47:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546f6b656e3a207472616e73666572207768696c652070617573656420286e6f742077686974656c697374656429",
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4133:48:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e",
																			"typeString": "literal_string \"Token: transfer while paused (not whitelisted)\""
																		},
																		"value": "Token: transfer while paused (not whitelisted)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_884c970cb6b76438e9214f6e3596b126094102eb885a32d30ba1109938cdf65e",
																			"typeString": "literal_string \"Token: transfer while paused (not whitelisted)\""
																		}
																	],
																	"id": 1666,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4043:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4043:152:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1674,
															"nodeType": "ExpressionStatement",
															"src": "4043:152:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1680,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "4229:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1681,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "4235:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1682,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "4239:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1677,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4215:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Unibase_$1757_$",
																"typeString": "type(contract super Unibase)"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4221:7:11",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1315,
														"src": "4215:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "4215:30:11"
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "3588:113:11",
										"text": "@notice Checks if the contract is paused before every transfer, mint, or burn, and verifies whitelist status."
									},
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3719:7:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1634,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3815:8:11"
									},
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3744:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "3736:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "3758:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3786:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "3778:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3726:71:11"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3824:0:11"
									},
									"scope": 1757,
									"src": "3710:542:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "4258:246:11",
										"text": "@notice Recover ERC20 tokens mistakenly sent to this contract.\n @param token The address of the ERC20 token contract.\n @param to The address to receive the recovered tokens.\n @param amount The amount of tokens to recover."
									},
									"eventSelector": "aca8fb252cde442184e5f10e0f2e6e4029e8cd7717cae63559079610702436aa",
									"id": 1695,
									"name": "ERC20Recovered",
									"nameLocation": "4515:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4555:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "4539:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4539:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4586:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "4570:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4606:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "4598:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4598:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:89:11"
									},
									"src": "4509:110:11"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "4758:366:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1708,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "4776:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4790:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4782:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1709,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4782:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4782:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4776:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742073656e6420746f207a65726f2061646472657373",
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4794:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee",
																"typeString": "literal_string \"cannot send to zero address\""
															},
															"value": "cannot send to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee",
																"typeString": "literal_string \"cannot send to zero address\""
															}
														],
														"id": 1707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4768:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4768:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "4768:56:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1718,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "4842:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4859:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4851:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1719,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4851:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4851:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4842:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4863:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4",
																"typeString": "literal_string \"token address cannot be zero\""
															},
															"value": "token address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee60d9cfbfaa1e43a1143eed4db1ec33c4df77087278f0c79a0146b0a38209e4",
																"typeString": "literal_string \"token address cannot be zero\""
															}
														],
														"id": 1717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4834:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "4834:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1728,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "4912:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4921:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4912:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4924:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad",
																"typeString": "literal_string \"amount must be greater than zero\""
															},
															"value": "amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa395b6a6f4d717a8f436942b6d1fe54bfa5998054fa89d964a0583cfff724ad",
																"typeString": "literal_string \"amount must be greater than zero\""
															}
														],
														"id": 1727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4904:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4904:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "4904:55:11"
											},
											{
												"assignments": [
													1735
												],
												"declarations": [
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4974:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "4969:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1734,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4969:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": {
													"arguments": [
														{
															"id": 1740,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "5007:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1741,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "5011:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1737,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "4991:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1736,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "4984:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1217_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4984:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1217",
																"typeString": "contract IERC20"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4998:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1184,
														"src": "4984:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4984:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4969:49:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1745,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "5036:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433230207472616e73666572206661696c6564",
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5045:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															},
															"value": "ERC20 transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															}
														],
														"id": 1744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5028:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5028:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "5028:41:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1750,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "5099:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1751,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "5106:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1752,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "5110:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1749,
														"name": "ERC20Recovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "5084:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5084:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1754,
												"nodeType": "EmitStatement",
												"src": "5079:38:11"
											}
										]
									},
									"functionSelector": "1171bda9",
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1704,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "4738:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1703,
												"name": "onlyRole",
												"nameLocations": [
													"4729:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4729:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4729:28:11"
										}
									],
									"name": "recoverERC20",
									"nameLocation": "4634:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4664:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "4656:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4687:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "4679:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4679:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4707:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "4699:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4699:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4646:73:11"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4758:0:11"
									},
									"scope": 1757,
									"src": "4625:499:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1758,
							"src": "526:4600:11",
							"usedErrors": [
								306,
								309,
								391,
								396,
								401,
								410,
								415,
								420,
								1233,
								1238
							],
							"usedEvents": [
								318,
								327,
								336,
								527,
								532,
								1151,
								1160,
								1446,
								1695
							]
						}
					],
					"src": "45:5082:11"
				},
				"id": 11
			}
		}
	}
}